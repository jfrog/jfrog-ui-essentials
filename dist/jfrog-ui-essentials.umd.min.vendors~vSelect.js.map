{"version":3,"sources":["webpack://jfrog-ui-essentials/./node_modules/vue-select/src/components/Select.vue?58b4","webpack://jfrog-ui-essentials/./node_modules/vue-select/src/mixins/pointerScroll.js","webpack://jfrog-ui-essentials/./node_modules/core-js/modules/_string-trim.js","webpack://jfrog-ui-essentials/./node_modules/vue-select/src/mixins/ajax.js","webpack://jfrog-ui-essentials/./node_modules/vue-select/src/components/Select.vue?2423","webpack://jfrog-ui-essentials/node_modules/vue-select/src/components/Select.vue","webpack://jfrog-ui-essentials/./node_modules/vue-select/src/components/Select.vue?efd4","webpack://jfrog-ui-essentials/./node_modules/vue-select/src/components/Select.vue","webpack://jfrog-ui-essentials/./node_modules/core-js/modules/es6.number.constructor.js","webpack://jfrog-ui-essentials/./node_modules/vue-select/src/mixins/typeAheadPointer.js","webpack://jfrog-ui-essentials/./node_modules/core-js/modules/_string-ws.js"],"names":["module","exports","watch","this","maybeAdjustScroll","methods","pixelsToPointerTop","pixelsToPointerBottom","viewport","top","scrollTo","bottom","pointerHeight","$refs","dropdownMenu","i","typeAheadPointer","children","offsetHeight","element","scrollTop","position","$export","defined","fails","spaces","space","non","ltrim","RegExp","rtrim","exporter","KEY","exec","ALIAS","exp","FORCE","fn","trim","P","F","string","TYPE","String","replace","props","loading","type","Boolean","default","onSearch","Function","search","mutableLoading","length","toggleLoading","$emit","val","toggle","render","_vm","_h","$createElement","_c","_self","staticClass","class","dropdownClasses","attrs","dir","ref","on","$event","preventDefault","toggleDropdown","_l","option","_obj","_obj$1","_t","key","index","_v","_s","getOptionLabel","label","disabled","deselect","_e","multiple","autocomplete","searchPlaceholder","tabindex","searchable","inputId","dropdownOpen","domProps","indexOf","_k","keyCode","maybeDeleteValue","typeAheadUp","typeAheadDown","typeAheadSelect","onTab","onEscape","onSearchBlur","onSearchFocus","target","value","directives","name","rawName","expression","clearSelection","noDrop","transition","style","maxHeight","onMousedown","onMouseup","active","isOptionSelected","highlight","stopPropagation","select","filteredOptions","staticRenderFns","component","global","has","cof","inheritIfRequired","toPrimitive","gOPN","f","gOPD","dP","$trim","NUMBER","$Number","Base","proto","prototype","BROKEN_COF","TRIM","toNumber","argument","it","third","radix","maxCode","first","charCodeAt","NaN","code","digits","slice","l","parseInt","arguments","that","valueOf","call","keys","split","j","constructor","taggable","clearSearchOnSelect"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.vendors~vSelect.js","sourcesContent":["export * from \"-!../../../mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../css-loader/index.js??ref--6-oneOf-1-1!../../../vue-loader/lib/loaders/stylePostLoader.js!../../../postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../cache-loader/dist/cjs.js??ref--0-0!../../../vue-loader/lib/index.js??vue-loader-options!./Select.vue?vue&type=style&index=0&lang=css&\"","// flow\n\nmodule.exports = {\n  watch: {\n    typeAheadPointer() {\n      this.maybeAdjustScroll()\n    }\n  },\n\n  methods: {\n    /**\n     * Adjust the scroll position of the dropdown list\n     * if the current pointer is outside of the\n     * overflow bounds.\n     * @returns {*}\n     */\n    maybeAdjustScroll() {\n      let pixelsToPointerTop = this.pixelsToPointerTop()\n      let pixelsToPointerBottom = this.pixelsToPointerBottom()\n\n      if ( pixelsToPointerTop <= this.viewport().top) {\n        return this.scrollTo( pixelsToPointerTop )\n      } else if (pixelsToPointerBottom >= this.viewport().bottom) {\n        return this.scrollTo( this.viewport().top + this.pointerHeight() )\n      }\n    },\n\n    /**\n     * The distance in pixels from the top of the dropdown\n     * list to the top of the current pointer element.\n     * @returns {number}\n     */\n    pixelsToPointerTop() {\n      let pixelsToPointerTop = 0\n      if( this.$refs.dropdownMenu ) {\n        for (let i = 0; i < this.typeAheadPointer; i++) {\n          pixelsToPointerTop += this.$refs.dropdownMenu.children[i].offsetHeight\n        }\n      }\n      return pixelsToPointerTop\n    },\n\n    /**\n     * The distance in pixels from the top of the dropdown\n     * list to the bottom of the current pointer element.\n     * @returns {*}\n     */\n    pixelsToPointerBottom() {\n      return this.pixelsToPointerTop() + this.pointerHeight()\n    },\n\n    /**\n     * The offsetHeight of the current pointer element.\n     * @returns {number}\n     */\n    pointerHeight() {\n      let element = this.$refs.dropdownMenu ? this.$refs.dropdownMenu.children[this.typeAheadPointer] : false\n      return element ? element.offsetHeight : 0\n    },\n\n    /**\n     * The currently viewable portion of the dropdownMenu.\n     * @returns {{top: (string|*|number), bottom: *}}\n     */\n    viewport() {\n      return {\n        top: this.$refs.dropdownMenu ? this.$refs.dropdownMenu.scrollTop: 0,\n        bottom: this.$refs.dropdownMenu ? this.$refs.dropdownMenu.offsetHeight + this.$refs.dropdownMenu.scrollTop : 0\n      }\n    },\n\n    /**\n     * Scroll the dropdownMenu to a given position.\n     * @param position\n     * @returns {*}\n     */\n    scrollTo(position) {\n      return this.$refs.dropdownMenu ? this.$refs.dropdownMenu.scrollTop = position : null\n    },\n  }\n}\n","var $export = require('./_export');\nvar defined = require('./_defined');\nvar fails = require('./_fails');\nvar spaces = require('./_string-ws');\nvar space = '[' + spaces + ']';\nvar non = '\\u200b\\u0085';\nvar ltrim = RegExp('^' + space + space + '*');\nvar rtrim = RegExp(space + space + '*$');\n\nvar exporter = function (KEY, exec, ALIAS) {\n  var exp = {};\n  var FORCE = fails(function () {\n    return !!spaces[KEY]() || non[KEY]() != non;\n  });\n  var fn = exp[KEY] = FORCE ? exec(trim) : spaces[KEY];\n  if (ALIAS) exp[ALIAS] = fn;\n  $export($export.P + $export.F * FORCE, 'String', exp);\n};\n\n// 1 -> String#trimLeft\n// 2 -> String#trimRight\n// 3 -> String#trim\nvar trim = exporter.trim = function (string, TYPE) {\n  string = String(defined(string));\n  if (TYPE & 1) string = string.replace(ltrim, '');\n  if (TYPE & 2) string = string.replace(rtrim, '');\n  return string;\n};\n\nmodule.exports = exporter;\n","module.exports = {\n\tprops: {\n\t\t/**\n\t\t * Toggles the adding of a 'loading' class to the main\n\t\t * .v-select wrapper. Useful to control UI state when\n\t\t * results are being processed through AJAX.\n\t\t */\n\t\tloading: {\n\t\t\ttype: Boolean,\n\t\t\tdefault: false\n\t\t},\n\n\t\t/**\n\t\t * Accept a callback function that will be\n\t\t * run when the search text changes.\n\t\t *\n\t\t * loading() accepts a boolean value, and can\n\t\t * be used to toggle a loading class from\n\t\t * the onSearch callback.\n\t\t *\n\t\t * @param {search}  String          Current search text\n\t\t * @param {loading} Function(bool)  Toggle loading class\n\t\t */\n\t\tonSearch: {\n\t\t\ttype: Function,\n\t\t\tdefault: function(search, loading){}\n\t\t}\n\t},\n\n\tdata() {\n\t\treturn {\n      mutableLoading: false\n    }\n\t},\n\n\twatch: {\n\t\t/**\n\t\t * If a callback & search text has been provided,\n\t\t * invoke the onSearch callback.\n\t\t */\n\t\tsearch() {\n\t\t\tif (this.search.length > 0) {\n\t\t\t\tthis.onSearch(this.search, this.toggleLoading)\n        this.$emit('search', this.search, this.toggleLoading)\n      }\n\t\t},\n    /**\n\t\t * Sync the loading prop with the internal\n\t\t * mutable loading value.\n     * @param val\n     */\n\t\tloading(val) {\n\t\t\tthis.mutableLoading = val\n\t\t}\n\t},\n\n\tmethods: {\n\t\t/**\n\t\t * Toggle this.loading. Optionally pass a boolean\n\t\t * value. If no value is provided, this.loading\n\t\t * will be set to the opposite of it's current value.\n\t\t * @param toggle Boolean\n\t\t * @returns {*}\n\t\t */\n\t\ttoggleLoading(toggle = null) {\n\t\t\tif (toggle == null) {\n\t\t\t\treturn this.mutableLoading = !this.mutableLoading\n\t\t\t}\n\t\t\treturn this.mutableLoading = toggle\n\t\t}\n\t}\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"dropdown v-select\",class:_vm.dropdownClasses,attrs:{\"dir\":_vm.dir}},[_c('div',{ref:\"toggle\",staticClass:\"dropdown-toggle\",on:{\"mousedown\":function($event){$event.preventDefault();return _vm.toggleDropdown($event)}}},[_c('div',{ref:\"selectedOptions\",staticClass:\"vs__selected-options\"},[_vm._l((_vm.valueAsArray),function(option){\nvar _obj, _obj$1;\nreturn _vm._t(\"selected-option-container\",[_c('span',{key:option.index,staticClass:\"selected-tag\"},[_vm._t(\"selected-option\",[_vm._v(\"\\n            \"+_vm._s(_vm.getOptionLabel(option))+\"\\n          \")],null,(typeof option === 'object')?option:( _obj = {}, _obj[_vm.label] = option, _obj )),(_vm.multiple)?_c('button',{staticClass:\"close\",attrs:{\"disabled\":_vm.disabled,\"type\":\"button\",\"aria-label\":\"Remove option\"},on:{\"click\":function($event){return _vm.deselect(option)}}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])]):_vm._e()],2)],{\"option\":(typeof option === 'object')?option:( _obj$1 = {}, _obj$1[_vm.label] = option, _obj$1 ),\"deselect\":_vm.deselect,\"multiple\":_vm.multiple,\"disabled\":_vm.disabled})}),_c('input',{ref:\"search\",staticClass:\"form-control\",attrs:{\"type\":\"search\",\"autocomplete\":_vm.autocomplete,\"disabled\":_vm.disabled,\"placeholder\":_vm.searchPlaceholder,\"tabindex\":_vm.tabindex,\"readonly\":!_vm.searchable,\"id\":_vm.inputId,\"role\":\"combobox\",\"aria-expanded\":_vm.dropdownOpen,\"aria-label\":\"Search for option\"},domProps:{\"value\":_vm.search},on:{\"keydown\":[function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"delete\",[8,46],$event.key,[\"Backspace\",\"Delete\",\"Del\"])){ return null; }return _vm.maybeDeleteValue($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"up\",38,$event.key,[\"Up\",\"ArrowUp\"])){ return null; }$event.preventDefault();return _vm.typeAheadUp($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"down\",40,$event.key,[\"Down\",\"ArrowDown\"])){ return null; }$event.preventDefault();return _vm.typeAheadDown($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"enter\",13,$event.key,\"Enter\")){ return null; }$event.preventDefault();return _vm.typeAheadSelect($event)},function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"tab\",9,$event.key,\"Tab\")){ return null; }return _vm.onTab($event)}],\"keyup\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"esc\",27,$event.key,[\"Esc\",\"Escape\"])){ return null; }return _vm.onEscape($event)},\"blur\":_vm.onSearchBlur,\"focus\":_vm.onSearchFocus,\"input\":function($event){_vm.search = $event.target.value}}})],2),_c('div',{staticClass:\"vs__actions\"},[_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showClearButton),expression:\"showClearButton\"}],staticClass:\"clear\",attrs:{\"disabled\":_vm.disabled,\"type\":\"button\",\"title\":\"Clear selection\"},on:{\"click\":_vm.clearSelection}},[_c('span',{attrs:{\"aria-hidden\":\"true\"}},[_vm._v(\"×\")])]),(!_vm.noDrop)?_c('i',{ref:\"openIndicator\",staticClass:\"open-indicator\",attrs:{\"role\":\"presentation\"}}):_vm._e(),_vm._t(\"spinner\",[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.mutableLoading),expression:\"mutableLoading\"}],staticClass:\"spinner\"},[_vm._v(\"Loading...\")])])],2)]),_c('transition',{attrs:{\"name\":_vm.transition}},[(_vm.dropdownOpen)?_c('ul',{ref:\"dropdownMenu\",staticClass:\"dropdown-menu\",style:({ 'max-height': _vm.maxHeight }),attrs:{\"role\":\"listbox\"},on:{\"mousedown\":_vm.onMousedown,\"mouseup\":_vm.onMouseup}},[_vm._l((_vm.filteredOptions),function(option,index){\nvar _obj;\nreturn _c('li',{key:index,class:{ active: _vm.isOptionSelected(option), highlight: index === _vm.typeAheadPointer },attrs:{\"role\":\"option\"},on:{\"mouseover\":function($event){_vm.typeAheadPointer = index}}},[_c('a',{on:{\"mousedown\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.select(option)}}},[_vm._t(\"option\",[_vm._v(\"\\n          \"+_vm._s(_vm.getOptionLabel(option))+\"\\n        \")],null,(typeof option === 'object')?option:( _obj = {}, _obj[_vm.label] = option, _obj ))],2)])}),(!_vm.filteredOptions.length)?_c('li',{staticClass:\"no-options\",on:{\"mousedown\":function($event){$event.stopPropagation();}}},[_vm._t(\"no-options\",[_vm._v(\"Sorry, no matching options.\")])],2):_vm._e()],2):_vm._e()])],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<style>\n  .v-select {\n    position: relative;\n    font-family: inherit;\n  }\n  .v-select,\n  .v-select * {\n    -webkit-box-sizing: border-box;\n    -moz-box-sizing: border-box;\n    box-sizing: border-box;\n  }\n\n  /* Rtl support - Because we're using a flexbox-based layout, the `dir=\"rtl\"` HTML\n     attribute does most of the work for us by rearranging the child elements visually.\n   */\n  .v-select[dir=\"rtl\"] .vs__actions {\n    padding: 0 3px 0 6px;\n  }\n  .v-select[dir=\"rtl\"] .dropdown-toggle .clear {\n    margin-left: 6px;\n    margin-right: 0;\n  }\n  .v-select[dir=\"rtl\"] .selected-tag .close {\n    margin-left: 0;\n    margin-right: 2px;\n  }\n  .v-select[dir=\"rtl\"] .dropdown-menu {\n    text-align: right;\n  }\n\n  /* Open Indicator */\n  .v-select .open-indicator {\n    display: flex;\n    align-items: center;\n    cursor: pointer;\n    pointer-events: all;\n    transition: all 150ms cubic-bezier(1.000, -0.115, 0.975, 0.855);\n    transition-timing-function: cubic-bezier(1.000, -0.115, 0.975, 0.855);\n    opacity: 1;\n    width: 12px; /* To account for extra width from rotating. */\n  }\n  .v-select .open-indicator:before {\n    border-color: rgba(60, 60, 60, .5);\n    border-style: solid;\n    border-width: 3px 3px 0 0;\n    content: '';\n    display: inline-block;\n    height: 10px;\n    width: 10px;\n    vertical-align: text-top;\n    transform: rotate(133deg);\n    transition: all 150ms cubic-bezier(1.000, -0.115, 0.975, 0.855);\n    transition-timing-function: cubic-bezier(1.000, -0.115, 0.975, 0.855);\n    box-sizing: inherit;\n  }\n  /* Open Indicator States */\n  .v-select.open .open-indicator:before {\n    transform: rotate(315deg);\n  }\n  .v-select.loading .open-indicator {\n    opacity: 0;\n  }\n\n  /* Dropdown Toggle */\n  .v-select .dropdown-toggle {\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    display: flex;\n    padding: 0 0 4px 0;\n    background: none;\n    border: 1px solid rgba(60, 60, 60, .26);\n    border-radius: 4px;\n    white-space: normal;\n  }\n  .v-select .dropdown-toggle::after {\n    display: none;\n  }\n  .v-select .vs__selected-options {\n    display: flex;\n    flex-basis: 100%;\n    flex-grow: 1;\n    flex-wrap: wrap;\n    padding: 0 2px;\n    position: relative;\n  }\n  .v-select .vs__actions {\n    display: flex;\n    align-items: stretch;\n    padding: 0 6px 0 3px;\n  }\n\n  /* Clear Button */\n  .v-select .dropdown-toggle .clear {\n    font-size: 23px;\n    font-weight: 700;\n    line-height: 1;\n    color: rgba(60, 60, 60, 0.5);\n    padding: 0;\n    border: 0;\n    background-color: transparent;\n    cursor: pointer;\n    margin-right: 6px;\n  }\n\n  /* Dropdown Toggle States */\n  .v-select.searchable .dropdown-toggle {\n    cursor: text;\n  }\n  .v-select.unsearchable .dropdown-toggle {\n    cursor: pointer;\n  }\n  .v-select.open .dropdown-toggle {\n    border-bottom-color: transparent;\n    border-bottom-left-radius: 0;\n    border-bottom-right-radius: 0;\n  }\n  /* Dropdown Menu */\n  .v-select .dropdown-menu {\n    display:block;\n    position: absolute;\n    top: 100%;\n    left: 0;\n    z-index: 1000;\n    min-width: 160px;\n    padding: 5px 0;\n    margin: 0;\n    width: 100%;\n    overflow-y: auto;\n    border: 1px solid rgba(0, 0, 0, .26);\n    box-shadow: 0px 3px 6px 0px rgba(0,0,0,.15);\n    border-top: none;\n    border-radius: 0 0 4px 4px;\n    text-align: left;\n    list-style: none;\n    background: #fff;\n  }\n  .v-select .no-options {\n    text-align: center;\n  }\n  /* Selected Tags */\n  .v-select .selected-tag {\n    display: flex;\n    align-items: center;\n    background-color: #f0f0f0;\n    border: 1px solid #ccc;\n    border-radius: 4px;\n    color: #333;\n    line-height: 1.42857143; /* Normalize line height */\n    margin: 4px 2px 0px 2px;\n    padding: 0 0.25em;\n    transition: opacity .25s;\n  }\n  .v-select.single .selected-tag {\n    background-color: transparent;\n    border-color: transparent;\n  }\n  .v-select.single.open .selected-tag {\n    position: absolute;\n    opacity: .4;\n  }\n  .v-select.single.searching .selected-tag {\n    display: none;\n  }\n  .v-select .selected-tag .close {\n    margin-left: 2px;\n    font-size: 1.25em;\n    appearance: none;\n    padding: 0;\n    cursor: pointer;\n    background: 0 0;\n    border: 0;\n    font-weight: 700;\n    line-height: 1;\n    color: #000;\n    text-shadow: 0 1px 0 #fff;\n    filter: alpha(opacity=20);\n    opacity: .2;\n  }\n  .v-select.single.searching:not(.open):not(.loading) input[type=\"search\"] {\n    opacity: .2;\n  }\n  /* Search Input */\n  .v-select input[type=\"search\"]::-webkit-search-decoration,\n  .v-select input[type=\"search\"]::-webkit-search-cancel-button,\n  .v-select input[type=\"search\"]::-webkit-search-results-button,\n  .v-select input[type=\"search\"]::-webkit-search-results-decoration {\n    display: none;\n  }\n  .v-select input[type=\"search\"]::-ms-clear {\n    display: none;\n  }\n  .v-select input[type=\"search\"],\n  .v-select input[type=\"search\"]:focus {\n    appearance: none;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    line-height: 1.42857143;\n    font-size: 1em;\n    display: inline-block;\n    border: 1px solid transparent;\n    border-left: none;\n    outline: none;\n    margin: 4px 0 0 0;\n    padding: 0 7px;\n    max-width: 100%;\n    background: none;\n    box-shadow: none;\n    flex-grow: 1;\n    width: 0;\n    height: inherit;\n  }\n  .v-select.unsearchable input[type=\"search\"] {\n    opacity: 1;\n  }\n  .v-select.unsearchable input[type=\"search\"]:hover {\n    cursor: pointer;\n  }\n\n  /* List Items */\n  .v-select li {\n    line-height: 1.42857143; /* Normalize line height */\n  }\n  .v-select li > a {\n    display: block;\n    padding: 3px 20px;\n    clear: both;\n    color: #333; /* Overrides most CSS frameworks */\n    white-space: nowrap;\n  }\n  .v-select li:hover {\n    cursor: pointer;\n  }\n  .v-select .dropdown-menu .active > a {\n    color: #333;\n    background: rgba(50, 50, 50, .1);\n  }\n  .v-select .dropdown-menu > .highlight > a {\n    /*\n     * required to override bootstrap 3's\n     * .dropdown-menu > li > a:hover {} styles\n     */\n    background: #5897fb;\n    color: #fff;\n  }\n  .v-select .highlight:not(:last-child) {\n    margin-bottom: 0; /* Fixes Bulma Margin */\n  }\n  /* Loading Spinner */\n  .v-select .spinner {\n    align-self: center;\n    opacity: 0;\n    font-size: 5px;\n    text-indent: -9999em;\n    overflow: hidden;\n    border-top: .9em solid rgba(100, 100, 100, .1);\n    border-right: .9em solid rgba(100, 100, 100, .1);\n    border-bottom: .9em solid rgba(100, 100, 100, .1);\n    border-left: .9em solid rgba(60, 60, 60, .45);\n    transform: translateZ(0);\n    animation: vSelectSpinner 1.1s infinite linear;\n    transition: opacity .1s;\n  }\n  .v-select .spinner,\n  .v-select .spinner:after {\n    border-radius: 50%;\n    width: 5em;\n    height: 5em;\n  }\n\n  /* Disabled state */\n  .v-select.disabled .dropdown-toggle,\n  .v-select.disabled .dropdown-toggle .clear,\n  .v-select.disabled .dropdown-toggle input,\n  .v-select.disabled .selected-tag .close,\n  .v-select.disabled .open-indicator {\n    cursor: not-allowed;\n    background-color: rgb(248, 248, 248);\n  }\n\n  /* Loading Spinner States */\n  .v-select.loading .spinner {\n    opacity: 1;\n  }\n  /* KeyFrames */\n  @-webkit-keyframes vSelectSpinner {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  @keyframes vSelectSpinner {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n  /* Dropdown Default Transition */\n  .fade-enter-active,\n  .fade-leave-active {\n    transition: opacity .15s cubic-bezier(1.0, 0.5, 0.8, 1.0);\n  }\n  .fade-enter,\n  .fade-leave-to {\n    opacity: 0;\n  }\n</style>\n\n<template>\n  <div :dir=\"dir\" class=\"dropdown v-select\" :class=\"dropdownClasses\">\n    <div ref=\"toggle\" @mousedown.prevent=\"toggleDropdown\" class=\"dropdown-toggle\">\n\n      <div class=\"vs__selected-options\" ref=\"selectedOptions\">\n        <slot v-for=\"option in valueAsArray\" name=\"selected-option-container\"\n              :option=\"(typeof option === 'object')?option:{[label]: option}\" :deselect=\"deselect\" :multiple=\"multiple\" :disabled=\"disabled\">\n          <span class=\"selected-tag\" v-bind:key=\"option.index\">\n            <slot name=\"selected-option\" v-bind=\"(typeof option === 'object')?option:{[label]: option}\">\n              {{ getOptionLabel(option) }}\n            </slot>\n            <button v-if=\"multiple\" :disabled=\"disabled\" @click=\"deselect(option)\" type=\"button\" class=\"close\" aria-label=\"Remove option\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </span>\n        </slot>\n\n        <input\n                ref=\"search\"\n                :value=\"search\"\n                @keydown.delete=\"maybeDeleteValue\"\n                @keyup.esc=\"onEscape\"\n                @keydown.up.prevent=\"typeAheadUp\"\n                @keydown.down.prevent=\"typeAheadDown\"\n                @keydown.enter.prevent=\"typeAheadSelect\"\n                @keydown.tab=\"onTab\"\n                @blur=\"onSearchBlur\"\n                @focus=\"onSearchFocus\"\n                @input=\"search = $event.target.value\"\n                type=\"search\"\n                class=\"form-control\"\n                :autocomplete=\"autocomplete\"\n                :disabled=\"disabled\"\n                :placeholder=\"searchPlaceholder\"\n                :tabindex=\"tabindex\"\n                :readonly=\"!searchable\"\n                :id=\"inputId\"\n                role=\"combobox\"\n                :aria-expanded=\"dropdownOpen\"\n                aria-label=\"Search for option\"\n        >\n\n      </div>\n      <div class=\"vs__actions\">\n        <button\n          v-show=\"showClearButton\"\n          :disabled=\"disabled\"\n          @click=\"clearSelection\"\n          type=\"button\"\n          class=\"clear\"\n          title=\"Clear selection\"\n        >\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n\n        <i v-if=\"!noDrop\" ref=\"openIndicator\" role=\"presentation\" class=\"open-indicator\"></i>\n\n        <slot name=\"spinner\">\n          <div class=\"spinner\" v-show=\"mutableLoading\">Loading...</div>\n        </slot>\n      </div>\n    </div>\n\n    <transition :name=\"transition\">\n      <ul ref=\"dropdownMenu\" v-if=\"dropdownOpen\" class=\"dropdown-menu\" :style=\"{ 'max-height': maxHeight }\" role=\"listbox\" @mousedown=\"onMousedown\" @mouseup=\"onMouseup\">\n        <li role=\"option\" v-for=\"(option, index) in filteredOptions\" v-bind:key=\"index\" :class=\"{ active: isOptionSelected(option), highlight: index === typeAheadPointer }\" @mouseover=\"typeAheadPointer = index\">\n          <a @mousedown.prevent.stop=\"select(option)\">\n          <slot name=\"option\" v-bind=\"(typeof option === 'object')?option:{[label]: option}\">\n            {{ getOptionLabel(option) }}\n          </slot>\n          </a>\n        </li>\n        <li v-if=\"!filteredOptions.length\" class=\"no-options\" @mousedown.stop=\"\">\n          <slot name=\"no-options\">Sorry, no matching options.</slot>\n        </li>\n      </ul>\n    </transition>\n  </div>\n</template>\n\n<script type=\"text/babel\">\n  import pointerScroll from '../mixins/pointerScroll'\n  import typeAheadPointer from '../mixins/typeAheadPointer'\n  import ajax from '../mixins/ajax'\n\n  export default {\n    mixins: [pointerScroll, typeAheadPointer, ajax],\n\n    props: {\n      /**\n       * Contains the currently selected value. Very similar to a\n       * `value` attribute on an <input>. You can listen for changes\n       * using 'change' event using v-on\n       * @type {Object||String||null}\n       */\n      value: {\n        default: null\n      },\n\n      /**\n       * An array of strings or objects to be used as dropdown choices.\n       * If you are using an array of objects, vue-select will look for\n       * a `label` key (ex. [{label: 'This is Foo', value: 'foo'}]). A\n       * custom label key can be set with the `label` prop.\n       * @type {Array}\n       */\n      options: {\n        type: Array,\n        default() {\n          return []\n        },\n      },\n\n      /**\n       * Disable the entire component.\n       * @type {Boolean}\n       */\n      disabled: {\n        type: Boolean,\n        default: false\n      },\n\n      /**\n       * Can the user clear the selected property.\n       * @type {Boolean}\n       */\n      clearable: {\n        type: Boolean,\n        default: true\n      },\n\n      /**\n       * Sets the max-height property on the dropdown list.\n       * @deprecated\n       * @type {String}\n       */\n      maxHeight: {\n        type: String,\n        default: '400px'\n      },\n\n      /**\n       * Enable/disable filtering the options.\n       * @type {Boolean}\n       */\n      searchable: {\n        type: Boolean,\n        default: true\n      },\n\n      /**\n       * Equivalent to the `multiple` attribute on a `<select>` input.\n       * @type {Boolean}\n       */\n      multiple: {\n        type: Boolean,\n        default: false\n      },\n\n      /**\n       * Equivalent to the `placeholder` attribute on an `<input>`.\n       * @type {String}\n       */\n      placeholder: {\n        type: String,\n        default: ''\n      },\n\n      /**\n       * Sets a Vue transition property on the `.dropdown-menu`. vue-select\n       * does not include CSS for transitions, you'll need to add them yourself.\n       * @type {String}\n       */\n      transition: {\n        type: String,\n        default: 'fade'\n      },\n\n      /**\n       * Enables/disables clearing the search text when an option is selected.\n       * @type {Boolean}\n       */\n      clearSearchOnSelect: {\n        type: Boolean,\n        default: true\n      },\n\n      /**\n       * Close a dropdown when an option is chosen. Set to false to keep the dropdown\n       * open (useful when combined with multi-select, for example)\n       * @type {Boolean}\n       */\n      closeOnSelect: {\n        type: Boolean,\n        default: true\n      },\n\n      /**\n       * Tells vue-select what key to use when generating option\n       * labels when each `option` is an object.\n       * @type {String}\n       */\n      label: {\n        type: String,\n        default: 'label'\n      },\n\n\n      /**\n       * Value of the 'autocomplete' field of the input\n       * element.\n       * @type {String}\n       */\n      autocomplete: {\n        type: String,\n        default: 'off'\n      },\n\n      /**\n       * Tells vue-select what key to use when generating option\n       * values when each `option` is an object.\n       * @type {String}\n       */\n      index: {\n        type: String,\n        default: null\n      },\n\n      /**\n       * Callback to generate the label text. If {option}\n       * is an object, returns option[this.label] by default.\n       *\n       * Label text is used for filtering comparison and\n       * displaying. If you only need to adjust the\n       * display, you should use the `option` and\n       * `selected-option` slots.\n       *\n       * @type {Function}\n       * @param  {Object || String} option\n       * @return {String}\n       */\n      getOptionLabel: {\n        type: Function,\n        default(option) {\n          if( this.index ) {\n            option = this.findOptionByIndexValue(option)\n          }\n\n          if (typeof option === 'object') {\n            if (!option.hasOwnProperty(this.label)) {\n              return console.warn(\n                `[vue-select warn]: Label key \"option.${this.label}\" does not` +\n                ` exist in options object ${JSON.stringify(option)}.\\n` +\n                'http://sagalbot.github.io/vue-select/#ex-labels'\n              )\n            }\n            return option[this.label]\n          }\n          return option;\n        }\n      },\n\n      /**\n       * An optional callback function that is called each time the selected\n       * value(s) change. When integrating with Vuex, use this callback to trigger\n       * an action, rather than using :value.sync to retreive the selected value.\n       * @type {Function}\n       * @param {Object || String} val\n       */\n      onChange: {\n        type: Function,\n        default: function (val) {\n          this.$emit('change', val);\n        }\n      },\n\n      onInput: {\n        type: Function,\n        default: function (val) {\n          this.$emit('input', val);\n        }\n      },\n\n      /**\n       * Select the current value if selectOnTab is enabled\n       */\n      onTab: {\n        type: Function,\n        default: function () {\n          if (this.selectOnTab) {\n            this.typeAheadSelect();\n          }\n        },\n      },\n\n      /**\n       * Enable/disable creating options from searchInput.\n       * @type {Boolean}\n       */\n      taggable: {\n        type: Boolean,\n        default: false\n      },\n\n      /**\n       * Set the tabindex for the input field.\n       * @type {Number}\n       */\n      tabindex: {\n        type: Number,\n        default: null\n      },\n\n      /**\n       * When true, newly created tags will be added to\n       * the options list.\n       * @type {Boolean}\n       */\n      pushTags: {\n        type: Boolean,\n        default: false\n      },\n\n      /**\n       * When true, existing options will be filtered\n       * by the search text. Should not be used in conjunction\n       * with taggable.\n       * @type {Boolean}\n       */\n      filterable: {\n        type: Boolean,\n        default: true\n      },\n\n      /**\n       * Callback to determine if the provided option should\n       * match the current search text. Used to determine\n       * if the option should be displayed.\n       * @type   {Function}\n       * @param  {Object || String} option\n       * @param  {String} label\n       * @param  {String} search\n       * @return {Boolean}\n       */\n      filterBy: {\n        type: Function,\n        default(option, label, search) {\n          return (label || '').toLowerCase().indexOf(search.toLowerCase()) > -1\n        }\n      },\n\n      /**\n       * Callback to filter results when search text\n       * is provided. Default implementation loops\n       * each option, and returns the result of\n       * this.filterBy.\n       * @type   {Function}\n       * @param  {Array} list of options\n       * @param  {String} search text\n       * @param  {Object} vSelect instance\n       * @return {Boolean}\n       */\n      filter: {\n        \"type\": Function,\n        default(options, search) {\n          return options.filter((option) => {\n            let label = this.getOptionLabel(option)\n            if (typeof label === 'number') {\n              label = label.toString()\n            }\n            return this.filterBy(option, label, search)\n          });\n        }\n      },\n\n      /**\n       * User defined function for adding Options\n       * @type {Function}\n       */\n      createOption: {\n        type: Function,\n        default(newOption) {\n          if (typeof this.mutableOptions[0] === 'object') {\n            newOption = {[this.label]: newOption}\n          }\n          this.$emit('option:created', newOption)\n          return newOption\n        }\n      },\n\n      /**\n       * When false, updating the options will not reset the select value\n       * @type {Boolean}\n       */\n      resetOnOptionsChange: {\n        type: Boolean,\n        default: false\n      },\n\n      /**\n       * Disable the dropdown entirely.\n       * @type {Boolean}\n       */\n      noDrop: {\n        type: Boolean,\n        default: false\n      },\n\n      /**\n       * Sets the id of the input element.\n       * @type {String}\n       * @default {null}\n       */\n      inputId: {\n        type: String\n      },\n\n      /**\n       * Sets RTL support. Accepts 'ltr', 'rtl', 'auto'.\n       * @see https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/dir\n       * @type {String}\n       * @default 'auto'\n       */\n      dir: {\n        type: String,\n        default: 'auto'\n      },\n      /**\n       * When true, hitting the 'tab' key will select the current select value\n       * @type {Boolean}\n       */\n      selectOnTab: {\n        type: Boolean,\n        default: false\n      }\n    },\n\n    data() {\n      return {\n        search: '',\n        open: false,\n        mutableValue: null,\n        mutableOptions: []\n      }\n    },\n\n    watch: {\n      /**\n       * When the value prop changes, update\n       * the internal mutableValue.\n       * @param  {mixed} val\n       * @return {void}\n       */\n      value(val) {\n        this.mutableValue = val\n      },\n\n      /**\n       * Maybe run the onChange callback.\n       * @param  {string|object} val\n       * @param  {string|object} old\n       * @return {void}\n       */\n      mutableValue(val, old) {\n        if (this.multiple) {\n          this.onChange ? this.onChange(val) : null\n        } else {\n          this.onChange && val !== old ? this.onChange(val) : null\n        }\n      },\n\n      /**\n       * When options change, update\n       * the internal mutableOptions.\n       * @param  {array} val\n       * @return {void}\n       */\n      options(val) {\n        this.mutableOptions = val\n      },\n\n      /**\n       * Maybe reset the mutableValue\n       * when mutableOptions change.\n       * @return {[type]} [description]\n       */\n      mutableOptions() {\n        if (!this.taggable && this.resetOnOptionsChange) {\n          this.mutableValue = this.multiple ? [] : null\n        }\n      },\n\n      /**\n       * Always reset the mutableValue when\n       * the multiple prop changes.\n       * @param  {Boolean} val\n       * @return {void}\n       */\n      multiple(val) {\n        this.mutableValue = val ? [] : null\n      }\n    },\n\n    /**\n     * Clone props into mutable values,\n     * attach any event listeners.\n     */\n    created() {\n      this.mutableValue = this.value\n      this.mutableOptions = this.options.slice(0)\n      this.mutableLoading = this.loading\n\n      this.$on('option:created', this.maybePushTag)\n    },\n\n    methods: {\n\n      /**\n       * Select a given option.\n       * @param  {Object|String} option\n       * @return {void}\n       */\n      select(option) {\n        if (!this.isOptionSelected(option)) {\n          if (this.taggable && !this.optionExists(option)) {\n            option = this.createOption(option)\n          }\n          if(this.index) {\n            if (!option.hasOwnProperty(this.index)) {\n              return console.warn(\n                  `[vue-select warn]: Index key \"option.${this.index}\" does not` +\n                  ` exist in options object ${JSON.stringify(option)}.`\n              )\n            }\n            option = option[this.index]\n          }\n          if (this.multiple && !this.mutableValue) {\n            this.mutableValue = [option]\n          } else if (this.multiple) {\n            this.mutableValue = [...this.mutableValue, option]\n          } else {\n            this.mutableValue = option\n          }\n          this.onInput(this.mutableValue);\n        }\n\n        this.onAfterSelect(option)\n      },\n\n      /**\n       * De-select a given option.\n       * @param  {Object|String} option\n       * @return {void}\n       */\n      deselect(option) {\n        if (this.multiple) {\n          let ref = -1\n          this.mutableValue.forEach((val) => {\n            if (val === option || (this.index && val === option[this.index]) || (typeof val === 'object' && val[this.label] === option[this.label])) {\n              ref = val\n            }\n          })\n          this.mutableValue = this.mutableValue.filter(entry => entry !== ref)\n        } else {\n          this.mutableValue = null\n        }\n        this.onInput(this.mutableValue);\n      },\n\n      /**\n       * Clears the currently selected value(s)\n       * @return {void}\n       */\n      clearSelection() {\n        this.mutableValue = this.multiple ? [] : null\n        this.onInput(this.mutableValue)\n      },\n\n      /**\n       * Called from this.select after each selection.\n       * @param  {Object|String} option\n       * @return {void}\n       */\n      onAfterSelect(option) {\n        if (this.closeOnSelect) {\n          this.open = !this.open\n          this.$refs.search.blur()\n        }\n\n        if (this.clearSearchOnSelect) {\n          this.search = ''\n        }\n      },\n\n      /**\n       * Toggle the visibility of the dropdown menu.\n       * @param  {Event} e\n       * @return {void}\n       */\n      toggleDropdown(e) {\n        if (e.target === this.$refs.openIndicator || e.target === this.$refs.search || e.target === this.$refs.toggle ||\n            e.target.classList.contains('selected-tag') || e.target === this.$el) {\n          if (this.open) {\n            this.$refs.search.blur() // dropdown will close on blur\n          } else {\n            if (!this.disabled) {\n              this.open = true\n              this.$refs.search.focus()\n            }\n          }\n        }\n      },\n\n      /**\n       * Check if the given option is currently selected.\n       * @param  {Object|String}  option\n       * @return {Boolean}        True when selected | False otherwise\n       */\n      isOptionSelected(option) {\n        return this.valueAsArray.some(value => {\n          if (typeof value === 'object') {\n            return this.optionObjectComparator(value, option)\n          }\n          return value === option || value === option[this.index]\n        })\n      },\n\n      /**\n       * Determine if two option objects are matching.\n       *\n       * @param value {Object}\n       * @param option {Object}\n       * @returns {boolean}\n       */\n      optionObjectComparator(value, option) {\n        if (this.index && value === option[this.index]) {\n          return true\n        } else if ((value[this.label] === option[this.label]) || (value[this.label] === option)) {\n          return true\n        } else if (this.index && value[this.index] === option[this.index]) {\n          return true\n        }\n        return false;\n      },\n\n      /**\n       * Finds an option from this.options\n       * where option[this.index] matches\n       * the passed in value.\n       *\n       * @param value {Object}\n       * @returns {*}\n       */\n      findOptionByIndexValue(value) {\n        this.options.forEach(_option => {\n          if (JSON.stringify(_option[this.index]) === JSON.stringify(value)) {\n            value = _option\n          }\n        })\n        return value\n      },\n\n      /**\n       * If there is any text in the search input, remove it.\n       * Otherwise, blur the search input to close the dropdown.\n       * @return {void}\n       */\n      onEscape() {\n        if (!this.search.length) {\n          this.$refs.search.blur()\n        } else {\n          this.search = ''\n        }\n      },\n\n      /**\n       * Close the dropdown on blur.\n       * @emits  {search:blur}\n       * @return {void}\n       */\n      onSearchBlur() {\n        if (this.mousedown && !this.searching) {\n          this.mousedown = false\n        } else {\n          if (this.clearSearchOnBlur) {\n            this.search = ''\n          }\n          this.closeSearchOptions()\n          return\n        }\n        // Fixed bug where no-options message could not be closed\n        if(this.search.length === 0 && this.options.length === 0){\n          this.closeSearchOptions()\n          return\n        }\n      },\n\n      /**\n       * 'Private' function to close the search options\n       * @emits  {search:blur}\n       * @returns {void}\n       */\n      closeSearchOptions(){\n        this.open = false\n        this.$emit('search:blur')\n      },\n\n      /**\n       * Open the dropdown on focus.\n       * @emits  {search:focus}\n       * @return {void}\n       */\n      onSearchFocus() {\n        this.open = true\n        this.$emit('search:focus')\n      },\n\n      /**\n       * Delete the value on Delete keypress when there is no\n       * text in the search input, & there's tags to delete\n       * @return {this.value}\n       */\n      maybeDeleteValue() {\n        if (!this.$refs.search.value.length && this.mutableValue && this.clearable) {\n          this.mutableValue = this.multiple ? this.mutableValue.slice(0, -1) : null\n        }\n      },\n\n      /**\n       * Determine if an option exists\n       * within this.mutableOptions array.\n       *\n       * @param  {Object || String} option\n       * @return {boolean}\n       */\n      optionExists(option) {\n        let exists = false\n\n        this.mutableOptions.forEach(opt => {\n          if (typeof opt === 'object' && opt[this.label] === option) {\n            exists = true\n          } else if (opt === option) {\n            exists = true\n          }\n        })\n\n        return exists\n      },\n\n      /**\n       * If push-tags is true, push the\n       * given option to mutableOptions.\n       *\n       * @param  {Object || String} option\n       * @return {void}\n       */\n      maybePushTag(option) {\n        if (this.pushTags) {\n          this.mutableOptions.push(option)\n        }\n      },\n\n      /**\n       * Event-Handler to help workaround IE11 (probably fixes 10 as well)\n       * firing a `blur` event when clicking\n       * the dropdown's scrollbar, causing it\n       * to collapse abruptly.\n       * @return {void}\n       */\n      onMousedown() {\n        this.mousedown = true\n      },\n\n      onMouseup() {\n        this.mousedown = false\n      }\n    },\n\n    computed: {\n\n      /**\n       * Classes to be output on .dropdown\n       * @return {Object}\n       */\n      dropdownClasses() {\n        return {\n          open: this.dropdownOpen,\n          single: !this.multiple,\n          searching: this.searching,\n          searchable: this.searchable,\n          unsearchable: !this.searchable,\n          loading: this.mutableLoading,\n          rtl: this.dir === 'rtl', // This can be removed - styling is handled by `dir=\"rtl\"` attribute\n          disabled: this.disabled\n        }\n      },\n\n      /**\n       * If search text should clear on blur\n       * @return {Boolean} True when single and clearSearchOnSelect\n       */\n      clearSearchOnBlur() {\n        return this.clearSearchOnSelect && !this.multiple\n      },\n\n      /**\n       * Return the current state of the\n       * search input\n       * @return {Boolean} True if non empty value\n       */\n      searching() {\n        return !!this.search\n      },\n\n      /**\n       * Return the current state of the\n       * dropdown menu.\n       * @return {Boolean} True if open\n       */\n      dropdownOpen() {\n        return this.noDrop ? false : this.open && !this.mutableLoading\n      },\n\n      /**\n       * Return the placeholder string if it's set\n       * & there is no value selected.\n       * @return {String} Placeholder text\n       */\n      searchPlaceholder() {\n        if (this.isValueEmpty && this.placeholder) {\n          return this.placeholder;\n        }\n      },\n\n      /**\n       * The currently displayed options, filtered\n       * by the search elements value. If tagging\n       * true, the search text will be prepended\n       * if it doesn't already exist.\n       *\n       * @return {array}\n       */\n      filteredOptions() {\n        if (!this.filterable && !this.taggable) {\n          return this.mutableOptions.slice()\n        }\n        let options = this.search.length ? this.filter(this.mutableOptions, this.search, this) : this.mutableOptions;\n        if (this.taggable && this.search.length && !this.optionExists(this.search)) {\n          options.unshift(this.search)\n        }\n        return options\n      },\n\n      /**\n       * Check if there aren't any options selected.\n       * @return {Boolean}\n       */\n      isValueEmpty() {\n        if (this.mutableValue) {\n          if (typeof this.mutableValue === 'object') {\n            return ! Object.keys(this.mutableValue).length\n          }\n          return ! this.valueAsArray.length\n        }\n\n        return true;\n      },\n\n      /**\n       * Return the current value in array format.\n       * @return {Array}\n       */\n      valueAsArray() {\n        if (this.multiple && this.mutableValue) {\n          return this.mutableValue\n        } else if (this.mutableValue) {\n          return [].concat(this.mutableValue)\n        }\n\n        return []\n      },\n\n      /**\n       * Determines if the clear button should be displayed.\n       * @return {Boolean}\n       */\n      showClearButton() {\n        return !this.multiple && this.clearable && !this.open && this.mutableValue != null\n      }\n    },\n\n  }\n</script>\n","import mod from \"-!../../../cache-loader/dist/cjs.js??ref--12-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--0-0!../../../vue-loader/lib/index.js??vue-loader-options!./Select.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../cache-loader/dist/cjs.js??ref--12-0!../../../thread-loader/dist/cjs.js!../../../babel-loader/lib/index.js!../../../cache-loader/dist/cjs.js??ref--0-0!../../../vue-loader/lib/index.js??vue-loader-options!./Select.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Select.vue?vue&type=template&id=13f67020&\"\nimport script from \"./Select.vue?vue&type=script&lang=js&\"\nexport * from \"./Select.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Select.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar global = require('./_global');\nvar has = require('./_has');\nvar cof = require('./_cof');\nvar inheritIfRequired = require('./_inherit-if-required');\nvar toPrimitive = require('./_to-primitive');\nvar fails = require('./_fails');\nvar gOPN = require('./_object-gopn').f;\nvar gOPD = require('./_object-gopd').f;\nvar dP = require('./_object-dp').f;\nvar $trim = require('./_string-trim').trim;\nvar NUMBER = 'Number';\nvar $Number = global[NUMBER];\nvar Base = $Number;\nvar proto = $Number.prototype;\n// Opera ~12 has broken Object#toString\nvar BROKEN_COF = cof(require('./_object-create')(proto)) == NUMBER;\nvar TRIM = 'trim' in String.prototype;\n\n// 7.1.3 ToNumber(argument)\nvar toNumber = function (argument) {\n  var it = toPrimitive(argument, false);\n  if (typeof it == 'string' && it.length > 2) {\n    it = TRIM ? it.trim() : $trim(it, 3);\n    var first = it.charCodeAt(0);\n    var third, radix, maxCode;\n    if (first === 43 || first === 45) {\n      third = it.charCodeAt(2);\n      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix\n    } else if (first === 48) {\n      switch (it.charCodeAt(1)) {\n        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal /^0b[01]+$/i\n        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal /^0o[0-7]+$/i\n        default: return +it;\n      }\n      for (var digits = it.slice(2), i = 0, l = digits.length, code; i < l; i++) {\n        code = digits.charCodeAt(i);\n        // parseInt parses a string to a first unavailable symbol\n        // but ToNumber should return NaN if a string contains unavailable symbols\n        if (code < 48 || code > maxCode) return NaN;\n      } return parseInt(digits, radix);\n    }\n  } return +it;\n};\n\nif (!$Number(' 0o1') || !$Number('0b1') || $Number('+0x1')) {\n  $Number = function Number(value) {\n    var it = arguments.length < 1 ? 0 : value;\n    var that = this;\n    return that instanceof $Number\n      // check on 1..constructor(foo) case\n      && (BROKEN_COF ? fails(function () { proto.valueOf.call(that); }) : cof(that) != NUMBER)\n        ? inheritIfRequired(new Base(toNumber(it)), that, $Number) : toNumber(it);\n  };\n  for (var keys = require('./_descriptors') ? gOPN(Base) : (\n    // ES3:\n    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +\n    // ES6 (in case, if modules with ES6 Number statics required before):\n    'EPSILON,isFinite,isInteger,isNaN,isSafeInteger,MAX_SAFE_INTEGER,' +\n    'MIN_SAFE_INTEGER,parseFloat,parseInt,isInteger'\n  ).split(','), j = 0, key; keys.length > j; j++) {\n    if (has(Base, key = keys[j]) && !has($Number, key)) {\n      dP($Number, key, gOPD(Base, key));\n    }\n  }\n  $Number.prototype = proto;\n  proto.constructor = $Number;\n  require('./_redefine')(global, NUMBER, $Number);\n}\n","module.exports = {\n  data() {\n    return {\n      typeAheadPointer: -1\n    }\n  },\n\n  watch: {\n    filteredOptions() {\n      this.typeAheadPointer = 0\n    }\n  },\n\n  methods: {\n    /**\n     * Move the typeAheadPointer visually up the list by\n     * subtracting the current index by one.\n     * @return {void}\n     */\n    typeAheadUp() {\n      if (this.typeAheadPointer > 0) {\n        this.typeAheadPointer--\n        if( this.maybeAdjustScroll ) {\n          this.maybeAdjustScroll()\n        }\n      }\n    },\n\n    /**\n     * Move the typeAheadPointer visually down the list by\n     * adding the current index by one.\n     * @return {void}\n     */\n    typeAheadDown() {\n      if (this.typeAheadPointer < this.filteredOptions.length - 1) {\n        this.typeAheadPointer++\n        if( this.maybeAdjustScroll ) {\n          this.maybeAdjustScroll()\n        }\n      }\n    },\n\n    /**\n     * Select the option at the current typeAheadPointer position.\n     * Optionally clear the search input on selection.\n     * @return {void}\n     */\n    typeAheadSelect() {\n      if( this.filteredOptions[ this.typeAheadPointer ] ) {\n        this.select( this.filteredOptions[ this.typeAheadPointer ] );\n      } else if (this.taggable && this.search.length){\n        this.select(this.search)\n      }\n\n      if( this.clearSearchOnSelect ) {\n        this.search = \"\";\n      }\n    },\n  }\n}","module.exports = '\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003' +\n  '\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n"],"sourceRoot":""}
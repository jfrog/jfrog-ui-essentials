{"version":3,"sources":["webpack://jfrog-ui-essentials/./src/components/JfDragAndDropTxtComponent/index.vue?8dc8","webpack://jfrog-ui-essentials/src/components/JfDragAndDropTxtComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfDragAndDropTxtComponent/index.vue?f8ee","webpack://jfrog-ui-essentials/./src/components/JfDragAndDropTxtComponent/index.vue"],"names":[],"mappings":";;;;;;;;;;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,2BAA2B,+CAA+C,kDAAkD,mCAAmC,UAAU,6CAA6C,0BAA0B,OAAO,2BAA2B,iBAAiB,aAAa,8EAA8E,kEAAkE,iEAAiE,WAAW,yBAAyB,KAAK,0BAA0B,4BAA4B,QAAQ,EAAE,mCAAmC,kBAAkB,uBAAuB,GAAG,cAAc,0CAA0C,4CAA4C,WAAW,+CAA+C;AACh7B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiBA;AAEA;AACA,8BADA;AAEA,UACA,YADA,EAEA,gBAFA,EAGA,UAHA,EAIA,aAJA,EAKA,iBALA,EAMA,cANA,CAFA;AAUA,gBACA,QADA,EAEA,UAFA,EAGA,QAHA,EAIA,oBAJA,CAVA;AAgBA,uCAhBA;AAiBA,MAjBA,kBAiBA;AACA;AACA,GAnBA;AAoBA,SApBA,qBAoBA;AACA,oCADA,CAEA;;AACA;AACA,GAxBA;AAyBA,SAzBA,qBAyBA;AACA;;AACA;AAEA;AACA;AACA;AAEA;;AACA;;AACA;AAEA;;AACA;;AACA;AACA,GAxCA;AAyCA;AAAA;AAAA,GAzCA;AA0CA;AACA,2BADA,qCACA;AACA;AACA,KAHA;AAIA,qBAJA,6BAIA,KAJA,EAIA;AACA;AACA;AAEA;;AACA,mCACA;AACA,KAXA;AAYA,qBAZA,6BAYA,KAZA,EAYA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA,OAFA,MAEA;AACA;AAAA;AAAA;AACA;AACA,KAvBA;AAwBA,mBAxBA,2BAwBA,KAxBA,EAwBA;AAAA;;AACA;AACA;AACA;AACA,8BAJA,CAMA;;AACA;AACA,2DARA,CAUA;;AACA;AACA;AACA,OAFA;;AAGA;AACA;AACA,OAFA,CAdA,CAkBA;;;AACA;;AACA;AACA;;AAEA;AACA;AAAA;AAAA;AACA,SAFA,MAEA;AACA;AAAA;AAAA;AACA;;AAEA;AACA,OA9BA,CAgCA;;;AACA;AACA,KA1DA;AA2DA,wBA3DA,gCA2DA,KA3DA,EA2DA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAJA,CAIA,aACA;;AAEA;AACA;AACA;;AAEA;AACA,KA7EA;AA8EA,mBA9EA,2BA8EA,KA9EA,EA8EA;AACA;AACA,8BAFA,CAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KA7FA;AA8FA,mBA9FA,2BA8FA,KA9FA,EA8FA;AACA;AACA,8BAFA,CAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KA5GA;AA6GA,oBA7GA,8BA6GA;AACA,2EADA,CAEA;;AACA;AACA;AAjHA,GA1CA;AA6JA;AACA,aADA,uBACA;AACA;AACA,KAHA;AAIA,uBAJA,iCAIA;AACA;AACA,KANA;AAOA,yBAPA,mCAOA;AACA;AAEA;AAVA;AA7JA,G;;ACpB8U,CAAgB,kJAAG,EAAC,C;;;;;ACAlQ;AACvC;AACL;;;AAGpD;AAC6F;AAC7F,gBAAgB,8CAAU;AAC1B,EAAE,4DAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,gH","file":"jfrog-ui-essentials.common.jfDragAndDropTxt.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"drag-and-drop-txt-wrapper\",class:{'ready-for-upload':_vm.shouldDisplayUploadIcon()}},[(_vm.dndHeadingHtml)?_c('label',{domProps:{\"innerHTML\":_vm._s(_vm.sanitizedHeaderHtml)}}):_vm._e(),_c('jf-field',{attrs:{\"autofocus\":_vm.autofocus}},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.dndContent),expression:\"dndContent\"}],staticClass:\"input-text monospaced\",style:(_vm.dndStyle),attrs:{\"name\":\"dndtext\",\"required\":_vm.dndRequired,\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.dndContent)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.dndContent=$event.target.value},function($event){return _vm.dndChange()}]}}),_c('label',{staticClass:\"call-to-action-label\",class:{'icon-upload':_vm.shouldDisplayUploadIcon()},domProps:{\"innerHTML\":_vm._s(_vm.sanitizedCallToAction)}})])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <div>\n        <div class=\"drag-and-drop-txt-wrapper\" :class=\"{'ready-for-upload':shouldDisplayUploadIcon()}\">\n            <label v-if=\"dndHeadingHtml\" v-html=\"sanitizedHeaderHtml\"></label>\n            <jf-field :autofocus=\"autofocus\">\n                <textarea name=\"dndtext\" class=\"input-text monospaced\" v-model=\"dndContent\" @input=\"dndChange()\" :style=\"dndStyle\" :required=\"dndRequired\" spellcheck=\"false\"></textarea>\n                <label class=\"call-to-action-label\"\n                       v-html=\"sanitizedCallToAction\"\n                       :class=\"{'icon-upload':shouldDisplayUploadIcon()}\">\n                </label>\n            </jf-field>\n        </div>\n    </div>\n\n</template>\n\n<script>\n    import SanitizeMixin from '../../mixins/Sanitize/index.js';\n\n    export default {\n        name: 'jf-drag-and-drop-txt',\n        props: [\n            'dndContent',\n            'dndHeadingHtml',\n            'dndStyle',\n            'dndRequired',\n            'dndCallToAction',\n            'dndAutoFocus'\n        ],\n        'jf@inject': [\n            '$scope',\n            '$element',\n            '$attrs',\n            'JFrogNotifications'\n        ],\n        mixins: [SanitizeMixin],\n        data() {\n            return {};\n        },\n        created() {\n            this.draggedFileSizeLimit = 400;\n            // limit file size (in KB)\n            this.entered = false;\n        },\n        mounted() {\n            /* (NG2VUE) This was moved from created() to mounted() */\n            /* (NG2VUE) Todo: If any other code in created() depends on this, it should also be moved here. */\n\n            // Binding dragenter,dragleave,drop to <jf_drang_and_drop_text> element\n            // since these events are not natively supported by Angular\n            this.$element.bind('dragover', this.handleDragEnter.bind(this));\n\n            /* (NG2VUE) This was moved from created() to mounted() */\n            /* (NG2VUE) Todo: If any other code in created() depends on this, it should also be moved here. */\n            this.$element.bind('dragleave', this.handleDragLeave.bind(this));\n\n            /* (NG2VUE) This was moved from created() to mounted() */\n            /* (NG2VUE) Todo: If any other code in created() depends on this, it should also be moved here. */\n            this.$element.bind('drop', this.handleDropEvent.bind(this));\n        },\n        ng1_legacy: { 'controllerAs': 'jfDragAndDropTxt' },\n        methods: {\n            shouldDisplayUploadIcon() {\n                return $(this.$element).find('textarea').val() === '' && !$(this.$element).is('.over');\n            },\n            onFileLoadSuccess(event) {\n                this.dndContent = event.target.result;\n                $(this.$element).find('textarea').focus();\n\n                /* Todo: check the following condition. It may contain some undefined references: this.dndChange */\n                if (this.dndChange !== null)\n                    this.$emit('dnd-change');\n            },\n            onFileLoadFailure(event) {\n                let errorMessage = 'Unable to access license file.';\n                if (event.target.error.name === 'SecurityError') {\n                    errorMessage += '<br> The file is either unsafe or being used by another application.';\n                }\n\n                if (this.dndOnError !== null) {\n                    this.$emit('dnd-on-error', { msg: errorMessage });\n                } else {\n                    this.JFrogNotifications.create({ error: errorMessage });\n                }\n            },\n            handleDropEvent(event) {\n                this.entered = false;\n                this.toggleDragEffect();\n                event.preventDefault();\n                event.stopPropagation();\n\n                // Initialize a file reader and get file path\n                let reader = new FileReader();\n                let file = event.originalEvent.dataTransfer.files[0];\n\n                // Bind to reader events\n                reader.onload = event => {\n                    this.onFileLoadSuccess(event);\n                };\n                reader.onerror = event => {\n                    this.onFileLoadFailure(event);\n                };\n\n                // Limit the read file size\n                let fileSize = Math.round(file.size / 1000);\n                if (fileSize > this.draggedFileSizeLimit) {\n                    let errorMessage = 'File exceeds the maximum size of ' + this.draggedFileSizeLimit + ' KB';\n\n                    if (this.dndOnError !== null) {\n                        this.$emit('dnd-on-error', { msg: errorMessage });\n                    } else {\n                        this.JFrogNotifications.create({ error: errorMessage });\n                    }\n\n                    return false;\n                }\n\n                // Read the file if not exceeds size limit\n                reader.readAsText(file);\n            },\n            callingCodeShouldEnd(event) {\n                // This is an ugly fix for the issue of FireFox browser\n                // firing the dragover/dragenter and dragleve events again and again\n                // when dragging a file over the textarea\n                let theCallingCodeShouldEnd = false;\n\n                try {\n                    if (event.relatedTarget.nodeType == 3) {\n                        theCallingCodeShouldEnd = true;\n                    }\n                } catch (err) {\n                }\n\n                if (event.target === event.relatedTarget) {\n                    theCallingCodeShouldEnd = true;\n                }\n\n                return theCallingCodeShouldEnd;\n            },\n            handleDragEnter(event) {\n                event.preventDefault();\n                event.stopPropagation();\n                // cancel the event on FF\n\n                if (this.callingCodeShouldEnd(event)) {\n                    return;\n                }\n\n                if (!this.entered) {\n                    this.entered = true;\n                    this.toggleDragEffect();\n                    event.originalEvent.dataTransfer.effectAllowed = 'copy';\n                    return false;\n                }\n            },\n            handleDragLeave(event) {\n                event.preventDefault();\n                event.stopPropagation();\n                // cancel the event on FF\n\n                if (this.callingCodeShouldEnd(event)) {\n                    return;\n                }\n\n                if (this.entered) {\n                    this.entered = false;\n                    this.toggleDragEffect();\n                    return false;\n                }\n            },\n            toggleDragEffect() {\n                let dndWrapper = $(this.$element).find('.drag-and-drop-txt-wrapper');\n                // dndWrapper.removeClass('icon-upload');\n                dndWrapper.toggleClass('over');\n            }\n        },\n        computed: {\n            autofocus() {\n                return this.dndAutoFocus === undefined ? true : this.dndAutoFocus;\n            },\n            sanitizedHeaderHtml() {\n                return this.text ? this.$sanitize(this.dndHeadingHtml) : '';\n            },\n            sanitizedCallToAction() {\n                return this.text ? this.$sanitize(this.dndCallToAction) : `Copy your text or\n    <b>drop a file</b>`;\n            }\n        }\n    }\n\n</script>\n\n<style scoped lang=\"less\">\n\n\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=42db6ef9&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"42db6ef9\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
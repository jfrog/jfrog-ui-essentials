{"version":3,"sources":["webpack://jfrog-ui-essentials/./src/components/JfTreeComponent/index.vue?924f","webpack://jfrog-ui-essentials/./src/components/JfTreeComponent/index.vue?b017","webpack://jfrog-ui-essentials/src/components/JfTreeComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfTreeComponent/index.vue?839d","webpack://jfrog-ui-essentials/./src/components/JfTreeComponent/index.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","class","viewPaneName","staticStyle","attrs","style","height","getPageHeight","overflow","isEmpty","api","dataGettersSet","transform","getTranslate","right","directives","name","rawName","value","initScrollFaker","expression","getTotalScrollHeight","maxFakeScrollHeight","on","$event","preventDefault","onMouseWheel","_l","viewPane","_getPageData","item","$index","key","jfTree","_e","_v","_s","emptyTreeText","clearFilter","staticRenderFns","component"],"mappings":"wMAAA,W,gECAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,UAAUC,MAAMP,EAAIQ,aAAe,QAAQC,YAAY,CAAC,MAAQ,QAAQC,MAAM,CAAC,SAAW,MAAM,CAAEV,EAAY,SAAEI,EAAG,MAAM,CAACE,YAAY,oBAAoBK,MAAM,CAAEC,OAAQZ,EAAIa,gBAAkB,KAAMC,SAAUd,EAAIe,YAAcf,EAAIgB,IAAIC,eAAiB,UAAY,WAAY,CAACb,EAAG,MAAM,CAACE,YAAY,uBAAuBK,MAAM,CAAEO,UAAW,iBAAoBlB,EAAImB,eAAkB,QAAS,CAACf,EAAG,MAAM,CAACE,YAAY,yBAAyBK,MAAM,CAAEO,UAAW,gBAAmBlB,EAAImB,eAAkB,MAAOC,MAAO,EAAGR,OAAQZ,EAAIa,gBAAkB,OAAQ,CAACT,EAAG,MAAM,CAACiB,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,MAAOxB,EAAIyB,kBAAmBC,WAAW,sBAAsBpB,YAAY,eAAeK,MAAM,CAAEC,QAASZ,EAAI2B,uBAAyB3B,EAAI4B,oBAAsB5B,EAAI4B,oBAAsB5B,EAAI2B,wBAA0B,UAAWvB,EAAG,MAAM,CAACE,YAAY,mBAAmBK,MAAM,CAAEC,OAASZ,EAAIa,gBAAkBb,EAAImB,eAAkB,MAAOU,GAAG,CAAC,WAAa,SAASC,GAAgC,OAAxBA,EAAOC,iBAAwB/B,EAAIgC,aAAaF,MAAW,CAAC1B,EAAG,MAAM,CAACE,YAAY,oBAAoBN,EAAIiC,GAAIjC,EAAIkC,SAASC,gBAAgB,SAASC,EAAKC,GAAQ,OAAOjC,EAAG,eAAe,CAACkC,IAAID,EAAO3B,MAAM,CAAC,KAAOV,EAAIuC,OAAO,UAAUF,EAAO,KAAOD,QAAU,OAASpC,EAAIgB,IAAIC,eAAkLjB,EAAIwC,KAAtKpC,EAAG,MAAM,CAACE,YAAY,wBAAwB,CAACN,EAAIyC,GAAG,qBAAqBzC,EAAI0C,GAAG,4DAA4D,oBAA8B1C,EAAIe,UAAWX,EAAG,MAAM,CAACE,YAAY,0BAA0B,CAACN,EAAIyC,GAAG,qBAAqBzC,EAAI0C,GAAG1C,EAAIgB,IAAI2B,eAAiB,wBAAwB,oBAAoB3C,EAAIwC,KAAMxC,EAAmB,gBAAEI,EAAG,MAAM,CAACE,YAAY,4CAA4C,CAACN,EAAIyC,GAAG,qDAAqDrC,EAAG,IAAI,CAACM,MAAM,CAAC,KAAO,IAAImB,GAAG,CAAC,MAAQ,SAASC,GAAgC,OAAxBA,EAAOC,iBAAwB/B,EAAI4C,iBAAiB,CAAC5C,EAAIyC,GAAG,oBAAoBzC,EAAIwC,OAAOxC,EAAIwC,UACz/DK,EAAkB,G,6GCoCtB,GACE,KAAF,UACE,MAAF,CACI,IAAJ,GACI,aAAJ,CAAM,QAAN,YAEE,YAAF,CACA,SACA,WACA,WACA,WACA,cAEE,KAbF,WAcI,MAAJ,CACM,SAAN,KACM,oBAAN,IACM,gBAAN,KACM,mBAAN,EACM,uBAAN,EACM,YAAN,EACM,YAAN,CAAQ,MAAR,KAGE,QAxBF,WAwBI,IAAJ,OACI,KAAJ,cAEI,KAAJ,wCACA,OACQ,EAAR,+BAEA,0BACQ,EAAR,uBAEQ,EAAR,iDACU,EAAV,mBAMI,KAAJ,kCACM,EAAN,gCAAQ,OAAR,mBAGI,EAAJ,gCACA,uBACA,sCAGE,QAlDF,WAkDI,IAAJ,OAEI,EAAJ,qDACM,OAAN,OACQ,IAAR,OACQ,IAAR,YACU,EAAV,iBACU,EAAV,+BACU,MACF,IAAR,KACQ,IAAR,UACU,EAAV,iBACU,EAAV,+BACU,MACF,IAAR,QACU,EAAV,iBACA,8CACY,EAAZ,eAEY,EAAZ,wBACY,EAAZ,wBAEU,MACF,IAAR,QACQ,IAAR,aACY,EAAZ,iBACY,IAAZ,sDACA,IACA,oBAGA,2CACkB,EAAlB,uCAHA,sBAOY,MAEJ,IAAR,OACQ,IAAR,YACY,EAAZ,iBACY,IAAZ,sDACY,GAAZ,EACc,GAAd,oBACA,uBACA,CACgB,IAAhB,yBACA,GACA,uBAGY,MAEJ,QACR,oGACY,EAAZ,2BAME,WAAF,CAAI,aAAJ,UACE,QAAF,CACI,YADJ,WAEM,KAAN,cACM,KAAN,kBAEI,gBALJ,SAKA,KACM,IAAN,kCAEM,GAAN,EAAM,CAGA,IACN,EADA,mCAAQ,OAAR,mBAEA,EAUA,KATQ,EAAR,sBACU,KAAV,OACU,SAAV,kBACU,KAAV,CAAY,IAAZ,YAGQ,KAAR,oBAKM,IAAN,iFAEA,wBACM,KAAN,yBAAM,CAAN,GACM,EAAN,QACM,EAAN,0BAEI,qBAhCJ,SAgCA,GACM,IAAN,KACA,KACA,MAEA,IAAU,EAAV,EAAU,EAAV,EAAU,EAAV,EAkDM,MAhDN,eACQ,EAAR,UAEA,mBACQ,GAAR,kBAEA,oBACQ,GAAR,mBAEA,oBACQ,GAAR,mBAIA,yCACQ,EAAR,EACQ,EAAR,GAGM,EAAN,IACM,EAAN,IAEA,eACQ,EAAR,UAEA,eACQ,EAAR,WAGA,qBACA,gBAEU,GAAV,EACU,GAAV,IAGU,GAAV,EACU,GAAV,IAIA,QACQ,EAAR,UAEA,QACQ,EAAR,UAGA,CACQ,MAAR,EACQ,MAAR,EACQ,OAAR,EACQ,OAAR,IAGI,aA9FJ,SA8FA,SAEA,8BACQ,KAAR,oDACA,6BAEM,IAAN,sCACA,sCAEM,GAAN,wBACQ,EAAR,sBADM,CAKA,IAAN,kBACA,uCACA,WAEQ,KAAR,wBACA,YAEQ,KAAR,wBAIM,KAAN,0GACA,0CACA,mBACM,KAAN,qBAEM,KAAN,mBAEI,YA9HJ,WAgIM,KAAN,qBACM,KAAN,yBACM,KAAN,cACM,KAAN,sBAEI,qBArIJ,WAsIM,OAAN,8EAEI,cAxIJ,WA0IM,GAAN,8BACQ,OAAR,8BAEQ,IAAR,0CACQ,OAAR,6BACA,uCAEA,iEAGI,gBApJJ,WAoJM,IAAN,OACA,mDACM,EAAN,yBACQ,GAAR,wBACA,qBADQ,CAIR,2BACU,EAAV,iDACA,0BAEQ,IAAR,uCACQ,GAAR,GACU,IAAV,oCACA,kBACA,SACY,EAAZ,GAEU,IAAV,gCACA,MACA,KACU,EAAV,iCACU,EAAV,8CACU,EAAV,sGAEU,EAAV,qBACU,EAAV,yBACU,EAAV,cAEQ,EAAR,oEAGI,aApLJ,WAqLM,IAAN,yGACM,GAAN,EAEA,CACQ,IAAR,yCACQ,OAAR,EAHQ,OAAR,GAMI,iBA7LJ,WA6LM,IAAN,oEAEA,4CACA,mDACA,sEAEA,aACQ,IAAR,oCACA,kBACQ,EAAR,kBACQ,EAAR,cAEA,EACA,iBAEA,KAEI,eA9MJ,WA+MM,IAAN,sDACM,OAAN,6BAEI,QAlNJ,WAkNM,IAAN,OACM,YAAN,WAAQ,OAAR,0BAEI,QArNJ,WAsNM,SAAN,kFAEI,eAxNJ,WAyNM,KAAN,6CACM,KAAN,yDAEI,iBA5NJ,kBA6NA,iCACA,oCAKA,E,WACE,SAAF,KAAI,uBACA,KAAJ,W,oDAEA,WACM,OAAN,+F,4BAEA,WACM,OAAN,8B,sBAEA,WACA,+CACM,KAAN,uBACM,KAAN,oBACM,KAAN,SACM,KAAN,gE,sBAGA,WACA,4BACM,KAAN,uBACM,KAAN,oBACM,KAAN,SACM,KAAN,gE,qBAGA,YACA,8BAEM,KAAN,yBAEM,KAAN,oBACM,KAAN,SACM,KAAN,gE,oBAGA,WAAM,IAAN,OACA,4CACQ,KAAR,8BAGA,oDAAQ,OAAR,2B,oCAGA,YACA,oCACM,KAAN,oB,+BAGA,WACM,KAAN,0FACM,KAAN,gC,KC3a8V,I,wBCQ1VC,EAAY,eACd,EACA/C,EACA8C,GACA,EACA,KACA,WACA,MAIa,aAAAC,E","file":"jfrog-ui-essentials.umd.min.jfTree.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=40ab8c54&scoped=true&lang=less&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"jf-tree\",class:_vm.viewPaneName + '-pane',staticStyle:{\"clear\":\"both\"},attrs:{\"tabindex\":\"0\"}},[(_vm.viewPane)?_c('div',{staticClass:\"jf-tree-container\",style:({height: _vm.getPageHeight() + 'px', overflow: _vm.isEmpty() || !_vm.api.dataGettersSet ? 'visible' : 'hidden'})},[_c('div',{staticClass:\"tree-items-container\",style:({transform: 'translate(0, ' + (-_vm.getTranslate()) + 'px)'})},[_c('div',{staticClass:\"scroll-faker-container\",style:({transform: 'translate(0, ' + (_vm.getTranslate()) + 'px)', right: 0, height: _vm.getPageHeight() + 'px'})},[_c('div',{directives:[{name:\"init\",rawName:\"v-init\",value:(_vm.initScrollFaker()),expression:\"initScrollFaker()\"}],staticClass:\"scroll-faker\",style:({height: (_vm.getTotalScrollHeight() > _vm.maxFakeScrollHeight ? _vm.maxFakeScrollHeight : _vm.getTotalScrollHeight()) + 'px'})})]),_c('div',{staticClass:\"h-scroll-wrapper\",style:({height: (_vm.getPageHeight() + _vm.getTranslate()) + 'px'}),on:{\"mousewheel\":function($event){$event.preventDefault();return _vm.onMouseWheel($event)}}},[_c('div',{staticClass:\"h-scroll-content\"},_vm._l((_vm.viewPane._getPageData()),function(item,$index){return _c('jf-tree-item',{key:$index,attrs:{\"tree\":_vm.jfTree,\"item-id\":$index,\"data\":item}})}),1)])]),(!_vm.api.dataGettersSet)?_c('div',{staticClass:\"missing-data-setters\"},[_vm._v(\"\\n                \"+_vm._s('jf-tree: Data getters was not set (call setDataDriver())')+\"\\n            \")]):_vm._e(),(_vm.isEmpty())?_c('div',{staticClass:\"empty-tree-placeholder\"},[_vm._v(\"\\n                \"+_vm._s(_vm.api.emptyTreeText || 'This tree is empty !')+\"\\n            \")]):_vm._e(),(_vm.noFilterResults)?_c('div',{staticClass:\"empty-tree-placeholder filter-no-results\"},[_vm._v(\"\\n                Current filter has no results. \"),_c('a',{attrs:{\"href\":\"\"},on:{\"click\":function($event){$event.preventDefault();return _vm.clearFilter()}}},[_vm._v(\"Clear filter\")])]):_vm._e()]):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <div>\n        <div class=\"jf-tree\" :class=\"viewPaneName + '-pane'\" tabindex=\"0\" style=\"clear: both\">\n            <div class=\"jf-tree-container\" :style=\"{height: getPageHeight() + 'px', overflow: isEmpty() || !api.dataGettersSet ? 'visible' : 'hidden'}\" v-if=\"viewPane\">\n                <div class=\"tree-items-container\" :style=\"{transform: 'translate(0, ' + (-getTranslate()) + 'px)'}\">\n                    <div class=\"scroll-faker-container\" :style=\"{transform: 'translate(0, ' + (getTranslate()) + 'px)', right: 0, height: getPageHeight() + 'px'}\">\n                        <div class=\"scroll-faker\" v-init=\"initScrollFaker()\" :style=\"{height: (getTotalScrollHeight() > maxFakeScrollHeight ? maxFakeScrollHeight : getTotalScrollHeight()) + 'px'}\">\n                        </div>\n                    </div>\n                    <div class=\"h-scroll-wrapper\" :style=\"{height: (getPageHeight() + getTranslate()) + 'px'}\" @mousewheel.prevent=\"onMouseWheel\">\n                        <div class=\"h-scroll-content\">\n                            <jf-tree-item v-for=\"(item, $index) in viewPane._getPageData()\" :key=\"$index\" :tree=\"jfTree\" :item-id=\"$index\" :data=\"item\"></jf-tree-item>\n                        </div>\n                    </div>\n                </div>\n\n                <div class=\"missing-data-setters\" v-if=\"!api.dataGettersSet\">\n                    {{'jf-tree: Data getters was not set (call setDataDriver())'}}\n                </div>\n                <div class=\"empty-tree-placeholder\" v-if=\"isEmpty()\">\n                    {{api.emptyTreeText || 'This tree is empty !'}}\n                </div>\n                <div class=\"empty-tree-placeholder filter-no-results\" v-if=\"noFilterResults\">\n                    Current filter has no results. <a href=\"\" @click.prevent=\"clearFilter()\">Clear filter</a>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n<script>\n    import find from 'lodash/find';\n    import isFunction from 'lodash/isFunction';\n    import isNaN from 'lodash/isNaN';\n\n    export default {\n        name: 'jf-tree',\n        props: {\n            api: {},\n            viewPaneName: { default: 'default'}\n        },\n        'jf@inject': [\n            '$scope',\n            '$element',\n            '$timeout',\n            '$compile',\n            '$rootScope'\n        ],\n        data() {\n            return {\n                viewPane: null,\n                maxFakeScrollHeight: 1000000,\n                noFilterResults: null,\n                virtualScrollIndex: 0,\n                virtScrollDisplacement: 0,\n                currentPage: 0,\n                refreshHack: {count: 1}\n            };\n        },\n        created() {\n            this.cellScopes = [];\n\n            this.$scope.$watch('jfTree.api', api => {\n                if (this.api) {\n                    this.api._setDirectiveController(this);\n                }\n                if (this.api && !this.paginationApi) {\n                    this.paginationApi = new PaginationApi(this);\n\n                    this.paginationApi.registerChangeListener(() => {\n                        this.refresh(false);\n                    });\n\n                }\n            });\n\n            this.$scope.$on('$destroy', () => {\n                this.cellScopes.forEach(s => s.$destroy());\n            });\n\n            $(window).on('resize', () => {\n                if (this.viewPane.autoHeight)\n                    this.viewPane._setAutoItemsPerPage();\n            });\n        },\n        mounted() {\n\n            $(this.$element).find('.jf-tree').keydown(e => {\n                switch (e.key) {\n                case 'Down':\n                case 'ArrowDown':\n                    e.preventDefault();\n                    this.api._onArrowKey(true, this.viewPane);\n                    break;\n                case 'Up':\n                case 'ArrowUp':\n                    e.preventDefault();\n                    this.api._onArrowKey(false, this.viewPane);\n                    break;\n                case 'Enter':\n                    e.preventDefault();\n                    if (this.api.getPreSelectedNode() === this.api.GO_UP_NODE) {\n                        this.api.drillUp();\n                    } else {\n                        this.api.selectPreSelected();\n                        this.api.toggleSelected(true);\n                    }\n                    break;\n                case 'Right':\n                case 'ArrowRight': {\n                        e.preventDefault();\n                        let relevant = this.api.getPreSelectedNode() || this.api.getSelectedNode();\n                        if (relevant) {\n                            if (!this.api.isNodeOpen(relevant))\n                                this.api.openNode(relevant, true);\n                            else {\n                                if (relevant.$childrenCache && relevant.$childrenCache.length) {\n                                    this.api.preSelectNode(relevant.$childrenCache[0]);\n                                }\n                            }\n                        }\n                        break;\n                    }\n                case 'Left':\n                case 'ArrowLeft': {\n                        e.preventDefault();\n                        let relevant = this.api.getPreSelectedNode() || this.api.getSelectedNode();\n                        if (relevant) {\n                            if (this.api.isNodeOpen(relevant))\n                                this.api.closeNode(relevant);\n                            else {\n                                let parent = this.api.getParentNode(relevant);\n                                if (parent)\n                                    this.api.preSelectNode(parent);\n                            }\n                        }\n                        break;\n                    }\n                default:\n                    if (!e.ctrlKey && !e.shiftKey && !e.metaKey && e.key.toLowerCase() === String.fromCharCode(e.which).toLowerCase()) {\n                        this.api.fire('keydown', e);\n                    }\n                }\n            })\n    ;\n        },\n        ng1_legacy: { 'controllerAs': 'jfTree' },\n        methods: {\n            clearFilter() {\n                this.treeFilter = '';\n                this.onUpdateFilter();\n            },\n            compileTemplate(elem, itemId) {\n                let node = this.viewPane._getPageData()[itemId];\n\n                if (!node)\n                    return;\n\n                let existingScope = find(this.cellScopes, s => s.node === node.data);\n                let itemScope;\n                if (!existingScope) {\n                    itemScope = this.$rootScope.$new({\n                        node: node.data,\n                        appScope: this.api.appScope,\n                        tree: { api: this.api }\n                    });\n\n                    this.cellScopes.push(itemScope);\n\n                } else\n                    itemScope = existingScope;\n\n                let template = isFunction(this.api.nodeTemplate) ? this.api.nodeTemplate(node.data) : this.api.nodeTemplate;\n\n                let templateElem = $('<div>' + template + '</div>');\n                this.$compile(templateElem.children()[0])(itemScope);\n                elem.empty();\n                elem.append(templateElem.children()[0]);\n            },\n            _normalizeWheelEvent(event) {\n                let PIXEL_STEP = 10;\n                let LINE_HEIGHT = 40;\n                let PAGE_HEIGHT = 800;\n\n                let sX = 0, sY = 0, pX = 0, pY = 0;\n\n                if ('detail' in event) {\n                    sY = event.detail;\n                }\n                if ('wheelDelta' in event) {\n                    sY = -event.wheelDelta / 120;\n                }\n                if ('wheelDeltaY' in event) {\n                    sY = -event.wheelDeltaY / 120;\n                }\n                if ('wheelDeltaX' in event) {\n                    sX = -event.wheelDeltaX / 120;\n                }\n\n                // side scrolling on FF with DOMMouseScroll\n                if ('axis' in event && event.axis === event.HORIZONTAL_AXIS) {\n                    sX = sY;\n                    sY = 0;\n                }\n\n                pX = sX * PIXEL_STEP;\n                pY = sY * PIXEL_STEP;\n\n                if ('deltaY' in event) {\n                    pY = event.deltaY;\n                }\n                if ('deltaX' in event) {\n                    pX = event.deltaX;\n                }\n\n                if ((pX || pY) && event.deltaMode) {\n                    if (event.deltaMode == 1) {\n                        // delta in LINE units\n                        pX *= LINE_HEIGHT;\n                        pY *= LINE_HEIGHT;\n                    } else {\n                        // delta in PAGE units\n                        pX *= PAGE_HEIGHT;\n                        pY *= PAGE_HEIGHT;\n                    }\n                }\n\n                if (pX && !sX) {\n                    sX = pX < 1 ? -1 : 1;\n                }\n                if (pY && !sY) {\n                    sY = pY < 1 ? -1 : 1;\n                }\n\n                return {\n                    spinX: sX,\n                    spinY: sY,\n                    pixelX: pX,\n                    pixelY: pY\n                };\n            },\n            onMouseWheel($event, $delta, $deltaX, $deltaY) {\n\n                if (this.viewPane.scrollTimeout) {\n                    this.$timeout.cancel(this.viewPane.scrollTimeout);\n                    delete this.viewPane.scrollTimeout;\n                }\n                let normalDelta = this._normalizeWheelEvent($event).pixelY;\n                let xDelta = this._normalizeWheelEvent($event).pixelX;\n\n                if (Math.abs(normalDelta) < Math.abs(xDelta)) {\n                    $event.stopPropagation();\n                    return;\n                }\n\n                let scrollAmount = 0.02 * Math.abs(normalDelta);\n                let scrollPosBefore = this.viewPane._getCurrentScrollPos();\n                if ($event.deltaY > 0) {\n                    // scrollUp\n                    this.viewPane._scrollTo(scrollPosBefore + scrollAmount);\n                } else if ($event.deltaY < 0) {\n                    // scrollDown\n                    this.viewPane._scrollTo(scrollPosBefore - scrollAmount);\n                }\n\n\n                this.currentPage = Math.floor((this.virtualScrollIndex + this.viewPane.itemsPerPage - 1) / this.viewPane.itemsPerPage);\n                if (scrollPosBefore !== this.viewPane._getCurrentScrollPos())\n                    $event.preventDefault();\n                this.syncFakeScroller(false);\n\n                this.viewPane.focus();\n            },\n            resetScroll() {\n\n                this.virtualScrollIndex = 0;\n                this.virtScrollDisplacement = 0;\n                this.currentPage = 1;\n                this.syncFakeScroller(false);\n            },\n            getTotalScrollHeight() {\n                return this.viewPane._getPrePagedData().length * parseFloat(this.viewPane.itemHeight);\n            },\n            getPageHeight() {\n\n                if (this.viewPane.containerHeight) {\n                    return this.viewPane.containerHeight;\n                } else {\n                    let len = this.viewPane._getPrePagedData().length;\n                    if (len < this.viewPane.itemsPerPage)\n                        return len * parseFloat(this.viewPane.itemHeight);\n                    else\n                        return this.viewPane.itemsPerPage * parseFloat(this.viewPane.itemHeight);\n                }\n            },\n            initScrollFaker() {\n                let scrollParent = $(this.$element).find('.scroll-faker-container');\n                scrollParent.on('scroll', e => {\n                    if (this.$settingScroll) {\n                        delete this.$settingScroll;\n                        return;\n                    }\n                    if (this.viewPane.scrollTimeout) {\n                        this.$timeout.cancel(this.viewPane.scrollTimeout);\n                        delete this.viewPane.scrollTimeout;\n                    }\n                    let len = this.viewPane._getPrePagedData().length;\n                    if (len) {\n                        let maxScrollTop = scrollParent[0].scrollHeight - scrollParent.outerHeight();\n                        let relativePosition = scrollParent.scrollTop() / maxScrollTop;\n                        if (isNaN(relativePosition)) {\n                            relativePosition = 1;\n                        }\n                        let newScrollIndex = relativePosition * (len - this.viewPane.itemsPerPage);\n                        if (newScrollIndex < 0)\n                            newScrollIndex = 0;\n                        this.virtualScrollIndex = Math.floor(newScrollIndex);\n                        this.virtScrollDisplacement = newScrollIndex - this.virtualScrollIndex;\n                        this.currentPage = Math.floor((this.virtualScrollIndex + this.viewPane.itemsPerPage - 1) / this.viewPane.itemsPerPage);\n                    } else {\n                        this.virtualScrollIndex = 0;\n                        this.virtScrollDisplacement = 0;\n                        this.currentPage = 0;\n                    }\n                    this.api.fire('pagination.change', this.paginationApi.getCurrentPage());\n                });\n            },\n            getTranslate() {\n                let displacement = this.$freezedVScrollDisplacement !== undefined ? this.$freezedVScrollDisplacement : this.virtScrollDisplacement;\n                if (!displacement) {\n                    return 0;\n                } else {\n                    let pixels = displacement * parseFloat(this.viewPane.itemHeight);\n                    return pixels;\n                }\n            },\n            syncFakeScroller(delay = true) {\n\n                let len = this.viewPane._getPrePagedData(true).length;\n                let scrollParent = $(this.$element).find('.scroll-faker-container');\n                let relativePosition = this.viewPane._getCurrentScrollPos() / (len - this.viewPane.itemsPerPage);\n\n                let sync = () => {\n                    let maxScrollTop = scrollParent[0].scrollHeight - scrollParent.outerHeight();\n                    let scrollTop = Math.floor(maxScrollTop * relativePosition);\n                    this.$settingScroll = true;\n                    scrollParent.scrollTop(scrollTop);\n                };\n                if (delay)\n                    this.$timeout(sync);\n                else\n                    sync();\n            },\n            getScrollWidth() {\n                let el = $(this.$element).find('.scroll-faker-container')[0];\n                return el.offsetWidth - el.clientWidth;\n            },\n            refresh() {\n                setTimeout(() => this.refreshHack.count++);\n            },\n            isEmpty() {\n                return !!(this.api.dataWasSet && !this.viewPane._getRawData().length && !this.viewPane.$freezed);\n            },\n            _freezeVScroll() {\n                this.$freezedVScrollIndex = this.virtualScrollIndex;\n                this.$freezedVScrollDisplacement = this.virtScrollDisplacement;\n            },\n            _unFreezeVScroll() {\n                delete this.$freezedVScrollIndex;\n                delete this.$freezedVScrollDisplacement;\n            }\n        }\n    }\n\n    class PaginationApi {\n        constructor(treeCtrl) {\n            this.treeCtrl = treeCtrl;\n        }\n        getTotalPages() {\n            return Math.ceil(this.treeCtrl.viewPane.getTotalLengthOfData() / this.treeCtrl.viewPane.itemsPerPage);\n        }\n        getCurrentPage() {\n            return this.treeCtrl.currentPage + 1;\n        }\n        nextPage() {\n            if (this.getCurrentPage() === this.getTotalPages()) return;\n            this.treeCtrl.currentPage++;\n            this.syncVirtualScroll();\n            this.update();\n            this.treeCtrl.api.fire('pagination.change', this.getCurrentPage());\n        }\n\n        prevPage() {\n            if (this.getCurrentPage() === 1) return;\n            this.treeCtrl.currentPage--;\n            this.syncVirtualScroll();\n            this.update();\n            this.treeCtrl.api.fire('pagination.change', this.getCurrentPage());\n        }\n\n        setPage(pageNum) {\n            if (pageNum < 1 || pageNum > this.getTotalPages()) return;\n\n            this.treeCtrl.currentPage = pageNum - 1;\n\n            this.syncVirtualScroll()\n            this.update();\n            this.treeCtrl.api.fire('pagination.change', this.getCurrentPage());\n        }\n\n        update() {\n            if (this.getCurrentPage() > this.getTotalPages()) {\n                this.setPage(this.getTotalPages());\n            }\n\n            if (this.listeners) this.listeners.forEach(listener=>listener(this.getCurrentPage()));\n        }\n\n        registerChangeListener(listener) {\n            if (!this.listeners) this.listeners = []\n            this.listeners.push(listener);\n        }\n\n        syncVirtualScroll() {\n            this.treeCtrl.virtualScrollIndex = this.treeCtrl.currentPage*this.treeCtrl.viewPane.itemsPerPage;\n            this.treeCtrl.syncFakeScroller();\n        }\n\n    }\n\n</script>\n\n<style scoped lang=\"less\">\n    @import \"../../assets/stylesheets/variables.less\";\n    @import \"../../assets/stylesheets/mixins.less\";\n\n    /deep/ .jf-tree {\n        width: 100%;\n        outline: none;\n        position: relative;\n        .jf-tree-container {\n            width: 100%;\n            overflow: visible;\n            .tree-items-container {\n                position: relative;\n                .scroll-faker-container {\n                    position: absolute;\n                    width: 30px;\n                    //        height: 100%;\n                    overflow: auto;\n                    overflow-x: hidden;\n                    z-index: 1;\n                    .scroll-faker {\n                    }\n                }\n                .h-scroll-wrapper {\n                    overflow-x: auto;\n                    overflow-y: hidden;\n                    .h-scroll-content {\n                        display: inline-block;\n                        min-width: 100%;\n\n                        .jf-tree-item-vue {\n                            cursor: pointer;\n                            position: relative;\n                            .user-select(none);\n\n                            &:before {\n                                content: '';\n                                height: inherit;\n                                width: 100%;\n                                left: 0;\n                                right: 0;\n                                opacity: .1;\n                                position: absolute;\n                            }\n\n                            &.quick-find-match {\n                                .node-text {\n                                    font-weight: 900;\n                                }\n                            }\n                            &:hover {\n                                .jf-tree-item-content {\n                                    color: @blackBGLight;\n                                }\n                            }\n                            &.selected {\n                                &:before {\n                                    background: #2291B2;\n                                    //              background-color: #e9f4f7;\n                                }\n                                .jf-tree-item-content {\n                                    color: @blackBGLight;\n                                }\n                            }\n                            &.pre-selected:not(.selected) {\n                                &:before {\n                                    background: #919191;\n                                    //              background-color: #f4f4f4;\n                                }\n                            }\n                            //        border: 1px red solid;\n                            .jf-tree-item-container {\n                                display: flex;\n                                flex-direction: row;\n                                white-space: nowrap;\n                                .jf-tree-indentation {\n                                    .indentation-wrap {\n                                        display: inline-block;\n                                        .indentation-flex-wrap {\n                                            position: absolute;\n                                            top:0;\n                                            left:0;\n                                            bottom: 0;\n                                            display: flex;\n                                            flex-direction: row;\n                                            .indentation-unit {\n                                                width: 26px;\n                                                background-size: 100% 100%;\n                                                opacity: .3;\n                                            }\n                                        }\n                                    }\n                                }\n                                .no-children-line-extension {\n                                    //              position: absolute;\n                                    opacity: .3;\n                                    min-width: 15px;\n                                    display: inline-block;\n                                    margin-right: 11px;\n                                }\n\n                                .node-expander {\n                                    min-width: 26px;\n                                    position: relative;\n                                    display: inline-block;\n                                    cursor: pointer;\n                                    color: #aaaaaa;\n                                    &:hover {\n                                        color: @greenBGDark;\n                                    }\n                                    .icon-addons-arrow-right {\n                                        transform: rotate(0deg) translate(8px, 0px) scale(.8,.8);\n                                        display: inline-block;\n                                    }\n                                    &.expanded {\n                                        .icon-addons-arrow-right {\n                                            transform: rotate(90deg) translate(0px, -9px) scale(.8,.8);\n                                        }\n                                    }\n                                    .spinner-msg-local {\n                                        position: absolute;\n                                        top: ~\"calc(50% - 10px)\";\n                                        left: ~\"calc(50% - 10px)\";\n                                    }\n                                }\n                                .jf-tree-item-content {\n                                    display: inline-block;\n                                    margin-left: 2px;\n                                    padding-right: 30px;\n                                    .highlight {\n                                        color: #222;\n                                        background-color: yellow;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=40ab8c54&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=40ab8c54&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"40ab8c54\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
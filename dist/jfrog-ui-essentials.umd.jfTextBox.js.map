{"version":3,"sources":["webpack://jfrog-ui-essentials/./src/components/JfTextBoxComponent/index.vue?bf31","webpack://jfrog-ui-essentials/./src/components/JfTextBoxComponent/index.vue?f6c5","webpack://jfrog-ui-essentials/./node_modules/lodash/now.js","webpack://jfrog-ui-essentials/./src/components/JfTextBoxComponent/index.vue?c5f1","webpack://jfrog-ui-essentials/src/components/JfTextBoxComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfTextBoxComponent/index.vue?afe1","webpack://jfrog-ui-essentials/./src/components/JfTextBoxComponent/index.vue","webpack://jfrog-ui-essentials/./node_modules/lodash/debounce.js"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;;;;;;;;ACAA,uC;;;;;;;ACAA,WAAW,mBAAO,CAAC,MAAS;;AAE5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;;;ACtBA,0BAA0B,aAAa,0BAA0B,wBAAwB,2BAA2B,oCAAoC,YAAY,0CAA0C,8EAA8E,2CAA2C,qDAAqD,YAAY,yCAAyC,KAAK,yBAAyB,sBAAsB,uBAAuB,uCAAuC,YAAY,wCAAwC;AACvlB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACkBA;AACA;AACA;AACA;AACA;AAEA;AACA,qBADA;AAEA,UACA,MADA,EAEA,YAFA,EAGA,YAHA,EAIA,UAJA,EAKA,UALA,EAMA,cANA,CAFA;AAUA,gBACA,QADA,EAEA,UAFA,EAGA,UAHA,EAIA,WAJA,EAKA,UALA,EAMA,IANA,EAOA,mBAPA,CAVA;AAmBA,uCAnBA;AAoBA,MApBA,kBAoBA;AACA;AACA,mBADA;AAEA,iBAFA;AAGA;AAHA;AAKA,GA1BA;AA2BA,SA3BA,qBA2BA;AAAA;;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA,GAhCA;AAiCA,eAjCA,2BAiCA;AACA;AACA,GAnCA;AAoCA;AACA,kBADA,4BACA;AAAA;;AAEA;AACA;;AACA;AACA,OAHA;;AAIA;AAAA;AAAA,SANA,CAOA;;AAEA;AAEA;AACA,KAbA;AAcA,oBAdA,8BAcA;AACA;AACA,KAhBA;AAiBA,gBAjBA,wBAiBA,IAjBA,EAiBA;AACA;AACA,KAnBA;AAqBA,eArBA,yBAqBA;AAAA;;AACA;;AAEA;AACA;AACA,OAFA,MAGA;AACA;AACA;AACA;;AACA;AAAA;;AACA;;AACA;AACA;AACA,SAJA;;AAKA;AACA;AACA;;AAEA;AACA;AACA,SAFA,MAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;AAEA;AAEA;AACA;AAEA;;AACA;AACA;AAEA;AACA;AACA;AACA;;AACA;AAEA;;AACA;AACA;AACA,KA5EA;AA6EA,kBA7EA,4BA6EA;AACA;AACA;AACA,KAhFA;AAkFA,aAlFA,qBAkFA,IAlFA,EAkFA;AAEA,uDACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AAEA;AACA,2DACA;AACA,SAHA;AAKA;AAEA;AACA;AACA;AAEA,KA5GA;AA8GA,qBA9GA,+BA8GA;AACA;AACA;;AACA;AACA;AACA;AACA,KApHA;AAsHA,UAtHA,oBAsHA;AAAA;;AACA;AACA;;AACA;AACA;AAAA;AAAA;AACA,OAFA,MAGA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA,SAFA;AAGA;AACA;AAEA;;AArIA,GApCA;AA2KA;AACA,oBADA,8BACA;AACA;AACA,KAHA;AAIA,iBAJA,2BAIA;AACA;AACA,KANA;AAOA;AACA;AACA;AACA;AACA;;AACA;AACA;AANA,KAPA;AAeA;AACA;AACA;AACA;AACA;;AACA;AACA;AANA,KAfA;AAwBA;AACA;AACA;AACA;AACA;;AACA;AACA;AANA,KAxBA;AAiCA;AACA;AACA;AACA;AACA;;AACA;AACA;AANA,KAjCA;AA0CA;AACA;AACA;AACA;AAHA,KA1CA;AAgDA;AACA;AACA;AACA;AAHA,KAhDA;AAsDA;AACA;AACA;AACA;AACA;AAJA,KAtDA;AA6DA;AACA;AACA;AACA;AACA;AAJA,KA7DA;AAoEA;AACA;AACA;AACA;AACA;AAJA,KApEA;AA2EA;AACA;AACA;AAEA;AAJA;AA3EA;AA3KA,G;;ACzB8U,CAAgB,oIAAG,EAAC,C;;;;;;;;ACAlQ;AACvC;AACL;AACsC;;;AAG1F;AAC6F;AAC7F,gBAAgB,8CAAU;AAC1B,EAAE,qDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,yG;;;;;;;ACnBf,eAAe,mBAAO,CAAC,MAAY;AACnC,UAAU,mBAAO,CAAC,MAAO;AACzB,eAAe,mBAAO,CAAC,MAAY;;AAEnC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,OAAO;AAClB,WAAW,OAAO,YAAY;AAC9B,WAAW,QAAQ;AACnB;AACA,WAAW,OAAO;AAClB;AACA,WAAW,QAAQ;AACnB;AACA,aAAa,SAAS;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,8CAA8C,kBAAkB;AAChfile":"jfrog-ui-essentials.umd.jfTextBox.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=74168780&scoped=true&lang=less&\"","// extracted by mini-css-extract-plugin","var root = require('./_root');\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nmodule.exports = now;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"jf-text-box-container\"},[_c('div',{staticClass:\"jf-text-box-content-current\"},[_vm._v(_vm._s(_vm.content)+\" \"),(_vm.ready && _vm.isOverflowing)?_c('span',{staticClass:\"jf-text-box-show-all\",style:({'white-space': _vm.wrapSeeAll ? 'inherit' : 'nowrap'}),domProps:{\"innerHTML\":_vm._s(_vm.seeAllCustomText)},on:{\"click\":function($event){return _vm.seeAll()}}}):_vm._e()]),_c('div',{staticClass:\"jf-text-box-content-full\"}),_c('div',{staticClass:\"jf-text-box-content-stage\"})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <div>\n        <div class=\"jf-text-box-container\">\n            <div class=\"jf-text-box-content-current\">{{ content }} <span v-if=\"ready && isOverflowing\"\n                      class=\"jf-text-box-show-all\"\n                      :style=\"{'white-space': wrapSeeAll ? 'inherit' : 'nowrap'}\"\n                      @click=\"seeAll()\"\n                      v-html=\"seeAllCustomText\">\n                </span>\n            </div>\n            <div class=\"jf-text-box-content-full\"></div>\n            <div class=\"jf-text-box-content-stage\"></div>\n        </div>\n    </div>\n\n</template>\n\n<script>\n    import map from 'lodash/map';\n    import trimEnd from 'lodash/trimEnd';\n    import debounce from 'lodash/debounce';\n    import flatten from 'lodash/flatten';\n    import SanitizeMixin from \"../../mixins/Sanitize\";\n\n    export default {\n        name: 'jf-text-box',\n        props: [\n            'text',\n            'modalTitle',\n            'seeAllText',\n            'maxLines',\n            'noAction',\n            'customAction'\n        ],\n        'jf@inject': [\n            '$scope',\n            '$element',\n            '$timeout',\n            '$interval',\n            '$compile',\n            '$q',\n            'JfFullTextService'\n        ],\n        mixins:[SanitizeMixin],\n        data() {\n            return {\n                content: null,\n                ready: null,\n                wrapSeeAll: null\n            };\n        },\n        mounted() {\n            this.fullTextElement.text(this.sanitizedText);\n            this.registerResize();\n            setTimeout(() => this.refreshText());\n            this.fullTextModal= this.JfFullTextService\n        },\n        beforeDestroy() {\n            this.deregisterResize();\n        },\n        methods: {\n            registerResize() {\n\n                let appliedRefresh = () => {\n                    this.refreshText();\n                    this.$forceUpdate();\n                }\n                let debouncedRefresh = debounce(appliedRefresh, 0, {leading: true});\n                // let throttledRefresh = throttle(appliedRefresh, 150, {/*leading: false*/})\n\n                this.onResize = debouncedRefresh;\n\n                $(window).on('resize', this.onResize)\n            },\n            deregisterResize() {\n                $(window).off('resize', this.onResize)\n            },\n            setStageText(text) {\n                this.stageElement.text(text);\n            },\n\n            refreshText() {\n                this.measureLineHeight();\n\n                if (!this.isOverflowing) {\n                    this.content = this.sanitizedText;\n                }\n                else {\n                    this.stageElement.html('');\n                    let words = this.splitText(this.sanitizedText);\n                    let i = 1;\n                    let getNumOfLinesUntil = (index, withSeeAll = true) => {\n                        this.setStageText(trimEnd(words.slice(0, index).join('')) + (withSeeAll ? ' ' : ''))\n                        if (withSeeAll) this.stageElement.append($(`  <div class=\"jf-text-box-show-all\">${this.seeAllCustomText}</div>`));\n                        return this.numOfStageRows();\n                    }\n                    while (getNumOfLinesUntil(i) <= this.numOfWholeRows && i <= words.length) {\n                        i++;\n                    }\n\n                    if (getNumOfLinesUntil(i, false) !== getNumOfLinesUntil(i)) {\n                        this.wrapSeeAll = true;\n                    }\n                    else this.wrapSeeAll = false;\n                    /*\n                                let saved = i;\n                                i--;\n                                while (getNumOfLinesUntil(i, false) !== getNumOfLinesUntil(i) && i > 0) {\n                                    console.log('?');\n                                    i--;\n                                }\n\n                                if  (i === 0) {\n                                    i = saved;\n                                    this.wrapSeeAll = true;\n                                }\n                                else this.wrapSeeAll = false;\n                    */\n                    let fit = words.slice(0, i);\n\n                    this.setStageText(trimEnd(fit.join('')) + (this.isOverflowing ? ' ' : ''));\n                    if (this.isOverflowing) this.stageElement.append($(`<div class=\"jf-text-box-show-all\">${this.seeAllCustomText}</div>`));\n\n                    let m = 0;\n                    while (this.numOfStageRows() > this.numOfWholeRows && i > m) {\n                        m++;\n\n                        fit = words.slice(0, i - m);\n                        this.setStageText(trimEnd(fit.join('')) + (this.isOverflowing ? ' ' : ''));\n                        if (this.isOverflowing) this.stageElement.append($(`<div class=\"jf-text-box-show-all\">${this.seeAllCustomText}</div>`));\n                    }\n                    this.content = trimEnd(fit.join(''));\n\n                }\n                this.ready = true;\n                this.$forceUpdate();\n            },\n            numOfStageRows() {\n                let contentHeight = this.stageElement.height();\n                return Math.ceil(contentHeight / this.lineHeight - 0.1);\n            },\n\n            splitText(text) {\n\n                if (this.splitCache) return this.splitCache;\n                else {\n                    let regex = /\\s+/g;\n                    let parts = [];\n                    let match = regex.exec(text);\n                    let lastIndex = 0;\n                    while (match) {\n                        parts.push(text.substr(lastIndex, match.index - lastIndex) + match[0]);\n                        lastIndex = match.index + match[0].length;\n                        match = regex.exec(text);\n                    }\n                    parts.push(text.substr(lastIndex, text.length - lastIndex));\n\n                    parts = map(parts, part => {\n                        if (part.length > 16) return part.split('');\n                        else return part;\n                    })\n\n                    parts = flatten(parts);\n\n                    this.splitCache = parts;\n                    return parts;\n                }\n\n            },\n\n            measureLineHeight() {\n                this.stageElement.text('*');\n                this.lineHeight = this.stageElement.height();\n                if (this.maxLines) {\n                    this.containerElement.height(parseInt(this.maxLines) * this.lineHeight);\n                }\n            },\n\n            seeAll() {\n                if (this.noAction) return;\n                let text = this.sanitizedText;\n                if (this.customAction) {\n                    this.customAction({text})\n                }\n                else {\n                    let modalInstance = this.fullTextModal.showFullTextModal(text, this.modalTitle || 'Full Text', 500, false, null, 'text-box-show-all-modal');\n                    this.deregisterResize();\n                    modalInstance.result.finally(() => {\n                        setTimeout(() => this.registerResize());\n                    })\n                }\n            }\n\n            /* Getter Elements */\n        },\n        computed: {\n            seeAllCustomText() {\n                return this.seeAllText ? this.$sanitize(this.seeAllText) : '(Show All ...)'\n            },\n            sanitizedText() {\n                return this.$sanitize(this.text);\n            },\n            containerElement: {\n                get: function(){\n                    if (!this.cachedContainerElement) {\n                        this.cachedContainerElement = $(this.$element).find('.jf-text-box-container');\n                    }\n                    return this.cachedContainerElement\n                }\n            },\n            fullTextElement: {\n                get: function() {\n                    if (!this.cachedFullTextElement) {\n                        this.cachedFullTextElement = $(this.$element).find('.jf-text-box-content-full')\n                    }\n                    return this.cachedFullTextElement;\n                }\n            },\n\n            currentTextElement: {\n                get: function() {\n                    if (!this.cachedCurrentTextElement) {\n                        this.cachedCurrentTextElement = $(this.$element).find('.jf-text-box-content-current')\n                    }\n                    return this.cachedCurrentTextElement;\n                }\n            },\n\n            stageElement: {\n                get: function() {\n                    if (!this.cachedStageElement) {\n                        this.cachedStageElement = $(this.$element).find('.jf-text-box-content-stage')\n                    }\n                    return this.cachedStageElement;\n                }\n            },\n\n            containerHeight: {\n                get: function() {\n                    return this.containerElement.height();\n                }\n            },\n\n            containerWidth: {\n                get: function() {\n                    return this.containerElement.width();\n                }\n            },\n\n            numOfWholeRows: {\n                get: function() {\n                    let auto = Math.floor(this.containerHeight / this.lineHeight + 0.1);\n                    return this.maxLines ? Math.min(parseInt(this.maxLines), auto) : auto;\n                }\n            },\n\n            numOfActualRows: {\n                get: function() {\n                    let contentHeight = this.fullTextElement.height();\n                    return Math.ceil(contentHeight / this.lineHeight - 0.1);\n                }\n            },\n\n            numOfVisibleRows: {\n                get: function() {\n                    let contentHeight = this.currentTextElement.height();\n                    return Math.ceil(contentHeight / this.lineHeight - 0.1);\n                }\n            },\n\n            isOverflowing: {\n                get: function() {\n                    return this.numOfActualRows > this.numOfWholeRows;\n\n                }\n            }\n        }\n    }\n\n</script>\n\n<style scoped lang=\"less\">\n.jf-text-box {\n    height: auto;\n    .jf-text-box-container {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        position: relative;\n        .jf-text-box-content-full,\n        .jf-text-box-content-stage,\n        .jf-text-box-content-current {\n            white-space: pre-wrap;\n            width: 100%;\n            word-wrap: break-word;\n            height: 100%;\n        }\n\n    .jf-text-box-content-stage,\n        .jf-text-box-content-full {\n            display: none;\n        }\n        .jf-text-box-show-all {\n            display: inline;\n            font-weight: 800;\n            cursor: pointer;\n        }\n    }\n\n    .text-box-show-all-modal {\n        .modal-body.simple-text {\n            word-wrap: break-word;\n        }\n    }\n}\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=74168780&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=74168780&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"74168780\",\n  null\n  \n)\n\nexport default component.exports","var isObject = require('./isObject'),\n    now = require('./now'),\n    toNumber = require('./toNumber');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nmodule.exports = debounce;\n"],"sourceRoot":""}
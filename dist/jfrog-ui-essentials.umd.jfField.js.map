{"version":3,"sources":["webpack://jfrog-ui-essentials/./src/components/JfFieldComponent/index.vue?a05c","webpack://jfrog-ui-essentials/./src/components/JfFieldComponent/index.vue?8a48","webpack://jfrog-ui-essentials/src/components/JfFieldComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfFieldComponent/index.vue?b43a","webpack://jfrog-ui-essentials/./src/components/JfFieldComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfFieldComponent/index.vue?b88f"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA,0BAA0B,aAAa,0BAA0B,wBAAwB,2BAA2B,8BAA8B,yCAAyC,YAAY,OAAO,6BAA6B,4BAA4B,OAAO,kFAAkF,sBAAsB;AACtX;AACA,kBAAkB,YAAY,OAAO,wCAAwC,kEAAkE,qCAAqC,iCAAiC,iBAAiB,4BAA4B,wFAAwF,iBAAiB,aAAa;AACxX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC4BA;AACA;AACA;AACA;AACA;AAEA;AACA,kBADA;AAEA;AACA;AADA,GAFA;AAKA,gBACA,eADA,EAEA,kBAFA,EAGA,UAHA,EAIA,YAJA,EAKA,QALA,CALA;AAYA,UACA,UADA,EAEA,aAFA,EAGA,iBAHA,EAIA,mBAJA,EAKA,mBALA,EAMA,WANA,EAOA,oBAPA,EAQA,kBARA,EASA,sBATA,EAUA,aAVA,EAWA,oBAXA,CAZA;AAyBA,MAzBA,kBAyBA;AACA;AACA,oBADA;AAEA,uBAFA;AAGA,qBAHA;AAIA,wBAJA;AAKA,mBALA;AAMA;AANA;AAQA,GAlCA;AAmCA,SAnCA,qBAmCA;AAEA;;AACA;AACA;AACA;;AAEA;AACA;AACA,6EACA,iFADA,GAEA,IAFA;AAIA;AACA;AACA;AACA,GAnDA;AAoDA;AACA,QADA,kBACA;AAAA;;AAEA;;AAEA;AACA;;AACA;AAAA;AAAA;AAAA;AAAA;;AACA;;AACA;AACA;;AACA;AACA,SAHA;;AAKA;AACA;;AACA;;AACA;;AACA;AACA,SALA;;AAOA;AAAA;AAAA;;AAEA;AACA;AAAA;AAAA;;AACA;AAAA;AAAA;AACA;;AACA;AACA;AAAA;AAAA;AACA;;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;;AACA;AACA,OA9BA;;AAgCA;AACA;AAAA;AAAA;AACA,OAFA,MAGA;AACA;AACA;AAEA,KA5CA;AA6CA,cA7CA,wBA6CA;AAAA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;;AACA;AACA,WAJA,MAKA;AACA;AACA;AACA,SATA;AAUA;AACA,KA9DA;AA+DA,sBA/DA,8BA+DA,QA/DA,EA+DA;AACA;AACA;AACA,OAFA,MAGA;AACA;AACA;AACA,KAtEA;AAuEA,oBAvEA,4BAuEA,QAvEA,EAuEA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KA7EA;AA8EA,WA9EA,mBA8EA,KA9EA,EA8EA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA,WAFA,MAEA;AACA;AACA;AACA;AACA,OARA;;AAUA;AACA;AACA;AACA;AACA,SAHA,MAGA;AACA;AACA;AACA;AACA,KAlGA;AAmGA,YAnGA,sBAmGA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OALA;AAMA,KA3GA;AA4GA,cA5GA,wBA4GA;AACA;AACA;AACA;AACA;AACA,KAjHA;AAkHA,YAlHA,sBAkHA;AACA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA,KAzHA;AA2HA,cA3HA,wBA2HA;AACA;AACA;AACA;;AACA;AACA,kEACA,sDACA,6DACA,uEACA,uFACA,qEACA,kEACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,SAFA;AAGA;;AAEA;AACA;AACA;AACA,SAFA,MAGA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,aAJA;AAKA;AACA;AACA;;AAGA;AACA;AAtKA;AApDA,G;;ACrC8U,CAAgB,gIAAG,EAAC,C;;;;;;;;ACAlQ;AACvC;AACL;AACsC;;;AAG1F;AAC6F;AAC7F,gBAAgB,8CAAU;AAC1B,EAAE,mDAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,uG;;;;;;;ACnBf,uC","file":"jfrog-ui-essentials.umd.jfField.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=670eccd2&scoped=true&lang=less&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"jf-field\",class:{'sticky-errors': _vm.dontPushDownErrors}},[_c('div',{class:{'input-label': _vm.animated}},[_c('validation-provider',{attrs:{\"rules\":_vm.inferredRules,\"events\":['input', 'focus'],\"name\":_vm.validationDomain},scopedSlots:_vm._u([{key:\"default\",fn:function(ref){\nvar errors = ref.errors;\nreturn _c('div',{},[_c('div',{class:{invalid: errors.length && !_vm.focused}},[_vm._t(\"default\")],2),(errors.length && !_vm.focused)?_c('div',{staticClass:\"field-validation-error\"},_vm._l((errors),function(error){return _c('div',{staticClass:\"jf-validation\"},[_vm._v(\"\\n                            \"+_vm._s(error)+\"\\n                        \")])}),0):_vm._e()])}}],null,true)})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <div>\n        <div :class=\"{'sticky-errors': dontPushDownErrors}\" class=\"jf-field\">\n            <div :class=\"{'input-label': animated}\">\n                <validation-provider :rules=\"inferredRules\" :events=\"['input', 'focus']\" :name=\"validationDomain\">\n                    <div slot-scope=\"{ errors }\">\n                        <div :class=\"{invalid: errors.length && !focused}\">\n                            <slot></slot>\n                        </div>\n                        <div class=\"field-validation-error\"\n                             v-if=\"errors.length && !focused\">\n                            <div v-for=\"error in errors\" class=\"jf-validation\">\n                                {{ error }}\n                            </div>\n                        </div>\n                    </div>\n                </validation-provider>\n            </div>\n\n            <!--\n                        <jf-validation v-if=\"(formField.showErrors || alwaysShowErrors || (formField.initialValue && !formField.$error.required)) && !formField.isAutoFocused\" :field=\"formField\" :validations-params=\"validationsParams\" :dont-push-down=\"dontPushDownErrors\" :dictionary=\"validations\">\n                        </jf-validation>\n            -->\n        </div>\n    </div>\n\n</template>\n\n<script>\n\n    import { ValidationProvider } from 'vee-validate';\n    import isObject from 'lodash/isObject';\n    import isString from 'lodash/isString';\n    import trim from 'lodash/trim';\n    import extend from 'lodash/extend';\n\n    export default {\n        name: 'jf-field',\n        components: {\n            ValidationProvider\n        },\n        'jf@inject': [\n            'JFrogEventBus',\n            'JFrogUILibConfig',\n            '$timeout',\n            '$rootScope',\n            '$scope'\n        ],\n        props: [\n            'animated',\n            'validations',\n            'validationRules',\n            'customValidations',\n            'validationsParams',\n            'autofocus',\n            'invalidateOnSubmit',\n            'alwaysShowErrors',\n            'dontValidateDisabled',\n            'delayedInit',\n            'dontPushDownErrors'\n        ],\n        data() {\n            return {\n                focused: false,\n                inferredRules: '',\n                formField: null,\n                inputElement: null,\n                inputName: '',\n                validationDomain: this.validations || 'common'\n            };\n        },\n        mounted() {\n\n            this.inputElement = this.$element.find('input');\n            if (!this.inputElement.length) {\n                this.inputElement = this.$element.find('textarea');\n            }\n\n            if (this.inputElement.length) {\n                this.inputName = this.inputElement[0].attributes['name'] ? this.inputElement[0].attributes['name'].value : '';\n                this.formField = this.$element.parents('form')[0].attributes['name']\n                                    ? window[this.$element.parents('form')[0].attributes['name'].value][this.inputName]\n                                    : null\n\n                this.inferRules();\n                this.init();\n            }\n        },\n        methods: {\n            init() {\n\n                let EVENTS = this.JFrogEventBus.getEventsDefinition();\n\n                let init = ()=>{\n                    if (this.formField) this.formField.initialValue = true;\n                    this.$scope.$watch(()=>this.autofocus, () => this.focusInput());\n                    this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.FORM_SUBMITTED, this._onFormSubmitted);\n                    this.JFrogEventBus.registerOnScope(this.$scope, EVENTS.FORM_CLEAR_FIELD_VALIDATION, force => {\n                        this._onBlur(force);\n                        if (this.formField) this.formField.preventShowErrors = true;\n                    });\n\n                    this.$scope.$on('$destroy', () => {\n                        this.inputElement.off('blur');\n                        this.inputElement.off('keyup');\n                        this.inputElement.off('keydown');\n                        this.inputElement.off('focus');\n                    });\n\n                    this.inputElement.on('keydown', () => this._onKeyDown());\n\n                    if (!this.invalidateOnSubmit && this.validationDomain) {\n                        this.inputElement.on('blur', () => this._onBlur());\n                        this.inputElement.on('keyup', () => this._onKeyUp());\n                    }\n                    if (this.invalidateOnSubmit || this.validationDomain) {\n                        this.inputElement.on('focus', () => this._onFocus());\n                    }\n\n                    if (this.dontValidateDisabled) {\n                        this.$rootScope.$watch(() => this.inputElement[0].disabled, () => this._onDisabledChanged(this.inputElement[0].disabled));\n                    }\n                    this.focusInput();\n                };\n\n                if (this.delayedInit) {\n                    this.$timeout(()=>init());\n                }\n                else {\n                    init();\n                }\n\n            },\n            focusInput() {\n                if (this.autofocus && this.autofocus != 'false') {\n                    if (this.formField) {\n                        this.formField.isAutoFocused = true;\n                        this.formField.isAutoFocusedFlag = true;\n                    }\n                    this.$timeout(() => {\n                        if (this.inputElement.scrollParent && this.inputElement.scrollParent()) {\n                            var y = this.inputElement.scrollParent().scrollTop();\n                            this.inputElement.focus();\n                            this.inputElement.scrollParent().scrollTop(y);\n                        }\n                        else {\n                            this.inputElement.focus();\n                        }\n                    });\n                }\n            },\n            _onDisabledChanged(disabled) {\n                if (disabled) {\n                    this.formField.showErrors = false;\n                }\n                else {\n                    this.formField.showErrors = true;\n                }\n            },\n            _onFormSubmitted(formName) {\n                if (!formName || (this.form.$name === formName && !this.formField.$valid)) {\n                    if (this.formField) this.formField.showErrors = true;\n                } else {\n                    if (this.formField) this.formField.showErrors = false;\n                }\n            },\n            _onBlur(force) {\n                this.focused = false;\n                this.$timeout(() => {\n                    if (this.formField) {\n                        if (force) {\n                            this.formField.showErrors = false;\n                        } else if (!this.formField.preventShowErrors){\n                            this.formField.showErrors = true;\n                        }\n                    }\n                });\n\n                if (this.formField && this.formField.isAutoFocused) {\n                    if (!this.formField.isAutoFocusedFlag) {\n                        this.formField.isAutoFocused = false;\n                        this.formField.showErrors = true;\n                    } else {\n                        this.formField.isAutoFocusedFlag = false;\n                    }\n                }\n            },\n            _onFocus() {\n                this.focused = true;\n                this.$timeout(() => {\n                    if (this.formField) {\n                        this.formField.showErrors = false;\n                        this.formField.preventShowErrors = false;\n                    }\n                });\n            },\n            _onKeyDown() {\n                if (this.formField) {\n                    this.formField.initialValue = false;\n                    this.formField.isAutoFocusedFlag = false;\n                }\n            },\n            _onKeyUp() {\n                let value = this.inputElement.val();\n                if (value !== null && value !== undefined && value !== '') {\n                    this.inputElement.addClass('hascontent');\n                } else {\n                    this.inputElement.removeClass('hascontent');\n                }\n            },\n\n            inferRules() {\n                let rules = {};\n                let attrs = this.inputElement[0].attributes;\n                if (attrs.required) rules.required = true;\n                if (attrs.type) {\n                    if (attrs.type.value === 'email') rules.email = true;\n                    else if (attrs.type.value === 'url') rules.url = true;\n                    else if (attrs.type.value === 'number') rules.decimal = true;\n                    else if (attrs.type.value === 'date') rules.date_format= 'YYYY-MM-DD';\n                    else if (attrs.type.value === 'datetime-local') rules.date_format = 'YYYY-MM-DDThh:mm';\n                    else if (attrs.type.value === 'time') rules.date_format = 'YYYY-Www';\n                    else if (attrs.type.value === 'week') rules.date_format = 'hh:mm';\n                    else if (attrs.type.value === 'month') rules.date_format = 'YYYY-MM';\n                }\n                if (attrs.min) rules.min_value = attrs.min.value;\n                if (attrs.max) rules.max_value = attrs.max.value;\n                if (attrs.pattern) rules.regex = attrs.pattern.value;\n\n                if (this.customValidations) {\n                    rules.customValidations = this.customValidations;\n                    Object.keys(this.customValidations).forEach(key => {\n                        rules[key] = true;\n                    })\n                }\n\n                if (this.validationRules) {\n                    if (isObject(this.validationRules)) {\n                        extend(rules,this.validationRules)\n                    }\n                    else {\n                        if (isString(this.validationRules)) {\n                            let strParts = this.validationRules.split('|').map(p => trim(p));\n                            strParts.forEach(part => {\n                                let key = part.split(':')[0];\n                                let val = part.substr(key.length);\n                                rules[key] = val;\n                            })\n                        }\n                    }\n                }\n\n\n                this.inferredRules = rules;\n            }\n        }\n    }\n\n</script>\n\n<style scoped lang=\"less\">\n\n    @import \"../../assets/stylesheets/variables.less\";\n\n    .jf-field {\n        label {\n            font-weight: 400;\n            margin-bottom: 3px;\n        }\n        &.sticky-errors {\n            position: relative;\n        }\n    }\n\n    label.mandatory {\n        &::after {\n            content: \"*\";\n            margin-left: 4px;\n        }\n    }\n\n\n    .jf-validation {\n        color: @redError;\n    }\n\n    /deep/ .invalid {\n        input:not([disabled]) {\n            border-color: @redError;\n            box-shadow: none;\n        }\n    }\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=670eccd2&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=670eccd2&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"670eccd2\",\n  null\n  \n)\n\nexport default component.exports","// extracted by mini-css-extract-plugin"],"sourceRoot":""}
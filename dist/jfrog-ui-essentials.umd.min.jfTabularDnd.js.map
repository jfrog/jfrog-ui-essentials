{"version":3,"sources":["webpack://jfrog-ui-essentials/./src/components/JfTabularDndComponent/index.vue?0278","webpack://jfrog-ui-essentials/./src/components/JfTabularDndComponent/index.vue?7fcd","webpack://jfrog-ui-essentials/src/components/JfTabularDndComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfTabularDndComponent/index.vue?1c20","webpack://jfrog-ui-essentials/./src/components/JfTabularDndComponent/index.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","disabled","class","availableItems","length","availableItemsTableOptions","draggedRow","draggedRows","selectedItems","selectedItemsTableOptions","isIncludeListEmpty","areAllRowsDisabled","getFilteredData","on","$event","excludeAll","_v","isIncludeListItemSelected","excludeSelected","isExcludeListItemSelected","includeSelected","isExcludeListEmpty","includeAll","staticRenderFns","component"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.jfTabularDnd.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=cee73b30&scoped=true&lang=less&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"jf-tabular-dnd\",attrs:{\"tabindex\":\"0\",\"disabled\":_vm.disabled}},[_c('div',{staticClass:\"tabular-dnd-table-container available-table\",class:{'no-data': !_vm.availableItems.length && (!_vm.availableItemsTableOptions || (!_vm.availableItemsTableOptions.draggedRow && !_vm.availableItemsTableOptions.draggedRows)) && !_vm.selectedItems.length && (!_vm.selectedItemsTableOptions || (!_vm.selectedItemsTableOptions.draggedRow && !_vm.selectedItemsTableOptions.draggedRows))}},[_c('jf-table-view-wrapper',{attrs:{\"options\":_vm.availableItemsTableOptions,\"data\":_vm.availableItems}})],1),_c('div',{staticClass:\"dnd-actions-wrap\"},[_c('ul',{staticClass:\"dnd-actions\"},[_c('li',[_c('span',{staticClass:\"dnd-exclude-all\",attrs:{\"disabled\":_vm.isIncludeListEmpty() || _vm.areAllRowsDisabled(_vm.selectedItemsTableOptions.getFilteredData()) || _vm.disabled},on:{\"click\":function($event){return _vm.excludeAll()}}},[_vm._v(\"«\\n                \")])]),_c('li',[_c('span',{staticClass:\"dnd-exclude-selected\",attrs:{\"disabled\":!_vm.isIncludeListItemSelected() || _vm.disabled},on:{\"click\":function($event){return _vm.excludeSelected()}}},[_vm._v(\"‹\\n                \")])]),_c('li',[_c('span',{staticClass:\"dnd-include-selected\",attrs:{\"disabled\":!_vm.isExcludeListItemSelected() || _vm.disabled},on:{\"click\":function($event){return _vm.includeSelected()}}},[_vm._v(\"›\\n                \")])]),_c('li',[_c('span',{staticClass:\"dnd-include-all\",attrs:{\"disabled\":_vm.isExcludeListEmpty() || _vm.areAllRowsDisabled(_vm.availableItemsTableOptions.getFilteredData()) || _vm.disabled},on:{\"click\":function($event){return _vm.includeAll()}}},[_vm._v(\"»\\n                \")])])])]),_c('div',{staticClass:\"tabular-dnd-table-container selected-table\"},[_c('jf-table-view-wrapper',{attrs:{\"options\":_vm.selectedItemsTableOptions,\"data\":_vm.selectedItems}})],1)])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <div>\n        <div class=\"jf-tabular-dnd\" tabindex=\"0\" :disabled=\"disabled\">\n            <div class=\"tabular-dnd-table-container available-table\"\n                 :class=\"{'no-data': !availableItems.length && (!availableItemsTableOptions || (!availableItemsTableOptions.draggedRow && !availableItemsTableOptions.draggedRows)) && !selectedItems.length && (!selectedItemsTableOptions || (!selectedItemsTableOptions.draggedRow && !selectedItemsTableOptions.draggedRows))}\">\n                <jf-table-view-wrapper :options=\"availableItemsTableOptions\"\n                                       :data=\"availableItems\">\n                </jf-table-view-wrapper>\n            </div>\n\n            <div class=\"dnd-actions-wrap\">\n                <ul class=\"dnd-actions\">\n                    <li>\n                        <span @click=\"excludeAll()\" class=\"dnd-exclude-all\"\n                              :disabled=\"isIncludeListEmpty() || areAllRowsDisabled(selectedItemsTableOptions.getFilteredData()) || disabled\">«\n                    </span>\n                    </li>\n                    <li>\n                        <span @click=\"excludeSelected()\" class=\"dnd-exclude-selected\"\n                              :disabled=\"!isIncludeListItemSelected() || disabled\">‹\n                    </span>\n                    </li>\n                    <li>\n                        <span @click=\"includeSelected()\" class=\"dnd-include-selected\"\n                              :disabled=\"!isExcludeListItemSelected() || disabled\">›\n                    </span>\n                    </li>\n                    <li>\n                        <span @click=\"includeAll()\" class=\"dnd-include-all\"\n                              :disabled=\"isExcludeListEmpty() || areAllRowsDisabled(availableItemsTableOptions.getFilteredData()) || disabled\">»\n                    </span>\n                    </li>\n                </ul>\n            </div>\n\n            <div class=\"tabular-dnd-table-container selected-table\">\n                <jf-table-view-wrapper :options=\"selectedItemsTableOptions\"\n                                       :data=\"selectedItems\">\n                </jf-table-view-wrapper>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n<script>\n\n    import JfTableViewWrapper from '../JfTableViewWrapper/index';\n    export default {\n        name: 'jf-tabular-dnd',\n        components: {JfTableViewWrapper},\n        props: [\n            'availableItems',\n            'selectedItems',\n            'itemClassAttr',\n            'itemDraggableAttr',\n            'columns',\n            'numberOfRows',\n            'availableItemsColumns',\n            'selectedItemsColumns',\n            'entityName',\n            'appScope',\n            'disableWholeRowSelection',\n            'disabled'\n        ],\n        'jf@inject': [\n            '$element',\n            '$scope',\n            'JFrogTableViewOptions'\n        ],\n        data() {\n            return {\n                availableItemsTableOptions: null,\n                selectedItemsTableOptions: null,\n                availableItemsColumnsVar: this.availableItemsColumns,\n                selectedItemsColumnsVar: this.selectedItemsColumns,\n                currNumberOfRows: this.numberOfRows || 8\n            };\n        },\n        created() {\n            if (this.columns) {\n                this.availableItemsColumnsVar = _.cloneDeep(this.columns);\n                this.selectedItemsColumnsVar = _.cloneDeep(this.columns);\n            }\n\n            this.createTables();\n        },\n        watch: {\n            availableItems: val => {\n                return this && this.watchListChanges && this.watchListChanges(val);\n            },\n            selectedItems: val => {\n                return this && this.watchListChanges && this.watchListChanges(val);\n            }\n        },\n        ng1_legacy: {'controllerAs': 'jfTabularDnD'},\n        methods: {\n            watchListChanges(val) {\n                this._refreshBothTables();\n                this._fireOnChange();\n            },\n            createAutoColumns() {\n                ['availableItemsColumnsVar', 'selectedItemsColumnsVar'].forEach(columnsArrayName => {\n                    let newColumnsArray = _.map(this[columnsArrayName], column => {\n                        if (_.isObject(column)) {\n                            return column;\n                        } else if (_.isString(column)) {\n                            return {field: column};\n                        }\n                    });\n                    // Replacing the content of the array without changing the reference to it, to support setting Array literals on templates.\n                    this[columnsArrayName].splice(0, this[columnsArrayName].length, ...newColumnsArray);\n                });\n            },\n            createTables() {\n\n                this.createAutoColumns();\n\n                this.availableItemsTableOptions = new this.JFrogTableViewOptions(this.appScope || this.$scope);\n                this.selectedItemsTableOptions = new this.JFrogTableViewOptions(this.appScope || this.$scope);\n\n                let emptyPlaceholdersStyle = {\n                    height: 50 * this.currNumberOfRows + 'px',\n                    'line-height': 50 * this.currNumberOfRows + 'px'\n                };\n\n                this.availableItemsTableOptions._registerTabularDnd(this, 'available', this.selectedItemsTableOptions,\n                    emptyPlaceholdersStyle);\n                this.selectedItemsTableOptions._registerTabularDnd(this, 'selected', this.availableItemsTableOptions,\n                    emptyPlaceholdersStyle);\n\n                let {availableObjectName, selectedObjectName} = this._getObjectNames();\n                this.availableItemsTableOptions\n                    .setColumns(this.availableItemsColumnsVar)\n                    .setSelection(this.availableItemsTableOptions.MULTI_SELECTION)\n                    .setPaginationMode(this.availableItemsTableOptions.VIRTUAL_SCROLL)\n                    .showPagination(false)\n                    .setDraggable()\n                    .setRowsPerPage(parseInt(this.currNumberOfRows))\n                    .setObjectName(availableObjectName)\n                    .setRowClassAttr(this.itemClassAttr)\n                    .disableFilterWhen(() => this.disabled)\n                    .setEmptyTableText(!this.availableItems.length && !this.selectedItems.length ? 'No data found' : 'Drag row here');\n\n                this.selectedItemsTableOptions\n                    .setColumns(this.selectedItemsColumnsVar)\n                    .setSelection(this.selectedItemsTableOptions.MULTI_SELECTION)\n                    .setPaginationMode(this.selectedItemsTableOptions.VIRTUAL_SCROLL)\n                    .showPagination(false)\n                    .setDraggable()\n                    .setRowsPerPage(parseInt(this.currNumberOfRows))\n                    .setObjectName(selectedObjectName)\n                    .setRowClassAttr(this.itemClassAttr)\n                    .disableFilterWhen(() => this.disabled)\n                    .setEmptyTableText('Drag row here');\n\n                this.$set(this.selectedItemsTableOptions, 'isRowSelectable',\n                    this.$set(this.availableItemsTableOptions, 'isRowSelectable',\n                        row => this._isItemDraggable(row.entity)));\n\n\n                if (!this.disableWholeRowSelection) {\n                    let toggleSelection = row => {\n                        if (this.disabled || (this.itemDraggableAttr && row.entity[this.itemDraggableAttr] === false)) {\n                            return;\n                        }\n                        this.$set(row.entity, '$selected', !row.entity.$selected);\n                    };\n                    this.availableItemsTableOptions.on('row.clicked', toggleSelection);\n                    this.selectedItemsTableOptions.on('row.clicked', toggleSelection);\n                }\n                this.availableItemsTableOptions.on('row.clicked', row => this.$emit('on-row-click', {\n                    row: row.entity,\n                    list: 'available'\n                }));\n                this.selectedItemsTableOptions.on('row.clicked', row => this.$emit('on-row-click', {\n                    row: row.entity,\n                    list: 'selected'\n                }));\n\n                this.availableItemsTableOptions.on('selection.change', () => {\n                    if (this.disabled) {\n                        this.availableItemsTableOptions.clearSelection();\n                    }\n                });\n                this.selectedItemsTableOptions.on('selection.change', () => {\n                    if (this.disabled) {\n                        this.selectedItemsTableOptions.clearSelection();\n                    }\n                });\n\n                this.$scope.$watch('jfTabularDnD.disabled', () => {\n                    if (this.disabled) {\n                        this.selectedItemsTableOptions.clearSelection();\n                        this.availableItemsTableOptions.clearSelection();\n                    }\n                });\n            },\n            _getObjectNames() {\n\n                let availableObjectName, selectedObjectName;\n\n                if (this.entityName) {\n                    if (this.entityName.indexOf('/') !== -1) {\n                        let [single, plural] = this.entityName.split('/');\n                        availableObjectName = 'Available ' + single + '/' + 'Available ' + plural;\n                        selectedObjectName = 'Included ' + single + '/' + 'Included ' + plural;\n                    } else {\n                        availableObjectName = 'Available ' + this.entityName;\n                        selectedObjectName = 'Included ' + this.entityName;\n                    }\n                } else {\n                    availableObjectName = 'Available Item';\n                    selectedObjectName = 'Included Item';\n                }\n\n                return {\n                    availableObjectName,\n                    selectedObjectName\n                };\n            },\n            areAllRowsDisabled(itemsList) {\n                if (!this.itemDraggableAttr || !itemsList) {\n                    return false;\n                }\n                let filtered = _.filter(itemsList, item => item.hasOwnProperty(`${ this.itemDraggableAttr }`) && item[this.itemDraggableAttr] === false);\n                return filtered.length === itemsList.length;\n            },\n            isIncludeListEmpty() {\n                if (!this.selectedItemsTableOptions || !this.selectedItemsTableOptions.dirCtrl) {\n                    return true;\n                }\n                return !this.selectedItemsTableOptions.getFilteredData().length;\n            },\n            isExcludeListEmpty() {\n                if (!this.availableItemsTableOptions || !this.availableItemsTableOptions.dirCtrl) {\n                    return true;\n                }\n                return !this.availableItemsTableOptions.getFilteredData().length;\n            },\n            isIncludeListItemSelected() {\n                if (!this.selectedItemsTableOptions || !this.selectedItemsTableOptions.dirCtrl) {\n                    return false;\n                }\n                let selected = this.selectedItemsTableOptions.getSelected();\n                let filtered = this.selectedItemsTableOptions.getFilteredData();\n                return !!selected.length;\n                selected = _.filter(selected, item => _.includes(filtered, item));\n            },\n            isExcludeListItemSelected() {\n                if (!this.availableItemsTableOptions || !this.availableItemsTableOptions.dirCtrl) {\n                    return false;\n                }\n                let selected = this.availableItemsTableOptions.getSelected();\n                let filtered = this.availableItemsTableOptions.getFilteredData();\n                selected = _.filter(selected, item => _.includes(filtered, item));\n                return !!selected.length;\n            },\n            excludeAll() {\n                if (this.isIncludeListEmpty() || this.disabled) {\n                    return;\n                }\n\n                let selected = this.selectedItemsTableOptions.getSelected();\n                selected.forEach(s => delete s.$selected);\n                this.$set(this.selectedItemsTableOptions.dirCtrl, 'allSelected', false);\n                let filtered = this.selectedItemsTableOptions.getFilteredData();\n                filtered = this._getOnlyDraggables(filtered);\n                this.availableItems.splice(this.availableItems.length, 0, ...filtered);\n                _.remove(this.selectedItems, i => _.includes(filtered, i));\n                this._refreshBothTables();\n                this._fireOnChange();\n            },\n            includeAll() {\n                if (this.isExcludeListEmpty() || this.disabled) {\n                    return;\n                }\n\n                let selected = this.availableItemsTableOptions.getSelected();\n                selected.forEach(s => delete s.$selected);\n                this.$set(this.availableItemsTableOptions.dirCtrl, 'allSelected', false);\n                let filtered = this.availableItemsTableOptions.getFilteredData();\n                filtered = this._getOnlyDraggables(filtered);\n                this.selectedItems.splice(this.selectedItems.length, 0, ...filtered);\n                _.remove(this.availableItems, i => _.includes(filtered, i));\n                this._refreshBothTables();\n                this._fireOnChange();\n            },\n            excludeSelected() {\n                if (!this.isIncludeListItemSelected() || this.disabled) {\n                    return;\n                }\n\n                let selected = this.selectedItemsTableOptions.getSelected();\n                selected.forEach(s => delete s.$selected);\n                this.$set(this.selectedItemsTableOptions.dirCtrl, 'allSelected', false);\n                let filtered = this.selectedItemsTableOptions.getFilteredData();\n                _.remove(selected, i => !_.includes(filtered, i));\n                selected = this._getOnlyDraggables(selected);\n                this.availableItems.splice(this.availableItems.length, 0, ...selected);\n                _.remove(this.selectedItems, item => _.includes(selected, item));\n                this._refreshBothTables();\n                this._fireOnChange();\n            },\n            includeSelected() {\n                if (!this.isExcludeListItemSelected() || this.disabled) {\n                    return;\n                }\n\n                let selected = this.availableItemsTableOptions.getSelected();\n                selected.forEach(s => delete s.$selected);\n                this.$set(this.availableItemsTableOptions.dirCtrl, 'allSelected', false);\n                let filtered = this.availableItemsTableOptions.getFilteredData();\n                _.remove(selected, i => !_.includes(filtered, i));\n                selected = this._getOnlyDraggables(selected);\n                this.selectedItems.splice(this.selectedItems.length, 0, ...selected);\n                _.remove(this.availableItems, item => _.includes(selected, item));\n                this._refreshBothTables();\n                this._fireOnChange();\n            },\n            _getOnlyDraggables(array) {\n                if (this.itemDraggableAttr) {\n                    return _.filter(array, item => this._isItemDraggable(item));\n                } else {\n                    return array;\n                }\n            },\n            _isItemDraggable(item) {\n                if (this.itemDraggableAttr) {\n                    return _.isUndefined(item[this.itemDraggableAttr]) || item[this.itemDraggableAttr];\n                } else {\n                    return true;\n                }\n            },\n            _refreshBothTables() {\n                [\n                    this.availableItemsTableOptions,\n                    this.selectedItemsTableOptions\n                ].forEach(tableOptions => {\n                    tableOptions.update();\n                    tableOptions.refreshFilter();\n                    tableOptions.dirCtrl.vsApi.refresh();\n                });\n            },\n            onDragTransfer(draggedRows, originTableOptions) {\n                draggedRows.forEach(draggedRow => delete draggedRow.$selected);\n                originTableOptions.dirCtrl.allSelected = false;\n                this._fireOnChange();\n            },\n            _fireOnChange() {\n                this.$emit('on-change',{available: this.availableItems, selected: this.selectedItems});\n            }\n        }\n    };\n\n</script>\n\n<style scoped lang=\"less\">\n\n    @import \"../../assets/stylesheets/variables.less\";\n\n    /deep/ .jf-tabular-dnd {\n        display: flex;\n        flex-direction: row;\n        width: 100%;\n        outline: none;\n        padding: 0;\n        margin: 0;\n        border: none;\n\n        .tabular-dnd-table-container {\n            width: 42%;\n            display: flex;\n            flex-direction: column;\n            .jf-table-row {\n                &:not(.headers) {\n                    &.selected {\n                        background-color: @grayBGLight;\n                    }\n                    &:hover,\n                    &.selected {\n                        cursor: grab;\n                    }\n                }\n            }\n            .jf-table-view .jf-table-top .counter-and-filter-wrapper .jf-table-filter input {\n                width: 280px;\n            }\n            .jf-table-view {\n                margin: 0;\n                .jf-table-top {\n                    margin-top: 0;\n                }\n                .jf-table-view-container {\n                    .jf-table-top .counter-and-filter-wrapper .table-counter {\n                        height: 22px;\n                    }\n                    .empty-table-placeholder{\n                        &.filter-no-results{\n                            flex-direction: column;\n                        }\n                    }\n                    .empty-table-placeholder:not(.filter-no-results) {\n                        margin-top: 2px;\n                        padding: 0;\n                        color: @grayBGDark;\n                        background-color: white;\n                        white-space: nowrap;\n                        overflow: hidden;\n                        font-size: 26px;\n                        border: 2px dashed;\n                        display: flex;\n                        align-items: center;\n                        justify-content: center;\n                        &.drop-target-mark {\n                            background-color: @grayBGLight;\n                            cursor: grabbing !important;\n                        }\n                    }\n                }\n            }\n            &.no-data {\n                .jf-table-view {\n                    .jf-table-view-container {\n                        .empty-table-placeholder:not(.filter-no-results) {\n                            background-color: @grayBGLighter;\n                        }\n                    }\n                }\n            }\n        }\n\n        .dnd-actions-wrap {\n            width: 16%;\n            .dnd-actions {\n                margin-top: 130px;\n                padding: 0;\n                text-align: center;\n\n                li {\n                    display: block;\n                    padding: 1px;\n                    text-align: center;\n\n                    span {\n                        display: inline-block;\n                        font-size: 24px;\n                        font-weight: 100;\n                        background-color: @greenFontHeader;\n                        color: white;\n                        line-height: 19px;\n                        width: 24px;\n                        height: 24px;\n                        cursor: pointer;\n                        overflow: hidden;\n                        padding-right: 1px;\n                        border-radius: 50%;\n                        &.dnd-exclude-selected {\n                            padding-right: 2px;\n                        }\n                        &.dnd-include-selected {\n                            padding-left: 2px;\n                        }\n                        &.dnd-exclude-all {\n                            padding-left: 0px;\n                        }\n                        &.dnd-include-all {\n                            padding-left: 2px;\n                        }\n                        &[disabled] {\n                            background-color: @grayBGDarker;\n                            cursor: default;\n                        }\n                    }\n                }\n            }\n        }\n        &[disabled=\"disabled\"] {\n            opacity: 0.45;\n            .jf-table-view .jf-table-view-container .jf-table-row {\n                &:not(.headers):last-child {\n                    background: transparent;\n                }\n            }\n            .dnd-actions-wrap .dnd-actions li span,\n            .jf-table-view .jf-table-view-container .jf-table-row .jf-table-cell .jf-table-cell-content {\n                &, .selection-icon, .selection-button {\n                    cursor: default;\n                }\n            }\n        }\n\n        &:not([disabled=\"disabled\"]) {\n            .jf-table-view .jf-table-view-container .jf-table-row:not(.drag-mark):not(.headers) {\n                &:last-child {\n                    background: transparent;\n                    opacity: 0.45 !important;\n                    .jf-table-cell {\n                        &, .selection-icon, .selection-button {\n                            cursor: default;\n                        }\n                    }\n                }\n            }\n        }\n\n    }\n\n    body.grabbing {\n        cursor: grabbing !important;\n    }\n\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=cee73b30&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=cee73b30&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"cee73b30\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
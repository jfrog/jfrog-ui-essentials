{"version":3,"sources":["webpack://jfrog-ui-essentials/./src/components/JfTableViewComponent/index.vue?7dc9","webpack://jfrog-ui-essentials/./src/components/JfTableViewWrapper/index.vue?b82a","webpack://jfrog-ui-essentials/src/components/JfTableViewWrapper/index.vue","webpack://jfrog-ui-essentials/./src/components/JfTableViewWrapper/index.vue?ed55","webpack://jfrog-ui-essentials/./src/components/JfTableViewWrapper/index.vue","webpack://jfrog-ui-essentials/./src/components/JfTableViewComponent/index.vue?1300","webpack://jfrog-ui-essentials/src/components/JfTableViewComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfTableViewComponent/index.vue?a1f9","webpack://jfrog-ui-essentials/./src/components/JfTableViewComponent/index.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","ref","attrs","tableOptions","_t","staticRenderFns","component","staticClass","staticStyle","options","tableId","newEntityCallback","on","$event","preventDefault","createNewEntity","newEntityCustomText","_v","_s","useAnWithObjectName","objectName","split","_e","getTotalRecords","jfTableView","columnsCustomization","availableColumns","headersVisible","headersRow","paginationMode","VIRTUAL_SCROLL","INFINITE_VIRTUAL_SCROLL","style","height","getActualPageHeight","pendingInfiniteScroll","getPrePagedData","vsApi","pre","_l","getPageData","entity","$index","key","dataWasSet","getRawData","length","pendingExternalPaging","externalTotalCount","total","registeredTabularDnd","emptyTableStyle","emptyTableText","emptyTableAction","emptyTableCallActionText","noFilterResults","noFilterResultsText","clearFilter","rowHeight","_m"],"mappings":"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","file":"jfrog-ui-essentials.umd.min.jfTable~jfTabularDnd.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=58b1c19e&scoped=true&lang=less&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('jf-table-view',{ref:\"tableView\",attrs:{\"options\":_vm.tableOptions}},[_vm._t(\"external-filters\",null,{\"slot\":\"external-filters\"})],2)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <jf-table-view :options=\"tableOptions\" ref=\"tableView\">\n        <slot name=\"external-filters\" slot=\"external-filters\"></slot>\n    </jf-table-view>\n\n</template>\n\n<script>\n    import isUndefined from 'lodash/isUndefined';\n    import isString from 'lodash/isString';\n    import isFunction from 'lodash/isFunction';\n    import JfTableView from '../JfTableViewComponent/index';\n    export default {\n        name: 'jf-table-view-wrapper',\n        components: {JfTableView},\n        props: [\n            'options',\n            'objectName',\n            'tableId',\n            'data',\n            'columns',\n            'actions',\n            'batchActions',\n            'scope',\n            'rowsPerPage',\n            'emptyTableText',\n            'useVirtualScroll',\n            'enableSubrows',\n            'sortBy',\n            'sortDir',\n            'groupBy',\n            'showFilter',\n            'showPagination',\n            'showCounter',\n            'sortable',\n            'disableFilterTooltip',\n            'externalSearchFields',\n            'newEntityCustomText',\n            'disableNewEntity',\n            'emptyTableCallToAction',\n            'emptyTableAction',\n            'externalSortCallback',\n            'keyField',\n            'hideSelectAll',\n            'singleRowSelection',\n            'rowClassAttr',\n        ],\n        'jf@inject': [\n            'JFrogTableViewOptions',\n            '$q',\n            '$scope'\n        ],\n        data() {\n            return {\n                tableOptions: null,\n                columnsSet: false\n            };\n        },\n        watch: {\n            data: {\n                deep: true,\n                handler: function(val) {\n                    if (val && val !== this.tableOptions.data) this.setData();\n                }\n            },\n            externalSearchFields(newVal) {\n                this.tableOptions.externalSearchFields = newVal;\n                if (this.tableOptions.paginationMode ===  this.tableOptions.INFINITE_SCROLL\n                || this.tableOptions.paginationMode ===  this.tableOptions.INFINITE_VIRTUAL_SCROLL) {\n                    this.tableOptions.sendInfiniteScrollRequest(true);\n                }\n                if (this.tableOptions.paginationMode ===  this.tableOptions.EXTERNAL_PAGINATION) {\n                    this.tableOptions.sendExternalPageRequest();\n                }\n            }\n        },\n        created() {\n\n            this.tableOptions = this.options || new this.JFrogTableViewOptions(this.scope || this.$scope);\n            if (!isUndefined(this.enableSubrows)) {\n                this.tableOptions.enableSubRows();\n            }\n            if (!isUndefined(this.hideSelectAll)) {\n                this.tableOptions.hideSelectAll();\n            }\n            if (this.tableId) {\n                this.tableOptions.setId(this.tableId);\n            }\n            if (this.objectName) {\n                this.tableOptions.setObjectName(this.objectName);\n            }\n            if (this.rowsPerPage) {\n                if (isString(this.rowsPerPage) && this.rowsPerPage !== 'auto') {\n                    console.error('Error: rows-per-page should be a number, or the string \\'auto\\'.')\n                }\n                this.tableOptions.setRowsPerPage(this.rowsPerPage);\n            }\n\n            this.$watch(() => this.getActualColumns(), () => {\n                if (this.columns/* && !this.columnsSet*/) {\n                    this.tableOptions.setColumns(this.getActualColumns());\n                    this.columnsSet = true;\n                };\n            }, {immediate: true})\n\n            /*\n                        if (this.columns) {\n                            this.tableOptions.setColumns(this.getActualColumns());\n                            this.columnsSet = true;\n                        }\n            */\n            if (this.actions) {\n                this.tableOptions.setActions(this.actions);\n            }\n            if (this.batchActions) {\n                this.tableOptions.setBatchActions(this.batchActions);\n            }\n            if (this.emptyTableText) {\n                this.tableOptions.setEmptyTableText(this.emptyTableText)\n            }\n            if (this.emptyTableCallToAction) {\n                this.tableOptions.setEmptyTableCallToAction(this.emptyTableCallToAction)\n            }\n            if (this.emptyTableAction) {\n                this.tableOptions.setEmptyTableAction(this.emptyTableAction)\n            }\n            if (this.groupBy) {\n                this.tableOptions.groupBy(this.groupBy)\n            }\n            if (this.sortBy) {\n                this.tableOptions.sortBy(this.sortBy)\n            }\n            if (this.sortDir && this.sortDir === 'desc') {\n                this.tableOptions.reverseSortingDir();\n            }\n            if (this.keyField) {\n                this.tableOptions.setKey(this.keyField);\n            }\n            if (this.singleRowSelection) {\n                this.tableOptions.setSelection(this.tableOptions.SINGLE_SELECTION);\n            }\n            if (!isUndefined(this.showFilter)) {\n                this.tableOptions.showFilter(this.showFilter)\n            }\n            if (!isUndefined(this.showPagination)) {\n                this.tableOptions.showPagination(this.showPagination)\n            }\n            if (!isUndefined(this.showCounter)) {\n                this.tableOptions.showCounter(this.showCounter)\n            }\n            if (!isUndefined(this.sortable)) {\n                this.tableOptions.setSortable(this.sortable)\n            }\n            if (!isUndefined(this.useVirtualScroll) && !this.$listeners['load-more']) {\n                this.tableOptions.setPaginationMode(this.tableOptions.VIRTUAL_SCROLL)\n            }\n            if (!isUndefined(this.disableFilterTooltip)) {\n                this.tableOptions.disableFilterTooltip()\n            }\n            if (!isUndefined(this.externalSearchFields)) {\n                this.tableOptions.externalSearchFields = this.externalSearchFields;\n            }\n            if (!isUndefined(this.newEntityCustomText)) {\n                this.tableOptions.newEntityCustomText = this.newEntityCustomText;\n            }\n            if (!isUndefined(this.rowClassAttr)) {\n                this.tableOptions.setRowClassAttr(this.rowClassAttr);\n            }\n            if (!this.options) {\n                this.$emit('init', {\n                    tableOptions: this.tableOptions,\n                    cellTemplateGenerators: this.JFrogTableViewOptions.cellTemplateGenerators\n                })\n            }\n            if ((isUndefined(this.disableNewEntity) || !this.disableNewEntity)\n                && this.$listeners['new-entity']) {\n                this.tableOptions.setNewEntityAction(() => {\n                    this.$emit('new-entity');\n                })\n            }\n            if (this.$listeners['pagination-change']) {\n                this.tableOptions.on('pagination.change', (eventData) => {\n                    this.$emit('pagination-change', {eventData});\n                })\n            }\n            if (this.$listeners['row-clicked']) {\n                this.tableOptions.on('row.clicked', (eventData) => {\n                    this.$emit('row-clicked', {eventData});\n                })\n            }\n            if (this.$listeners['selection-change']) {\n                this.tableOptions.on('selection.change', (eventData) => {\n                    this.$emit('selection-change', {eventData});\n                })\n            }\n            if (this.$listeners['external-sort']) {\n                this.tableOptions.useExternalSortCallback((field, dir) => {\n                    this.$emit('external-sort', {field, dir});\n                })\n            }\n            if (this.$listeners['load-more']) {\n                this.tableOptions.setPaginationMode(!isUndefined(this.useVirtualScroll) ? this.tableOptions.INFINITE_VIRTUAL_SCROLL : this.tableOptions.INFINITE_SCROLL, (params) => {\n                    let defer = this.$q.defer();\n                    this.$emit('load-more', params);\n                    this.pageResolver = defer.resolve;\n                    return defer.promise;\n                })\n                if (this.sortable) this.tableOptions.setSortable(true);\n            }\n\n            window.store.subscribeAction(({type, payload}) => {\n                if (type === 'CHANGE_TABLE_PAGINATION') {\n                    const {tableId, toPage = 1} = payload;\n                    if (this.$refs.tableView && tableId === this.$refs.tableView.options.tableId) {\n                        if (!this.$refs.tableView.$refs.top.$refs.pagination) {\n                            this.$refs.tableView.currentPage = 0;\n                        } else {\n                            this.$refs.tableView.$refs.top.$refs.pagination.paginationApi.setPage(toPage);\n                        }\n                    }\n                }\n            })\n        },\n        mounted() {\n            if (this.data) this.setData(true);\n            if (this.$listeners['page-needed']) {\n                this.tableOptions.setPaginationMode(this.tableOptions.EXTERNAL_PAGINATION, pagingData => {\n                    let defer = this.$q.defer();\n                    this.$emit('page-needed', pagingData);\n                    this.pageResolver = defer.resolve;\n                    return defer.promise;\n                });\n            }\n        },\n        methods: {\n            setData(initialSet) {\n                if (!this.$listeners['page-needed'] && !this.$listeners['load-more'] && this.tableOptions.paginationMode !== this.tableOptions.EXTERNAL_PAGINATION) {\n                    if (this.data && !isUndefined(this.data.isUpdate) && this.data.data) {\n                        if (this.data.isUpdate) {\n                            this.tableOptions.updateData(this.data.data, this.data.removeIfMissing);\n                        } else {\n                            this.tableOptions.setData(this.data.data);\n                        }\n                    } else {\n                        this.tableOptions.setData(this.data);\n                        this.tableOptions.refreshFilter();\n                    }\n                }\n                else if (!initialSet && this.$listeners['load-more'] && !this.pageResolver) {\n                    this.tableOptions.setData(this.data.data, '$$internal$$');\n                }\n                else if (this.pageResolver) {\n                    this.pageResolver(this.data);\n                    this.pageResolver = null;\n                }\n            },\n            getActualColumns() {\n                if (isFunction(this.columns)) {\n                    if (this.JFrogTableViewOptions) {\n                        return this.columns({cellTemplateGenerators: this.JFrogTableViewOptions.cellTemplateGenerators});\n                    }\n                    else {\n                        return null;\n                    }\n                }\n                else {\n                    return this.columns;\n                }\n            }\n\n        }\n    }\n</script>\n\n<style scoped lang=\"less\">\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=1d3bde3a&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1d3bde3a\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"jf-table-view\",staticStyle:{\"clear\":\"both\"},attrs:{\"id\":_vm.options.tableId}},[_c('div',{staticClass:\"new-entity-wrapper\"},[(_vm.options && _vm.options.newEntityCallback)?_c('a',{staticClass:\"new-entity\",attrs:{\"href\":\"\"},on:{\"click\":function($event){$event.preventDefault();return _vm.createNewEntity()}}},[_c('i',{staticClass:\"icon icon-new\"}),(_vm.options && !_vm.options.newEntityCustomText)?_c('span',[_vm._v(\"Add \"+_vm._s(_vm.options.useAnWithObjectName ? 'an' : 'a')+\" \"+_vm._s(_vm.objectName ? _vm.objectName.split('/')[0] : _vm.options.objectName ? _vm.options.objectName.split('/')[0] : 'Item'))]):_vm._e(),(_vm.options && _vm.options.newEntityCustomText)?_c('span',[_vm._v(_vm._s(_vm.options.newEntityCustomText))]):_vm._e()]):_vm._e()]),_c('jf-table-top',{ref:\"top\",attrs:{\"total-records\":_vm.getTotalRecords(),\"table-view\":_vm.jfTableView}},[_vm._t(\"external-filters\",null,{\"slot\":\"external-filters\"})],2),(_vm.options && _vm.options.columnsCustomization)?_c('div',{staticClass:\"columns-customization-wrap\"},[_c('div',{staticClass:\"columns-customization pull-right\"},[_c('jf-multi-dropdown',{attrs:{\"title\":\"Columns\",\"no-filter\":\"true\",\"filter-placeholder\":\"Filter Columns\",\"items\":_vm.options.availableColumns,\"on-change\":\"options.updateCustomizedColumns()\"}})],1)]):_vm._e(),(_vm.options)?_c('div',{staticClass:\"jf-table-view-container\"},[(_vm.options && _vm.options.headersVisible)?_c('div',{staticClass:\"jf-table-view-header\"},[_c('jf-table-row',{attrs:{\"table-view\":_vm.jfTableView,\"row-id\":'headers',\"data\":_vm.options.headersRow}})],1):_vm._e(),(_vm.options && (_vm.options.paginationMode === _vm.options.VIRTUAL_SCROLL || _vm.options.paginationMode === _vm.options.INFINITE_VIRTUAL_SCROLL))?_c('div',{staticClass:\"table-rows-container\",style:({height: _vm.getActualPageHeight() + 'px'})},[_c('jf-vscroll',{attrs:{\"with-each\":\"entity\",\"prevent-default-scroll\":this.options.pendingInfiniteScroll,\"in\":_vm.options.getPrePagedData(),\"api\":_vm.vsApi}},[_c('div',{pre:true},[_c('div',{pre:true,attrs:{\"v-if\":\"is_last() && options && options.pendingInfiniteScroll && options.paginationMode === options.INFINITE_VIRTUAL_SCROLL\",\":style\":\"{height: options.rowHeight}\",\"class\":\"loading-more\"}},[_c('div',{pre:true,attrs:{\"class\":\"spinner-msg-local\"}},[_c('div',{pre:true,attrs:{\"class\":\"icon-hourglass-local\"}})])]),_c('jf-table-row',{pre:true,attrs:{\"v-else\":\"\",\":table-view\":\"jfTableView\",\":row-id\":\"v_index()\",\":data\":\"entity\"}})],1)])],1):_vm._e(),(_vm.options && _vm.options.paginationMode !== _vm.options.VIRTUAL_SCROLL && _vm.options.paginationMode !== _vm.options.INFINITE_VIRTUAL_SCROLL)?_c('div',{staticClass:\"table-rows-container\"},_vm._l((_vm.options.getPageData()),function(entity,$index){return _c('jf-table-row',{key:$index,attrs:{\"table-view\":_vm.jfTableView,\"row-id\":$index,\"data\":entity}})}),1):_vm._e(),(_vm.options && _vm.options.dataWasSet && !_vm.options.getRawData().length && !_vm.options.pendingExternalPaging && (!_vm.options.externalTotalCount || _vm.options.externalTotalCount.total === 0))?_c('div',{staticClass:\"empty-table-placeholder\",style:(_vm.options.registeredTabularDnd ? _vm.options.registeredTabularDnd.emptyTableStyle : {})},[_c('p',[_c('span',[_vm._v(_vm._s(_vm.emptyTableText))]),(_vm.options.emptyTableAction && _vm.options.emptyTableCallActionText)?_c('a',{staticClass:\"jf-link\",attrs:{\"href\":\"\"},on:{\"click\":function($event){$event.preventDefault();return _vm.options.emptyTableAction()}}},[_vm._v(_vm._s(_vm.options.emptyTableCallActionText))]):_vm._e()])]):_vm._e(),(_vm.options && _vm.noFilterResults)?_c('div',{staticClass:\"empty-table-placeholder filter-no-results\"},[_c('div',[_vm._v(_vm._s(_vm.noFilterResultsText))]),(_vm.tableFilter)?_c('a',{staticClass:\"jf-link\",attrs:{\"href\":\"\"},on:{\"click\":function($event){$event.preventDefault();return _vm.clearFilter()}}},[_vm._v(\"Clear filter\")]):_vm._e()]):_vm._e(),(_vm.options && _vm.options.pendingInfiniteScroll && _vm.options.paginationMode !== _vm.options.INFINITE_VIRTUAL_SCROLL)?_c('div',{staticClass:\"loading-more\",style:({height: _vm.options.rowHeight})},[_vm._m(0)]):_vm._e()]):_vm._e()],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"spinner-msg-local\"},[_c('div',{staticClass:\"icon-hourglass-local\"})])}]\n\nexport { render, staticRenderFns }","<template>\n\n    <div>\n        <div class=\"jf-table-view\" style=\"clear: both\" :id=\"options.tableId\">\n            <div class=\"new-entity-wrapper\">\n                <a href=\"\" class=\"new-entity\" @click.prevent=\"createNewEntity()\" v-if=\"options && options.newEntityCallback\">\n                    <i class=\"icon icon-new\"></i> <span v-if=\"options && !options.newEntityCustomText\">Add {{options.useAnWithObjectName ? 'an' : 'a'}} {{objectName ? objectName.split('/')[0] : options.objectName ? options.objectName.split('/')[0] : 'Item'}}</span>\n                    <span v-if=\"options && options.newEntityCustomText\">{{options.newEntityCustomText}}</span>\n                </a>\n            </div>\n\n            <jf-table-top ref=\"top\" :total-records=\"getTotalRecords()\" :table-view=\"jfTableView\">\n                <slot name=\"external-filters\" slot=\"external-filters\"></slot>\n            </jf-table-top>\n\n            <div class=\"columns-customization-wrap\" v-if=\"options && options.columnsCustomization\">\n                <div class=\"columns-customization pull-right\">\n                    <jf-multi-dropdown title=\"Columns\" no-filter=\"true\" filter-placeholder=\"Filter Columns\" :items=\"options.availableColumns\" on-change=\"options.updateCustomizedColumns()\"></jf-multi-dropdown>\n                </div>\n            </div>\n\n            <div class=\"jf-table-view-container\" v-if=\"options\">\n                <div class=\"jf-table-view-header\" v-if=\"options && options.headersVisible\">\n                    <jf-table-row :table-view=\"jfTableView\" :row-id=\"'headers'\" :data=\"options.headersRow\"></jf-table-row>\n                </div>\n\n\n                <div v-if=\"options && (options.paginationMode === options.VIRTUAL_SCROLL || options.paginationMode === options.INFINITE_VIRTUAL_SCROLL)\"\n                     :style=\"{height: getActualPageHeight() + 'px'}\"\n                     class=\"table-rows-container\">\n                    <jf-vscroll with-each=\"entity\"\n                                :prevent-default-scroll=\"this.options.pendingInfiniteScroll\"\n                                :in=\"options.getPrePagedData()\"\n                                :api=\"vsApi\">\n                        <div v-pre>\n                            <div v-if=\"is_last() && options && options.pendingInfiniteScroll && options.paginationMode === options.INFINITE_VIRTUAL_SCROLL\" :style=\"{height: options.rowHeight}\" class=\"loading-more\">\n                                <div class=\"spinner-msg-local\">\n                                    <div class=\"icon-hourglass-local\"></div>\n                                </div>\n                            </div>\n                            <jf-table-row v-else :table-view=\"jfTableView\" :row-id=\"v_index()\" :data=\"entity\"></jf-table-row>\n                        </div>\n                    </jf-vscroll>\n                </div>\n\n                <div v-if=\"options && options.paginationMode !== options.VIRTUAL_SCROLL && options.paginationMode !== options.INFINITE_VIRTUAL_SCROLL\" class=\"table-rows-container\">\n                    <jf-table-row :key=\"$index\" v-for=\"(entity, $index) in options.getPageData()\" :table-view=\"jfTableView\" :row-id=\"$index\" :data=\"entity\"></jf-table-row>\n                </div>\n\n                <div class=\"empty-table-placeholder\" :style=\"options.registeredTabularDnd ? options.registeredTabularDnd.emptyTableStyle : {}\" v-if=\"options && options.dataWasSet && !options.getRawData().length && !options.pendingExternalPaging && (!options.externalTotalCount || options.externalTotalCount.total === 0)\">\n                    <p><span>{{ emptyTableText }}</span> <a href=\"\" class=\"jf-link\" v-if=\"options.emptyTableAction && options.emptyTableCallActionText\" @click.prevent=\"options.emptyTableAction()\">{{options.emptyTableCallActionText}}</a></p>\n                </div>\n                <div class=\"empty-table-placeholder filter-no-results\" v-if=\"options && noFilterResults\">\n                    <div>{{ noFilterResultsText }}</div><a href=\"\" class=\"jf-link\" v-if=\"tableFilter\" @click.prevent=\"clearFilter()\">Clear filter</a>\n                </div>\n                <div v-if=\"options && options.pendingInfiniteScroll && options.paginationMode !== options.INFINITE_VIRTUAL_SCROLL\" :style=\"{height: options.rowHeight}\" class=\"loading-more\">\n                    <div class=\"spinner-msg-local\">\n                        <div class=\"icon-hourglass-local\"></div>\n                    </div>\n                </div>\n\n            </div>\n\n\n        </div>\n    </div>\n\n</template>\n\n<script>\n    import startCase from 'lodash/startCase';\n    import filter from 'lodash/filter';\n    import find from 'lodash/find';\n    import get from 'lodash/get';\n    import set from 'lodash/set';\n\n    export default {\n        name: 'jf-table-view',\n        props: [\n            'options',\n            'objectName'\n        ],\n        'jf@inject': [\n            '$scope',\n            '$element',\n            '$timeout',\n            '$compileComp',\n            '$rootScope',\n            'JFrogEventBus'\n        ],\n        data() {\n            return {\n                vsApi: {\n                    onInit: () => {\n                        this.vsApi.registerScrollListener(scrollPos => this.onVScroll(scrollPos))\n                    }\n                },\n                noFilterResults: null,\n                tableFilter: null,\n                currentPage: 0,\n                allSelected: false,\n                jfTableView: this,\n                cellScopes: [],\n                cellComponents: []\n            };\n        },\n        created() {\n            this.EVENTS = this.JFrogEventBus.getEventsDefinition();\n\n            this.$scope.$watch('jfTableView.options', options => {\n                if (this.options && this.options.dirCtrl !== this) {\n                    this.options._setDirectiveController(this);\n                }\n                if (this.options && !this.paginationApi) {\n                    this.paginationApi = new PaginationApi(this);\n\n                    this.paginationApi.registerChangeListener(() => {\n                        this.refresh(false);\n                        this._fireDebouncedRowsInView();\n                        this.options._normalizeWidths();\n                    });\n\n                    this.currentPage = 0;\n                }\n            });\n\n            let on_resize = () => {\n                this.options._normalizeWidths();\n                this._fireDebouncedRowsInView();\n                this.$forceUpdate();\n                if (this.vsApi && this.vsApi.refresh) this.vsApi.refresh();\n            };\n\n            $(window).on('resize', on_resize);\n            this.$scope.$on('$destroy', () => {\n//                this.cellScopes.forEach(s => s.$destroy());\n                $(window).off('resize', on_resize);\n            });\n        },\n        mounted() {\n            this.$containerElement = this.$element.find('.jf-table-view');\n            this._handleDocumentClick();\n        },\n        ng1_legacy: { 'controllerAs': 'jfTableView' },\n        methods: {\n            clearFilter() {\n                this.tableFilter = '';\n                this.onUpdateFilter();\n            },\n            getActualPageHeight(maxForInfiniteVirtualScroll = false) {\n                if (maxForInfiniteVirtualScroll) {\n                    return $(this.$element).parent().height() - $(this.$element).find('.table-rows-container').position().top;\n                }\n                else if (this.options.rowsPerPage === 'auto' && $(this.$element).find('.table-rows-container').length) {\n                    return Math.min($(this.$element).parent().height() - $(this.$element).find('.table-rows-container').position().top, parseFloat(this.options.rowHeight) * this.options.getPrePagedData().length);\n                }\n                else {\n                    return parseFloat(this.options.rowHeight) * Math.min(this.options.rowsPerPage, this.options.getPrePagedData().length) + 2;\n                }\n            },\n            compileTemplate(field, rowId) {\n                let columnObj = find(this.options.columns, { field });\n                let rowObj = rowId !== 'headers' ? this.options.getPageData()[rowId] : this.options.headersRow;\n\n                if (!rowObj)\n                    return;\n\n                if (rowObj.$groupHeader) {\n                    let groupRowObj = {};\n                    set(groupRowObj, rowObj.$groupHeader.field, rowObj.$groupHeader.value);\n                    rowObj = groupRowObj;\n                }\n\n                let existingScope = find(this.cellScopes, s => s.row.uid === rowId && s.col.field === columnObj.field);\n\n                let rowScope;\n                if (!existingScope) {\n                    rowScope = {\n                        row: {\n                            entity: rowObj,\n                            uid: rowId\n                        },\n                        col: columnObj,\n                        MODEL_COL_FIELD: get(rowObj, field),\n                        COL_FIELD: get(rowObj, field),\n                        appScope: this.options.appScope,\n                        grid: { appScope: this.options.appScope },\n                        //Backward compatibility with old grid\n                        table: { options: this.options }\n                    };\n\n                    this.cellScopes.push(rowScope);\n\n                    let template = rowId !== 'headers' ? columnObj.cellTemplate : columnObj.headerCellTemplate;\n                    let templateElem = $('<div>' + template + '</div>');\n                    this._autoAddEllipsisClass(templateElem);\n                    template = templateElem.html();\n/*\n                    if (this.options.appScope && this.options.appScope.$comp) {\n                        rowScope.$comp.$options.components = this.options.appScope.$comp.$options.components;\n                    }\n*/\n\n                    let compOptions = this.$compileComp(template, {}, this.options.appScope && this.options.appScope.$comp);\n\n                    compOptions.props = Object.keys(rowScope);\n\n                    this.cellComponents.push(compOptions)\n                    return {comp: compOptions, props: rowScope};\n\n                } else {\n                    let index = this.cellScopes.indexOf(existingScope);\n                    let comp = this.cellComponents[index];\n                    let scope = {...existingScope, row: {}}\n                    scope.row.entity = rowObj;\n                    scope.row.uid = rowId;\n                    return {comp, props: scope};\n                }\n            },\n            _autoAddEllipsisClass(templateRoot) {\n                let allText = templateRoot.text();\n                let elementToAddTo = null;\n                let recursiveAdd = root => {\n                    let children = root.children();\n                    let childToRecurseInto = null;\n                    for (let i = 0; i < children.length; i++) {\n                        let child = $(children[i]);\n                        if (child.text() === allText) {\n                            childToRecurseInto = child;\n                            break;\n                        }\n                    }\n                    if (childToRecurseInto) {\n                        recursiveAdd(childToRecurseInto);\n                    } else {\n                        elementToAddTo = root;\n                    }\n                };\n                recursiveAdd(templateRoot);\n                if (elementToAddTo) {\n                    if (!elementToAddTo.is('[disable-tooltip-on-overflow]')) {\n                        elementToAddTo.attr('v-jf-tooltip-on-overflow', '');\n                    }\n                    elementToAddTo.addClass('overflow-ellipsis');\n                }\n            },\n            onUpdateFilter(resetPagination = true) {\n                this.options.refreshFilter();\n                this.refresh();\n                if (resetPagination) {\n                    this.paginationApi.setPage(1, true);\n                    this.paginationApi.update();\n                }\n            },\n            refresh(updatePagination = true) {\n                let pageData = this.options.getPageData();\n/*\n                let unusedScopes = filter(this.cellScopes, scope => pageData.indexOf(scope.row.entity) === -1);\n                unusedScopes.forEach(s => {\n                    this.cellScopes.splice(this.cellScopes.indexOf(s), 1);\n//                    s.$destroy();\n                });\n*/\n                if (this.paginationApi && updatePagination)\n                    this.paginationApi.update();\n\n                this.$forceUpdate();\n\n            },\n            clearSelection() {\n                this.options.getRawData().forEach(row => this.$delete(row, '$selected'));\n                this.allSelected = false;\n            },\n            toggleSelectAll() {\n                this.allSelected = !this.allSelected;\n                this.options.getPrePagedData().forEach(row => {\n                    if (this.options.isRowSelectable && !this.options.isRowSelectable({ entity: row })) {\n                        this.$set(row, '$selected', false);\n                    } else {\n                        this.$set(row, '$selected', this.allSelected);\n                    }\n                });\n                if (this.options.groupedBy) {\n                    this.options.getFilteredData().forEach(row => {\n                        if (this.options.isRowSelectable && !this.options.isRowSelectable({ entity: row })) {\n                            this.$set(row, '$selected', false);\n                        } else {\n                            this.$set(row, '$selected', this.allSelected);\n                        }\n                    });\n                }\n\n            },\n            onVScroll(scrollPos) {\n                let virtualScrollIndex = Math.floor(scrollPos);\n                let virtualScrollDisplacement = scrollPos - virtualScrollIndex;\n                this.currentPage = Math.floor((virtualScrollIndex + this.options.rowsPerPage - 1) / this.options.rowsPerPage);\n                this.paginationApi.update();\n\n                this._fireDebouncedRowsInView();\n\n            },\n            _fireDebouncedRowsInView() {\n\n                if (!this.options.hasListenersFor('row.in.view'))\n                    return;\n\n                let debounceCall = (debouncedFunc, debounceTime) => {\n                    if (this.debounceTimeout)\n                        this.$timeout.cancel(this.debounceTimeout);\n                    this.debounceTimeout = this.$timeout(() => {\n                        debouncedFunc();\n                    }, debounceTime);\n                };\n\n/*\n                debounceCall(() => {\n                    let pageData = this.options.paginationMode === this.options.VIRTUAL_SCROLL ? this.vsApi.getPageData() : this.options.getPageData();\n                    let lriv = this.lastRowsInView || [];\n                    this.lastRowsInView = pageData;\n                    pageData = filter(pageData, row => !includes(lriv, row));\n                    pageData.forEach(row => this.options.fire('row.in.view', row));\n                }, this.options.rowInViewDebounceTime);\n*/\n            },\n            getTotalScrollHeight() {\n                return this.options.getPrePagedData().length * parseFloat(this.options.rowHeight) + 'px';\n            },\n            getScrollWidth() {\n                let el = $(this.$element).find('.scroll-faker-container')[0];\n                return el.offsetWidth - el.clientWidth;\n            },\n            createNewEntity() {\n                this.options.newEntityCallback();\n                this.$timeout(() => this.onUpdateFilter());\n            },\n            groupSelection(groupHeader) {\n                let query = {};\n                set(query, groupHeader.$groupHeader.field, groupHeader.$groupHeader.value);\n                let group = filter(this.options.getFilteredData(), query);\n                group.forEach(row => row.$selected = groupHeader.$selected);\n            },\n            initFilter() {\n                this.$timeout(() => {\n                    if (this.options && this.options.autoFocusFilter) {\n                        let filterInput = $(this.$element).find('.jf-table-filter input');\n                        filterInput.focus();\n                    }\n                });\n            },\n            getTotalRecords() {\n                if (!this.options)\n                    return;\n                let count = 0;\n\n                if (this.options.paginationMode === this.options.EXTERNAL_PAGINATION) {\n                    count = this.options.getTotalLengthOfData();\n                } else {\n                    count = filter(this.options.getFilteredData(), record => {\n                        return !record.$parentRow;\n                    }).length;\n                }\n                /* rows with $doNotCount property won't be included\n                   in total records count\n                 */\n                if (this.options.data) {\n                    count -= filter(this.options.data, {$doNotCount: true}).length\n                }\n\n                return count + ' ' + this.getObjectNameByCount(count);\n            },\n            getObjectNameByCount(count, objectName) {\n                objectName = objectName || this.options.objectName;\n                let recordsName;\n\n                if (objectName) {\n                    if (objectName.indexOf('/') >= 0) {\n                        let splited = objectName.split('/');\n                        recordsName = count !== 1 ? splited[1] : splited[0];\n                    } else {\n                        recordsName = count !== 1 ? objectName + 's' : objectName;\n                    }\n                } else {\n                    recordsName = count !== 1 ? 'records' : 'record';\n                }\n\n                return startCase(recordsName);\n            },\n            getSelectedRecords() {\n\n                if (!this.options)\n                    return 0;\n\n                let count = this.options.getSelectedRows().length;\n\n                return count;\n            },\n            _handleDocumentClick() {\n                let handler = e => {\n                    this.$timeout(() => {\n                        let shouldCloseDropdown = !$(e.target).parents('.jf-table-cell.actions').length || $(e.target).parents('.jf-table-view')[0] !== $(this.$element).find('.jf-table-view')[0];\n                        if (shouldCloseDropdown)\n                            this.JFrogEventBus.dispatch(this.EVENTS.TABLEVIEW_HIDE_ACTIONS_DROPDOWN, this);\n                    });\n                };\n                $(document).on('click', handler);\n                this.$scope.$on('$destroy', () => {\n                    $(document).off('click', handler);\n                });\n            },\n\n\n        },\n        computed: {\n            emptyTableText() {\n                return this.options.emptyTableText || 'There is no data to display';\n            },\n            noFilterResultsText() {\n                return this.options.noFilterResultsText || 'Current filter has no results.';\n            }\n        }\n    }\n    class PaginationApi {\n        constructor(tableCtrl) {\n            this.tableCtrl = tableCtrl;\n        }\n        getTotalPages() {\n            return Math.ceil(this.tableCtrl.options.getTotalLengthOfData() / this.tableCtrl.options.rowsPerPage);\n        }\n        getCurrentPage() {\n            return this.tableCtrl.currentPage + 1;\n        }\n        nextPage() {\n            if (this.getCurrentPage() === this.getTotalPages()) return;\n            this.tableCtrl.currentPage++;\n            this.syncVirtualScroll();\n            this.update();\n            this.sendExternalPageRequest();\n            this.tableCtrl.options.fire('pagination.change', this.getCurrentPage());\n        }\n        prevPage() {\n            if (this.getCurrentPage() === 1) return;\n            this.tableCtrl.currentPage--;\n            this.syncVirtualScroll();\n            this.update();\n            this.sendExternalPageRequest();\n            this.tableCtrl.options.fire('pagination.change', this.getCurrentPage());\n        }\n        sendExternalPageRequest() {\n            if (this.tableCtrl.options.paginationMode === this.tableCtrl.options.EXTERNAL_PAGINATION) {\n                this.tableCtrl.options.sendExternalPageRequest();\n            }\n        }\n        setPage(pageNum, jump = false) {\n            if (pageNum < 1 || pageNum > this.getTotalPages()) return;\n\n            this.tableCtrl.currentPage = pageNum - 1;\n\n            this.syncVirtualScroll(jump);\n            this.update();\n            this.sendExternalPageRequest();\n            this.tableCtrl.options.fire('pagination.change', this.getCurrentPage());\n        }\n\n        update() {\n            if (this.getCurrentPage() > this.getTotalPages()) {\n                this.setPage(1, true);\n            }\n\n            if (this.listeners) this.listeners.forEach(listener => listener(this.getCurrentPage()));\n        }\n\n        registerChangeListener(listener) {\n            if (!this.listeners) this.listeners = []\n            this.listeners.push(listener);\n        }\n\n        syncVirtualScroll(jump = false) {\n            if (this.tableCtrl.options.paginationMode === this.tableCtrl.options.VIRTUAL_SCROLL) {\n                this.tableCtrl.vsApi.scrollTo(this.tableCtrl.currentPage * this.tableCtrl.options.rowsPerPage, jump ? 0 : 500);\n            }\n        }\n\n    }\n</script>\n\n<style scoped lang=\"less\">\n\n    @import \"../../assets/stylesheets/bootstrap-variables.less\";\n    @import \"../../assets/stylesheets/variables.less\";\n    @import  '../../assets/stylesheets/mixins.less';\n\n    /deep/ .jf-table-view {\n        width: 100%;\n        position: relative;\n        margin-top: 20px;\n        .columns-customization-wrap {\n            width: 100%;\n            position: absolute;\n            visibility: hidden;\n            .jf-multi-dropdown {\n                .drop-down-container {\n                    visibility: visible;\n                    top: 50px;\n                    box-shadow: 0 2px 12px rgba(0,0,0,.25);\n                }\n            }\n        }\n        .new-entity-wrapper {\n            text-align: right;\n            a.new-entity {\n                color: @gray-dark;\n                font-size: 16px;\n                &:hover {\n                    text-decoration: none;\n                    color: @color-JFrog-green;\n                }\n                i {\n                    font-size: 18px;\n                    margin: 1px 8px 0 0;\n                    vertical-align: middle;\n                }\n            }\n        }\n\n        .jf-table-top {\n            display: flex;\n            flex-direction: row;\n            height: auto;\n            margin: 16px 0;\n            // counter and filter\n            .counter-and-filter-wrapper {\n                flex-grow: 1;\n                max-width: 380px;\n                min-width: 150px;\n                width: 100%;\n                .table-counter {\n                    white-space: nowrap;\n                    font-size: 14px;\n                    font-weight: 600;\n                    margin-bottom: 8px;\n                    color: @shuttleGray;\n                }\n                .jf-table-filter {\n                    i {\n                        color: @light-gray;\n                    }\n                    input {\n                        width: 100%;\n                    }\n                }\n            }\n\n            // batch\n            .batch-actions-wrapper {\n                flex-grow: 1;\n                align-self: flex-end;\n                white-space: nowrap;\n                position: relative;\n                width: 100%;\n                min-width: 95px;\n                margin: 0;\n                .grid-batch-actions {\n                    padding: 0;\n                    bottom: auto;\n                }\n                jf-table-view-batch-actions {\n                    position: absolute;\n                    bottom: 0;\n                    width: 100%;\n                }\n            }\n\n\n            // pagination\n            .pagination-controls {\n                align-self: flex-end;\n                flex-grow: 2;\n                .grid-pagination {\n                    margin: 0;\n                    white-space: nowrap;\n                    a.disabled {\n                        cursor: not-allowed;\n                    }\n                }\n            }\n        }\n\n        .jf-table-view-container {\n            width: 100%;\n            clear: both;\n            .table-rows-container {\n                position: relative;\n                border-top: 1px solid @jfColorGrey;\n                .jf-table-row {\n                }\n            }\n            .columns-customization-icon {\n                position: absolute;\n                right: -4px;\n                bottom: 32px;\n                cursor: pointer;\n            }\n\n            .empty-table-placeholder {\n                .empty-placeholder();\n                min-height: 80px;\n                .empty-placeholder.filter-no-results div {\n                    display: inline;\n                    padding-right: 5px;\n                }\n            }\n\n            .hover .jf-table-row,\n            .jf-table-row.selected,\n            .jf-table-row:hover {\n                &.drag-mark {\n                    &:before {\n                        font-family: artifactory!important;\n                        font-size: 30px;\n                        content: \"\\\\\";\n                        position: absolute;\n                        z-index: 10;\n                        top: ~\"calc(50% - 16px)\";\n                        right: 10px;\n                        color: black;\n                        font-weight: bold;\n                    }\n                    .jf-table-cell:last-child {\n                        .jf-table-cell-content {\n                            padding-right: 35px;\n                        }\n                    }\n\n                }\n            }\n\n            .hover .jf-table-row,\n            .jf-table-row.selected,\n            .jf-table-row:hover {\n\n                .jf-table-cell {\n                    .jf-table-cell-content {\n                    }\n                    &.actions {\n//                        display: inline-table !important;\n                        visibility: visible;\n                    }\n                    &.selection{\n                        &.single-selection{\n                            .selection-button{\n                                .selection-icon{\n                                    display: block;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n\n            .hover .jf-table-row:not(.headers),\n            .jf-table-row:not(.headers):hover {\n                background-color: @grayBGLight;\n            }\n\n            .jf-table-row {\n                display: flex;\n                width: 100%;\n                white-space: nowrap;\n                padding: 0;\n                margin: 0;\n                position: relative;\n\n\n\n                &.drop-target-mark {\n                    border-top: 2px solid green !important;\n                }\n\n                &.sticky {\n                    font-weight: 600;\n                    &:nth-child(2) {\n                        border-top: 1px solid @grayGridHeader;\n                        border-bottom: 1px solid @greenFontHeader;\n                    }\n                }\n                &:not(.headers) {\n                    border: none;\n                    &:last-child {\n                        border-bottom: 1px solid @grayBGHover;\n                    }\n                    &:not(:first-child) {\n                        border-top: 1px solid #e0e0e0;\n                    }\n                    &.sub-row {\n                        border-top: none;\n                    }\n                }\n                &:not(.headers),\n                &.headers {\n                    .row-expander + .jf-table-cell-content,\n                    .jf-table-cell-content.row-expander-content {\n                        padding-left: 0;\n                    }\n                }\n                &:not(:first-child) {\n                    border-top: none;\n                }\n\n                .jf-table-cell {\n                    display: inline-table;\n                    overflow: hidden;\n                    z-index: 1;\n                    position: relative;\n\n                    .row-expander {\n                        width: 60px;\n                        position: relative;\n                        top: -3px;\n                        display: table-cell;\n\n                        &:not(.placeholder) {\n                            background: transparent;\n                            cursor: pointer;\n                            .icon-small-arrow-down {\n                                height: 50px;\n                                line-height: 50px;\n                                top: 3px;\n                                left: 25%;\n                                right: 0;\n                                margin-right: 14px;\n                                display: inline-block;\n                                position: relative;\n                                transition: transform .2s ease-in-out,-webkit-transform .2s ease-in-out;\n                                transform: rotate(-90deg);\n                                &.expanded {\n                                    transform: rotate(0);\n                                }\n                            }\n                        }\n                        .spinner-msg-local {\n                            position: absolute;\n                            top: ~\"calc(50% - 7px)\";\n                            left: ~\"calc(50% - 13px)\";\n                        }\n\n                    }\n\n                    &.drag-right {\n                        border-right: 1px @greenBorderLight dotted !important;\n                    }\n                    &.drag-left {\n                    }\n                    &.selection {\n                        &.single-selection {\n                            .selection-button {\n                                .selection-icon {\n                                    display: none;\n                                    &.selected {\n                                        display: block;\n                                    }\n                                }\n                            }\n                        }\n                    }\n\n                    &.actions {\n                        display: inline-table;\n                        visibility: collapse;\n                    }\n                    &.selection,\n                    &.actions {\n                        padding: 0px !important;\n                    }\n                    &.header {\n                        &.sortable {\n                            cursor: pointer;\n                        }\n                        &:not(.column-resizer):not(.sortable) { //This is needed for some reason\n                            cursor: default;\n                        }\n                        &.column-resizer {\n                            cursor: col-resize;\n                        }\n                        .jf-table-cell-content {\n                            font-size: 14px;\n                            font-weight: 700;\n\n                            jf-table-compiled-cell {\n                                display: inline-table;\n                            }\n                            .icon.sorting-icon{\n                                line-height: 1em;\n                                padding: 0 5px;\n                                &:not(.active) {\n                                    color: @blackBorderLight;\n                                }\n                            }\n                            .icon-small-arrow-down {\n                                display: inline-block;\n                                transition: transform .2s ease-in-out;\n                                &.rotate180 {\n                                    transform: rotate(-180deg);\n                                }\n                            }\n                            &.sortable-aligned-center {\n                                i.icon-small-arrow-down {\n                                    margin-right: -25px;\n                                }\n                            }\n                            &:hover {\n                                .icon.sorting-icon:not(.active) {\n                                    color: @grayBorderDarker;\n                                }\n                            }\n                        }\n                    }\n                    &.group-header {\n                        color: @black;\n                        .icon-small-arrow-down {\n                            display: inline-block;\n                            transition: transform .2s ease-in-out;\n                            transform: rotate(-90deg); // translate(-15px, 0) scale(1.5, 1.5)\n                        }\n                        &.jf-table-cell {\n                            position: absolute;\n                            left: 0;\n                            right: 0;\n                            width: 100%;\n                            cursor: pointer;\n                        }\n\n                        & > .icon-small-arrow-down {margin-right: 14px;}\n                        & > .jf-table-cell-content,\n                        & > .group-header-count {\n                            display: inline-block;\n                            margin-right: 2px;\n                            font-weight: 600;\n                            vertical-align: middle;\n                        }\n                    }\n                    .jf-table-cell-content {\n\n                        overflow: hidden;\n                        display: table-cell;\n                        vertical-align: middle;\n                        white-space: nowrap;\n                        text-overflow: ellipsis;\n                        padding: 0 14px;\n\n                        &:not(.group-header):not(.row-expander-content) {\n                            max-width: 0;\n                        }\n                        .grid-cell-checkbox {\n                            line-height: 40px;\n                            text-align: center;\n                        }\n                        .repo-type-icon {\n                            float: left;\n                            margin: 1px 10px 0 0;\n\n                            &.icon- {\n                                display: none;\n                            }\n                        }\n\n                        .group-button-wrapper {\n                            position: relative;\n                            display: inline-block;\n                            vertical-align: super;\n                            .group-button {\n                                position: absolute;\n                                width: 24px;\n                                height: 24px;\n                                top: -12px;\n                                left: 10px;\n                            }\n                        }\n                        .action-button .action-icon.icon-clear:hover:before {\n                            color: @jfColorRed;\n                        }\n                        .selection-button{\n                            cursor: pointer;\n                            overflow: hidden;\n                            display: table-cell;\n                            vertical-align: middle;\n                            text-align: center;\n                            .action-icon {\n                                top: 0 !important;\n                                &:before {\n                                    font-size: 17px !important;\n                                    line-height: 2;\n                                }\n                                &:hover {\n                                    &:before {\n                                        color: @greenBGDark;\n                                    }\n                                }\n                                &.icon-clear:hover {\n                                    &:before {\n                                        color: @jfColorRed;\n                                    }\n                                }\n                            }\n                        }\n                        .selection-button {\n                            .selection-icon {\n                                &:before {\n                                    font-size: 16px !important;\n                                    color: @grayBorderLighter;\n                                    line-height: 1.8em;\n                                }\n                                &.selected {\n                                    &:before {\n                                        color: @greenBGDark;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n\n                // Group expanded\n                &.expanded {\n                    .icon-small-arrow-down {\n                        transform: rotate(0deg) !important;\n                    }\n                    .jf-table-cell-content,\n                    .group-header-count {\n                        color: @green;\n                    }\n                }\n            }\n            .loading-more {\n                position: relative;\n                .spinner-msg-local {\n                    position: absolute;\n                    top: ~\"calc(50% - 10px)\";\n                    left: ~\"calc(50% - 10px)\";\n                }\n            }\n\n        }\n\n        .overflow-ellipsis {\n            overflow: hidden;\n            text-overflow: ellipsis;\n            white-space: nowrap;\n            display: block;\n            a {\n                overflow: hidden;\n                text-overflow: ellipsis;\n                white-space: nowrap;\n                display: block;\n            }\n            &:not(.jf-table-avatar){\n                padding-right: 0;\n            }\n        }\n        .row-drag-helper {\n            opacity: 0.7 !important;\n            z-index: 9999999999;\n            pointer-events: none;\n            background-color: lightgray !important;\n            border: 1px lightgreen dotted !important;\n            &.multiple {\n                font-size: 20px;\n                opacity: 1 !important;\n                padding: 10px;\n            }\n        }\n\n        .jf-table-cell:first-child:not(.row-expander-cell) {\n            padding-left: 14px;\n        }\n\n        //show all button\n        .ui-grid-cell-contents {\n            position: relative;\n            .gridcell-showall {\n                top: 5px;\n            }\n        }\n        .jf-table-row-actions-dropdown {\n            background: white;\n            position: absolute;\n            top: 30%;\n            right: 8px;\n            z-index: 9999999;\n            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.25);\n            &.out-of-viewport{\n                top: auto;\n                bottom: 30%;\n            }\n            .action-item {\n                cursor: pointer;\n                height: 40px;\n                line-height: 40px;\n                padding: 0 10px;\n                font-size: 13px;\n                span {\n                    margin-left: 8px;\n                }\n                a {\n                    margin-left: 8px;\n                    color: #707070;\n                }\n                .action-icon {\n                    &:before {\n                        width: auto !important;\n                        font-size: 18px;\n                        line-height: 40px;\n                        float: left;\n                    }\n                }\n                &:hover {\n                    background-color: @grayBGLight !important;\n                    &,&:before{\n                        color: inherit;\n                    }\n                }\n            }\n        }\n\n        .grid-checkbox {\n            padding: 0;\n            text-align: center;\n\n            input[type=\"checkbox\"] {\n                display: none;\n            }\n\n            input[type=\"checkbox\"] + span {\n                display: none;\n                font-size: 17px;\n                color: @jfColorGreen;\n\n                &:before {\n                    line-height: 50px;\n                }\n            }\n\n            input[type=\"checkbox\"]:checked + span {\n                display: inline-block;\n            }\n        }\n\n    }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=58b1c19e&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=58b1c19e&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"58b1c19e\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
{"version":3,"sources":["webpack://jfrog-ui-essentials/./src/components/JfDragAndDropTxtComponent/index.vue?8dc8","webpack://jfrog-ui-essentials/src/components/JfDragAndDropTxtComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfDragAndDropTxtComponent/index.vue?f8ee","webpack://jfrog-ui-essentials/./src/components/JfDragAndDropTxtComponent/index.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","class","shouldDisplayUploadIcon","domProps","_s","sanitizedHeaderHtml","_e","attrs","autofocus","directives","name","rawName","value","expression","style","dndRequired","on","$event","target","composing","dndContent","dndChange","sanitizedCallToAction","staticRenderFns","component"],"mappings":"+MAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACA,EAAG,MAAM,CAACE,YAAY,4BAA4BC,MAAM,CAAC,mBAAmBP,EAAIQ,4BAA4B,CAAER,EAAkB,eAAEI,EAAG,QAAQ,CAACK,SAAS,CAAC,UAAYT,EAAIU,GAAGV,EAAIW,wBAAwBX,EAAIY,KAAKR,EAAG,WAAW,CAACS,MAAM,CAAC,UAAYb,EAAIc,YAAY,CAACV,EAAG,WAAW,CAACW,WAAW,CAAC,CAACC,KAAK,QAAQC,QAAQ,UAAUC,MAAOlB,EAAc,WAAEmB,WAAW,eAAeb,YAAY,wBAAwBc,MAAOpB,EAAY,SAAEa,MAAM,CAAC,KAAO,UAAU,SAAWb,EAAIqB,YAAY,WAAa,SAASZ,SAAS,CAAC,MAAST,EAAc,YAAGsB,GAAG,CAAC,MAAQ,CAAC,SAASC,GAAWA,EAAOC,OAAOC,YAAqBzB,EAAI0B,WAAWH,EAAOC,OAAON,QAAO,SAASK,GAAQ,OAAOvB,EAAI2B,iBAAiBvB,EAAG,QAAQ,CAACE,YAAY,uBAAuBC,MAAM,CAAC,cAAcP,EAAIQ,2BAA2BC,SAAS,CAAC,UAAYT,EAAIU,GAAGV,EAAI4B,6BAA6B,MACj7BC,EAAkB,G,kCCmBtB,GACE,KAAF,uBACE,MAAF,CACA,aACA,iBACA,WACA,cACA,kBACA,gBAEE,YAAF,CACA,SACA,WACA,SACA,sBAEE,OAAF,SACE,KAjBF,WAkBI,MAAJ,IAEE,QApBF,WAqBI,KAAJ,yBAEI,KAAJ,YAEE,QAzBF,WA+BI,KAAJ,0DAII,KAAJ,2DAII,KAAJ,uDAEE,WAAF,CAAI,aAAJ,oBACE,QAAF,CACI,wBADJ,WAEM,MAAN,6EAEI,kBAJJ,SAIA,GACM,KAAN,2BACM,EAAN,wCAGA,uBACA,0BAEI,kBAZJ,SAYA,GACM,IAAN,mCACA,wCACQ,GAAR,wEAGA,uBACQ,KAAR,sBAAU,IAAV,IAEQ,KAAR,2BAAU,MAAV,KAGI,gBAxBJ,SAwBA,GAAM,IAAN,OACM,KAAN,WACM,KAAN,mBACM,EAAN,iBACM,EAAN,kBAGM,IAAN,iBACA,wCAGM,EAAN,mBACQ,EAAR,sBAEM,EAAN,oBACQ,EAAR,sBAIM,IAAN,yBACM,GAAN,6BACQ,IAAR,sEAQQ,OANR,uBACU,KAAV,sBAAY,IAAZ,IAEU,KAAV,2BAAY,MAAZ,KAGA,EAIM,EAAN,eAEI,qBA3DJ,SA2DA,GAIM,IAAN,KAEM,IACN,8BACU,GAAV,GAEA,UAOM,OAJN,6BACQ,GAAR,GAGA,GAEI,gBA9EJ,SA8EA,GAKM,GAJA,EAAN,iBACM,EAAN,mBAGA,6BAIM,OAAN,kBAAM,GACE,KAAR,WACQ,KAAR,mBACQ,EAAR,iDACA,IAGI,gBA9FJ,SA8FA,GAKM,GAJA,EAAN,iBACM,EAAN,mBAGA,6BAIM,OAAN,cACQ,KAAR,WACQ,KAAR,oBACA,QAHM,GAMF,iBA7GJ,WA8GM,IAAN,sDAEM,EAAN,sBAGE,SAAF,CACI,UADJ,WAEM,YAAN,0CAEI,oBAJJ,WAKM,OAAN,kDAEI,sBAPJ,WAQM,OAAN,0FCzL8V,I,YCO1VC,EAAY,eACd,EACA/B,EACA8B,GACA,EACA,KACA,WACA,MAIa,aAAAC,E","file":"jfrog-ui-essentials.umd.min.jfDragAndDropTxt.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"drag-and-drop-txt-wrapper\",class:{'ready-for-upload':_vm.shouldDisplayUploadIcon()}},[(_vm.dndHeadingHtml)?_c('label',{domProps:{\"innerHTML\":_vm._s(_vm.sanitizedHeaderHtml)}}):_vm._e(),_c('jf-field',{attrs:{\"autofocus\":_vm.autofocus}},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.dndContent),expression:\"dndContent\"}],staticClass:\"input-text monospaced\",style:(_vm.dndStyle),attrs:{\"name\":\"dndtext\",\"required\":_vm.dndRequired,\"spellcheck\":\"false\"},domProps:{\"value\":(_vm.dndContent)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.dndContent=$event.target.value},function($event){return _vm.dndChange()}]}}),_c('label',{staticClass:\"call-to-action-label\",class:{'icon-upload':_vm.shouldDisplayUploadIcon()},domProps:{\"innerHTML\":_vm._s(_vm.sanitizedCallToAction)}})])],1)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <div>\n        <div class=\"drag-and-drop-txt-wrapper\" :class=\"{'ready-for-upload':shouldDisplayUploadIcon()}\">\n            <label v-if=\"dndHeadingHtml\" v-html=\"sanitizedHeaderHtml\"></label>\n            <jf-field :autofocus=\"autofocus\">\n                <textarea name=\"dndtext\" class=\"input-text monospaced\" v-model=\"dndContent\" @input=\"dndChange()\" :style=\"dndStyle\" :required=\"dndRequired\" spellcheck=\"false\"></textarea>\n                <label class=\"call-to-action-label\"\n                       v-html=\"sanitizedCallToAction\"\n                       :class=\"{'icon-upload':shouldDisplayUploadIcon()}\">\n                </label>\n            </jf-field>\n        </div>\n    </div>\n\n</template>\n\n<script>\n    import SanitizeMixin from '../../mixins/Sanitize/index.js';\n\n    export default {\n        name: 'jf-drag-and-drop-txt',\n        props: [\n            'dndContent',\n            'dndHeadingHtml',\n            'dndStyle',\n            'dndRequired',\n            'dndCallToAction',\n            'dndAutoFocus'\n        ],\n        'jf@inject': [\n            '$scope',\n            '$element',\n            '$attrs',\n            'JFrogNotifications'\n        ],\n        mixins: [SanitizeMixin],\n        data() {\n            return {};\n        },\n        created() {\n            this.draggedFileSizeLimit = 400;\n            // limit file size (in KB)\n            this.entered = false;\n        },\n        mounted() {\n            /* (NG2VUE) This was moved from created() to mounted() */\n            /* (NG2VUE) Todo: If any other code in created() depends on this, it should also be moved here. */\n\n            // Binding dragenter,dragleave,drop to <jf_drang_and_drop_text> element\n            // since these events are not natively supported by Angular\n            this.$element.bind('dragover', this.handleDragEnter.bind(this));\n\n            /* (NG2VUE) This was moved from created() to mounted() */\n            /* (NG2VUE) Todo: If any other code in created() depends on this, it should also be moved here. */\n            this.$element.bind('dragleave', this.handleDragLeave.bind(this));\n\n            /* (NG2VUE) This was moved from created() to mounted() */\n            /* (NG2VUE) Todo: If any other code in created() depends on this, it should also be moved here. */\n            this.$element.bind('drop', this.handleDropEvent.bind(this));\n        },\n        ng1_legacy: { 'controllerAs': 'jfDragAndDropTxt' },\n        methods: {\n            shouldDisplayUploadIcon() {\n                return $(this.$element).find('textarea').val() === '' && !$(this.$element).is('.over');\n            },\n            onFileLoadSuccess(event) {\n                this.dndContent = event.target.result;\n                $(this.$element).find('textarea').focus();\n\n                /* Todo: check the following condition. It may contain some undefined references: this.dndChange */\n                if (this.dndChange !== null)\n                    this.$emit('dnd-change');\n            },\n            onFileLoadFailure(event) {\n                let errorMessage = 'Unable to access license file.';\n                if (event.target.error.name === 'SecurityError') {\n                    errorMessage += '<br> The file is either unsafe or being used by another application.';\n                }\n\n                if (this.dndOnError !== null) {\n                    this.$emit('dnd-on-error', { msg: errorMessage });\n                } else {\n                    this.JFrogNotifications.create({ error: errorMessage });\n                }\n            },\n            handleDropEvent(event) {\n                this.entered = false;\n                this.toggleDragEffect();\n                event.preventDefault();\n                event.stopPropagation();\n\n                // Initialize a file reader and get file path\n                let reader = new FileReader();\n                let file = event.originalEvent.dataTransfer.files[0];\n\n                // Bind to reader events\n                reader.onload = event => {\n                    this.onFileLoadSuccess(event);\n                };\n                reader.onerror = event => {\n                    this.onFileLoadFailure(event);\n                };\n\n                // Limit the read file size\n                let fileSize = Math.round(file.size / 1000);\n                if (fileSize > this.draggedFileSizeLimit) {\n                    let errorMessage = 'File exceeds the maximum size of ' + this.draggedFileSizeLimit + ' KB';\n\n                    if (this.dndOnError !== null) {\n                        this.$emit('dnd-on-error', { msg: errorMessage });\n                    } else {\n                        this.JFrogNotifications.create({ error: errorMessage });\n                    }\n\n                    return false;\n                }\n\n                // Read the file if not exceeds size limit\n                reader.readAsText(file);\n            },\n            callingCodeShouldEnd(event) {\n                // This is an ugly fix for the issue of FireFox browser\n                // firing the dragover/dragenter and dragleve events again and again\n                // when dragging a file over the textarea\n                let theCallingCodeShouldEnd = false;\n\n                try {\n                    if (event.relatedTarget.nodeType == 3) {\n                        theCallingCodeShouldEnd = true;\n                    }\n                } catch (err) {\n                }\n\n                if (event.target === event.relatedTarget) {\n                    theCallingCodeShouldEnd = true;\n                }\n\n                return theCallingCodeShouldEnd;\n            },\n            handleDragEnter(event) {\n                event.preventDefault();\n                event.stopPropagation();\n                // cancel the event on FF\n\n                if (this.callingCodeShouldEnd(event)) {\n                    return;\n                }\n\n                if (!this.entered) {\n                    this.entered = true;\n                    this.toggleDragEffect();\n                    event.originalEvent.dataTransfer.effectAllowed = 'copy';\n                    return false;\n                }\n            },\n            handleDragLeave(event) {\n                event.preventDefault();\n                event.stopPropagation();\n                // cancel the event on FF\n\n                if (this.callingCodeShouldEnd(event)) {\n                    return;\n                }\n\n                if (this.entered) {\n                    this.entered = false;\n                    this.toggleDragEffect();\n                    return false;\n                }\n            },\n            toggleDragEffect() {\n                let dndWrapper = $(this.$element).find('.drag-and-drop-txt-wrapper');\n                // dndWrapper.removeClass('icon-upload');\n                dndWrapper.toggleClass('over');\n            }\n        },\n        computed: {\n            autofocus() {\n                return this.dndAutoFocus === undefined ? true : this.dndAutoFocus;\n            },\n            sanitizedHeaderHtml() {\n                return this.text ? this.$sanitize(this.dndHeadingHtml) : '';\n            },\n            sanitizedCallToAction() {\n                return this.text ? this.$sanitize(this.dndCallToAction) : `Copy your text or\n    <b>drop a file</b>`;\n            }\n        }\n    }\n\n</script>\n\n<style scoped lang=\"less\">\n\n\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=42db6ef9&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"42db6ef9\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
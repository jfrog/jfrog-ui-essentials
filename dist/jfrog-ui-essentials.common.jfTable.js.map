{"version":3,"sources":["webpack://jfrog-ui-essentials/./src/components/JfVscrollElementComponent/index.vue?b033","webpack://jfrog-ui-essentials/src/components/JfVscrollElementComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfVscrollElementComponent/index.vue?2cc9","webpack://jfrog-ui-essentials/./src/components/JfVscrollElementComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfTableRowComponent/index.vue?3e5f","webpack://jfrog-ui-essentials/./src/components/JfTableRowComponent/components/RowAction/index.vue?4430","webpack://jfrog-ui-essentials/src/components/JfTableRowComponent/components/RowAction/index.vue","webpack://jfrog-ui-essentials/./src/components/JfTableRowComponent/components/RowAction/index.vue?dd4c","webpack://jfrog-ui-essentials/./src/components/JfTableRowComponent/components/RowAction/index.vue","webpack://jfrog-ui-essentials/src/components/JfTableRowComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfTableRowComponent/index.vue?386c","webpack://jfrog-ui-essentials/./src/components/JfTableRowComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfVscrollComponent/index.vue?9307","webpack://jfrog-ui-essentials/./src/components/JfVscrollComponent/index.vue?3874","webpack://jfrog-ui-essentials/./src/components/JfVscrollComponent/index.vue?4490","webpack://jfrog-ui-essentials/src/components/JfVscrollComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfVscrollComponent/index.vue?69d8","webpack://jfrog-ui-essentials/./src/components/JfVscrollComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfTableViewBatchActionsComponent/index.vue?60c4","webpack://jfrog-ui-essentials/src/components/JfTableViewBatchActionsComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfTableViewBatchActionsComponent/index.vue?3cda","webpack://jfrog-ui-essentials/./src/components/JfTableViewBatchActionsComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfTableTopComponent/index.vue?c9fe","webpack://jfrog-ui-essentials/src/components/JfTableTopComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfTableTopComponent/index.vue?d182","webpack://jfrog-ui-essentials/./src/components/JfTableTopComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfTableCompiledCellComponent/index.vue?90a5","webpack://jfrog-ui-essentials/src/components/JfTableCompiledCellComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfTableCompiledCellComponent/index.vue?25c9","webpack://jfrog-ui-essentials/./src/components/JfTableCompiledCellComponent/index.vue"],"names":[],"mappings":"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DA;AACA,gBADA,wBACA,OADA,EACA,KADA,EACA,YADA,EACA;AACA;AACA,YADA,gBACA,KADA,EACA,OADA,EACA,KADA,EACA,aADA,EACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA,WAPA;AAQA;AAVA;AAYA,KAdA;AAeA;AAfA,GArDA;AAsEA;AACA;AACA;AACA;AACA;AACA;AALA,GAtEA;AA8EA;AACA,iBADA,yBACA,UADA,EACA;AACA;AACA;AACA;AACA;;AACA;AACA;;AACA;;AACA;AACA,6BACA;AAEA;AACA,KAdA;AAeA,wBAfA,kCAeA;AACA,4BACA;AACA;AACA,KAnBA;AAoBA,mBApBA,6BAoBA;AACA;AACA,KAtBA;AAuBA,mBAvBA,6BAuBA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;;AACA;AACA;;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA,kCACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AAEA,SAlBA,MAkBA;AACA;AACA;AACA;AACA,OAnCA;AAoCA,KA7DA;AA8DA,oBA9DA,8BA8DA;AAAA;;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OALA;;AAMA,iBACA,oBADA,KAGA;AACA,KA7EA;AA8EA,WA9EA,qBA8EA;AACA;AACA;AACA;AACA,KAlFA;AAmFA,gBAnFA,0BAmFA;AACA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA;AACA;AACA,KA3FA;AA4FA,iBA5FA,2BA4FA;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA,qCACA,6BADA,KAGA;AACA;AACA,KAtGA;AAuGA,wBAvGA,kCAuGA;AACA;AACA,KAzGA;AA0GA,gBA1GA,wBA0GA,MA1GA,EA0GA;AACA;AACA;AACA;AACA;;AAEA;;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AACA;;AACA;AACA;AACA;AACA,OAHA,MAGA;AACA;AACA;AACA;;AAEA;AACA,gCADA,CACA;AACA;AACA,KArIA;AAsIA,wBAtIA,kCAsIA;AACA;AACA,KAxIA;AAyIA,YAzIA,oBAyIA,SAzIA,EAyIA;AAAA;;AACA;;AACA;AACA,KA5IA;AA6IA,aA7IA,qBA6IA,SA7IA,EA6IA;AACA;;AACA;AACA,KAhJA;AAiJA,UAjJA,kBAiJA,SAjJA,EAiJA;AAAA;;AAAA;;AACA;AACA;;AACA;AACA;;AAEA;AACA;AACA;AACA;;AACA;AAAA;AAAA;;AAEA;;AACA;;AAEA;AACA;;AAEA;AACA;;AACA;;AACA;;AACA;AACA;AAAA;AAAA;AACA,SAFA,MAGA;AACA;AACA;AACA;AACA,OAXA;;AAYA;AACA;AAEA,KAlLA;AAmLA,WAnLA,mBAmLA,SAnLA,EAmLA;AACA,sBACA;AAEA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uCACA;AAEA;AACA,KA1NA;AA2NA,wBA3NA,gCA2NA,KA3NA,EA2NA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA,OAlBA,CAoBA;;;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAJA,MAIA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;;AAEA;AACA,iBADA;AAEA,iBAFA;AAGA,kBAHA;AAIA;AAJA;AAMA,KAxRA;AAyRA,eAzRA,yBAyRA;AACA;AACA;AACA;AACA,KA7RA;AA8RA,gBA9RA,wBA8RA,IA9RA,EA8RA;AAAA;;AACA;AACA;AACA;AACA,SAFA;AAGA;AACA;;AAEA;AACA;AAEA;;AACA;AACA;AACA,OAFA,MAEA;AACA;AACA,OAFA,MAEA;AACA;AACA;;AAEA;AACA,KAnTA;AAoTA,mBApTA,2BAoTA,IApTA,E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","file":"jfrog-ui-essentials.common.jfTable.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.compiledProps)?_c(_vm.template,_vm._b({tag:\"component\"},'component',_vm.compiledProps,false)):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <div>\n        <component v-if=\"compiledProps\" :is=\"template\" v-bind=\"compiledProps\"></component>\n    </div>\n\n</template>\n\n<script>\n    import {VueFactory} from \"../../services/VueFactory\";\n\n    export default {\n        name: 'jf-vscroll-element',\n        props: [\n            'data',\n            'template',\n            'variable',\n            'index',\n            'last',\n            'vscroll'\n        ],\n        'jf@inject': [\n            '$scope',\n            '$compileComp',\n            '$element',\n            '$timeout'\n        ],\n        data() {\n            return {\n                compiledProps: null\n            };\n        },\n        computed: {\n        },\n        created() {\n\n/*\n            let unwatchHeight = this.$scope.$watch('jfVScrollElement.childrenHeight', () => {\n                if (this.childrenHeight && this.childrenHeight > 1) {\n                    this.vscroll.setItemHeight(this.childrenHeight);\n                    unwatchHeight();\n                }\n            });\n*/\n\n        },\n        watch: {\n        },\n        mounted() {\n            let elementScope = {\n                [this.variable]: this.data,\n                v_index: () => this.index,\n                is_last: () => this.last\n            };\n\n//            this.compiledTemplate = this.$compileComp(this.template, {});\n            this.compiledProps = elementScope;\n            const { Vue } = VueFactory.getInstance();\n            Vue.nextTick(() => {\n                this.vscroll.setItemHeight(this.childrenHeight());\n                this.$scope.$watch('jfVScrollElement.data', () => {\n                    if (!this.compiledProps || !this.variable || !this.data) return;\n                    this.compiledProps[this.variable] = this.data;\n                });\n            })\n        },\n        ng1_legacy: {\n            'controllerAs': 'jfVScrollElement'\n        },\n        methods: {\n            childrenHeight() {\n                return $(this.$element).children().height() || 50;\n            }\n        }\n    }\n\n</script>\n\n<style scoped lang=\"less\">\n\n\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=f00afde6&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"f00afde6\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {\nvar _obj;\nvar _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return (_vm.data)?_c('div',{staticClass:\"jf-table-row\",class:( _obj = {\n        headers: _vm.rowId === 'headers',\n        'group-header': _vm.data && _vm.data.$groupHeader,\n        'expanded': _vm.data && _vm.data.$groupHeader && _vm.data.$groupHeader.$expanded,\n        'sub-row': _vm.data && _vm.data.$parentRow,\n        sticky: _vm.data && _vm.data.$sticky,\n        selected: _vm.data && _vm.data.$selected,\n        'drag-mark': _vm.rowId !== 'headers' && _vm.tableView.options.draggableRows && !(_vm.tableView.options.registeredTabularDnd && _vm.tableView.options.registeredTabularDnd.dndCtrl.disabled) && _vm.isRowDraggable()\n      }, _obj[_vm.data[_vm.tableView.options.rowClassAttr]] = _vm.tableView.options.rowClassAttr && _vm.data[_vm.tableView.options.rowClassAttr], _obj ),style:({height: _vm.rowId === 'headers' ? '' : _vm.tableView.options.rowHeight, opacity: _vm.tableView.options.ready ? 1 : 0}),on:{\"mousemove\":function($event){_vm.rowId === 'headers' && _vm.tableView.options.resizableColumns && _vm.onMouseMove($event)},\"mousedown\":function($event){_vm.rowId === 'headers' && _vm.tableView.options.resizableColumns && _vm.onMouseDown($event)},\"mouseup\":function($event){_vm.rowId === 'headers' && _vm.tableView.options.resizableColumns && _vm.onMouseUp($event)},\"mouseleave\":function($event){_vm.rowId === 'headers' && _vm.tableView.options.resizableColumns && _vm.onMouseUp($event)},\"click\":function($event){return _vm.onRowClick($event)}}},[(_vm.tableView.options.hasSelection())?_c('div',{staticClass:\"jf-table-cell selection\",class:{'single-selection' : _vm.tableView.options.selectionMode === _vm.tableView.options.SINGLE_SELECTION},style:({height: _vm.tableView.options.rowHeight, width: _vm.tableView.options.selectionColumnWidth + 'px'})},[_c('div',{staticClass:\"jf-table-cell-content\"},[((!_vm.data.$groupHeader && _vm.rowId !== 'headers') || (_vm.tableView.options.selectionMode === _vm.tableView.options.MULTI_SELECTION && _vm.tableView.options.getRawData().length && !_vm.tableView.options.noSelectAll))?_c('div',{staticClass:\"selection-button\",style:({height: _vm.tableView.options.rowHeight, width: _vm.tableView.options.selectionColumnWidth +'px'})},[_c('div',{staticClass:\"selection-icon icon icon-datagrid-v\",class:{selected: _vm.data.$selected || (_vm.rowId === 'headers' && _vm.tableView.allSelected)},on:{\"click\":function($event){_vm.toggleSelection(_vm.rowId === 'headers');$event.stopPropagation();}}})]):_vm._e()])]):_vm._e(),(_vm.data.$groupHeader)?_c('div',{staticClass:\"jf-table-cell group-header\",style:({height: _vm.rowId === 'headers' ? '' : _vm.tableView.options.rowHeight,\n                  lineHeight: _vm.rowId === 'headers' ? '' : _vm.tableView.options.rowHeight})},[_c('i',{staticClass:\"icon icon-small-arrow-down\",class:{'expanded': _vm.data.$groupHeader.$expanded}}),(_vm.data.$groupHeader.col && !_vm.data.$groupHeader.col.cellTemplate)?_c('span',{staticClass:\"jf-table-cell-content group-header\"},[_vm._v(\"\\n            \"+_vm._s(_vm.data.$groupHeader.value)+\"\\n        \")]):_vm._e(),(_vm.data.$groupHeader.col && _vm.data.$groupHeader.col.cellTemplate)?_c('div',{staticClass:\"jf-table-cell-content group-header\"},[_c('jf-table-compiled-cell',{attrs:{\"field\":_vm.data.$groupHeader.field,\"row-id\":_vm.rowId,\"table-row\":_vm.jfTableRow}})],1):_vm._e(),_c('div',{staticClass:\"group-header-count\"},[_vm._v(\"(\"+_vm._s(_vm.data.$groupHeader.count)+\")\")])]):_vm._e(),_vm._l((_vm.tableView.options.columns),function(col,$index){\n                  var _obj;\nreturn (!_vm.data.$groupHeader)?_c('div',{staticClass:\"jf-table-cell\",class:( _obj = {header: _vm.rowId === 'headers' && col.header, sortable: _vm.rowId === 'headers' && _vm.tableView.options.sortable && _vm.tableView.options.getRawData().length && col.sortable && !_vm.hoveringResize, 'column-resizer': _vm.hoveringResize}, _obj['drag-right'] = col.$dragRightBorder, _obj['drag-left'] = col.$dragLeftBorder, _obj['field-id-' + _vm.kebab(col.field)] = true, _obj['row-expander-cell'] = $index === 0 && _vm.tableView.options.subRowsEnabled, _obj ),style:({height: _vm.rowId === 'headers' ? _vm.tableView.options.headerRowHeight : _vm.tableView.options.rowHeight, width: col.width}),on:{\"click\":function($event){return _vm.onClickCell(col,$event)}}},[($index === 0 && _vm.tableView.options.subRowsEnabled)?_c('div',{staticClass:\"row-expander\",class:{placeholder: (!_vm.data.$subRows && !_vm.data.$parentRow) || (_vm.data.$subRows && _vm.data.$subRows.length === 0) || (_vm.data.$parentRow)},style:({height: _vm.tableView.options.rowHeight}),on:{\"click\":function($event){return _vm.toggleExpansion($event)}}},[(_vm.data.$subRows && _vm.data.$subRows.length && !_vm.data.$parentRow && !_vm.data.$pendingSubRows)?_c('i',{staticClass:\"action-icon icon icon-small-arrow-down\",class:{'expanded': _vm.data.$expanded}}):_vm._e(),(_vm.data.$pendingSubRows)?_c('div',{staticClass:\"spinner-msg-local\"},[_c('div',{staticClass:\"icon-hourglass-local\"})]):_vm._e()]):_vm._e(),((!col.cellTemplate && _vm.rowId !== 'headers') || (!col.headerCellTemplate && _vm.rowId === 'headers'))?_c('div',{directives:[{name:\"jf-tooltip-on-overflow\",rawName:\"v-jf-tooltip-on-overflow\"}],staticClass:\"jf-table-cell-content\",class:{'row-expander-content': $index === 0 && _vm.tableView.options.subRowsEnabled,\n                        'sortable-aligned-center' : col.sortable && col.textAlign === 'center'},style:({'text-align': col.textAlign || 'auto'})},[_vm._v(\"\\n            \"+_vm._s(_vm.getField(col.field))+\"\\n            \"),_c('i',{staticClass:\"icon sorting-icon icon-small-arrow-down\",class:{'rotate180': !_vm.tableView.options.revSort || (_vm.tableView.options.sortByField !== col.field && _vm.tableView.options.showSortingArrowsAlways),\n                          active: _vm.tableView.options.sortByField === col.field,\n                          'invisible' : !(_vm.rowId === 'headers' && _vm.tableView.options.sortable && (_vm.tableView.options.sortByField === col.field || _vm.tableView.options.showSortingArrowsAlways) && col.sortable && _vm.tableView.options.getRawData().length && (col.header || col.headerCellTemplate))}}),(_vm.rowId === 'headers' && col.allowGrouping)?_c('div',{staticClass:\"group-button-wrapper\"},[_c('div',{staticClass:\"group-button icon-grouping-off\",class:{'icon-grouping-on': _vm.tableView.options.groupedBy === col.field},on:{\"click\":function($event){_vm.tableView.options.groupBy(col.field); $event.stopPropagation();}}})]):_vm._e()]):_vm._e(),((col.cellTemplate && _vm.rowId !== 'headers') || (col.headerCellTemplate && _vm.rowId === 'headers'))?_c('div',{staticClass:\"jf-table-cell-content\",class:{'drag-mark': $index === 0 && _vm.rowId !== 'headers' && _vm.tableView.options.draggableRows},style:({'text-align': col.textAlign || 'auto'})},[_c('jf-table-compiled-cell',{key:_vm.rowId,attrs:{\"field\":col.field,\"row-id\":_vm.rowId,\"table-row\":_vm.jfTableRow}}),(_vm.rowId === 'headers' && _vm.tableView.options.sortable && (_vm.tableView.options.sortByField === col.field || _vm.tableView.options.showSortingArrowsAlways) && col.sortable && _vm.tableView.options.getRawData().length && (col.header || col.headerCellTemplate))?_c('i',{staticClass:\"icon sorting-icon\",class:{'icon-down-arrow': _vm.tableView.options.revSort && _vm.tableView.options.sortByField === col.field, 'icon-up-arrow': !_vm.tableView.options.revSort || (_vm.tableView.options.sortByField !== col.field && _vm.tableView.options.showSortingArrowsAlways), active: _vm.tableView.options.sortByField === col.field}}):_vm._e(),(_vm.rowId === 'headers' && col.allowGrouping)?_c('div',{staticClass:\"group-button-wrapper\"},[_c('div',{staticClass:\"group-button icon-grouping-off\",class:{'icon-grouping-on': _vm.tableView.options.groupedBy === col.field},on:{\"click\":function($event){_vm.tableView.options.groupBy(col.field); $event.stopPropagation();}}})]):_vm._e()],1):_vm._e()]):_vm._e()}),(_vm.rowId !== 'headers' && _vm.tableView.options.actions.length && !_vm.data.$groupHeader)?_c('div',{staticClass:\"jf-table-cell actions\",style:({height: _vm.rowId === 'headers' ? '' : _vm.tableView.options.rowHeight, width: _vm._getRowActionsWidth()})},[_c('div',{staticClass:\"jf-table-cell-content\"},[_vm._l((_vm.tableView.options.actions),function(action){return (_vm.tableView.options.actions.length <= 3 || _vm.tableView.options.isRowActionGroupingDisabled)?_c('div',{staticClass:\"action-button\",style:({height: _vm.tableView.options.rowHeight, width: _vm.tableView.options.actionButtonSize + 'px', visibility: !action.visibleWhen || action.visibleWhen(_vm.data) ? 'visible' : 'hidden'})},[_c('row-action',{attrs:{\"action\":action,\"data\":_vm.data,\"on-action-click\":_vm.fireAction}})],1):_vm._e()}),(_vm.tableView.options && !_vm.tableView.options.isRowActionGroupingDisabled && _vm.tableView.options.actions.length > 3 )?_c('div',{staticClass:\"action-button\",style:({height: _vm.tableView.options.rowHeight, width: _vm.tableView.options.actionButtonSize + 'px', visibility: _vm.tableView.options.hasVisibleActionsFor(_vm.data) ? 'visible' : 'hidden'})},[_c('div',{directives:[{name:\"jf-tooltip\",rawName:\"v-jf-tooltip.bind\",value:(_vm.actionsTooltip),expression:\"actionsTooltip\",modifiers:{\"bind\":true}}],staticClass:\"action-icon icon-more\",on:{\"click\":function($event){return _vm.toggleActionsDropdown($event)}}})]):_vm._e()],2)]):_vm._e(),(_vm.rowId === 'headers' && _vm.tableView.options.columnsCustomization)?_c('div',{staticClass:\"columns-customization-icon\",on:{\"click\":function($event){return _vm.tableView.options.toggleColumnsCustomizationDropdown()}}},[_c('i',{staticClass:\"icon-menu-arrow\"})]):_vm._e(),(_vm.actionsDropdownOpen)?_c('div',{ref:\"jfTableRowActionsDropdown\",staticClass:\"jf-table-row-actions-dropdown\",class:_vm.outOfViewport},_vm._l((_vm.tableView.options.actions),function(action){return (!action.visibleWhen || action.visibleWhen(_vm.data))?_c('div',{staticClass:\"action-item\",attrs:{\"icon-name\":action.icon || ''},on:{\"click\":function($event){_vm.fireAction(action);$event.stopPropagation();_vm.actionsDropdownOpen=false;}}},[_c('i',{staticClass:\"action-icon\",class:action.icon}),(!action.href)?_c('span',[_vm._v(_vm._s(action.tooltip))]):_vm._e(),(action.href)?_c('a',{attrs:{\"href\":action.href(_vm.data),\"download\":_vm.data.name}},[_vm._v(_vm._s(action.tooltip))]):_vm._e()]):_vm._e()}),0):_vm._e()],2):_vm._e()}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(!_vm.action.href)?_c('div',{directives:[{name:\"jf-tooltip\",rawName:\"v-jf-tooltip.bind\",value:(_vm.action.tooltip),expression:\"action.tooltip\",modifiers:{\"bind\":true}}],staticClass:\"action-icon\",class:_vm.action.icon,on:{\"click\":function($event){return _vm.actionHandler(_vm.action,$event)}}}):_vm._e(),(_vm.action.href)?_c('a',{attrs:{\"href\":_vm.action.href(_vm.data)},on:{\"click\":function($event){return _vm.actionHandler(_vm.action,$event)}}},[_c('div',{directives:[{name:\"jf-tooltip\",rawName:\"v-jf-tooltip.bind\",value:(_vm.action.tooltip),expression:\"action.tooltip\",modifiers:{\"bind\":true}}],staticClass:\"action-icon\",class:_vm.action.icon})]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div class=\"action-icon\"\n             @click=\"actionHandler(action,$event)\"\n             v-if=\"!action.href\"\n             v-jf-tooltip.bind=\"action.tooltip\"\n             :class=\"action.icon\">\n        </div>\n        <a @click=\"actionHandler(action,$event)\"\n           v-if=\"action.href\"\n           :href=\"action.href(data)\">\n            <div class=\"action-icon\"\n                 :class=\"action.icon\"\n                 v-jf-tooltip.bind=\"action.tooltip\">\n            </div>\n        </a>\n    </div>\n</template>\n\n<script>\n\texport default {\n\t\tname: 'RowAction',\n        props: [\n            'onActionClick',\n            'action',\n            'data'\n        ],\n        methods: {\n\t\t    actionHandler(action,$event) {\n                $event.stopPropagation();\n                this.onActionClick(action);\n            }\n        }\n\t};\n</script>\n\n<style scoped>\n\n</style>\n","import mod from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js!../../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=16c7be22&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"16c7be22\",\n  null\n  \n)\n\nexport default component.exports","<template>\n\n    <div class=\"jf-table-row\"\n         v-if=\"data\"\n         @mousemove=\"rowId === 'headers' && tableView.options.resizableColumns && onMouseMove($event)\"\n         @mousedown=\"rowId === 'headers' && tableView.options.resizableColumns && onMouseDown($event)\"\n         @mouseup=\"rowId === 'headers' && tableView.options.resizableColumns && onMouseUp($event)\"\n         @mouseleave=\"rowId === 'headers' && tableView.options.resizableColumns && onMouseUp($event)\"\n         @click=\"onRowClick($event)\"\n         :class=\"{\n            headers: rowId === 'headers',\n            'group-header': data && data.$groupHeader,\n            'expanded': data && data.$groupHeader && data.$groupHeader.$expanded,\n            'sub-row': data && data.$parentRow,\n            sticky: data && data.$sticky,\n            selected: data && data.$selected,\n            'drag-mark': rowId !== 'headers' && tableView.options.draggableRows && !(tableView.options.registeredTabularDnd && tableView.options.registeredTabularDnd.dndCtrl.disabled) && isRowDraggable(),\n            [data[tableView.options.rowClassAttr]]: tableView.options.rowClassAttr && data[tableView.options.rowClassAttr]\n          }\"\n         :style=\"{height: rowId === 'headers' ? '' : tableView.options.rowHeight, opacity: tableView.options.ready ? 1 : 0}\">\n        <div class=\"jf-table-cell selection\" :class=\"{'single-selection' : tableView.options.selectionMode === tableView.options.SINGLE_SELECTION}\" :style=\"{height: tableView.options.rowHeight, width: tableView.options.selectionColumnWidth + 'px'}\" v-if=\"tableView.options.hasSelection()\">\n            <div class=\"jf-table-cell-content\">\n                <div class=\"selection-button\" v-if=\"(!data.$groupHeader && rowId !== 'headers') || (tableView.options.selectionMode === tableView.options.MULTI_SELECTION && tableView.options.getRawData().length && !tableView.options.noSelectAll)\" :style=\"{height: tableView.options.rowHeight, width: tableView.options.selectionColumnWidth +'px'}\">\n                    <div class=\"selection-icon icon icon-datagrid-v\" :class=\"{selected: data.$selected || (rowId === 'headers' && tableView.allSelected)}\" @click=\"toggleSelection(rowId === 'headers');$event.stopPropagation();\">\n                    </div>\n                </div>\n            </div>\n        </div>\n\n\n        <!-- GROUP HEADER -->\n        <div class=\"jf-table-cell group-header\"\n             v-if=\"data.$groupHeader\"\n             :style=\"{height: rowId === 'headers' ? '' : tableView.options.rowHeight,\n                      lineHeight: rowId === 'headers' ? '' : tableView.options.rowHeight}\">\n\n\n            <i class=\"icon icon-small-arrow-down\"\n               :class=\"{'expanded': data.$groupHeader.$expanded}\"></i>\n            <span class=\"jf-table-cell-content group-header\" v-if=\"data.$groupHeader.col && !data.$groupHeader.col.cellTemplate\">\n                {{data.$groupHeader.value}}\n            </span>\n\n            <!--<i class=\"action-icon icon icon-small-arrow-down\"\n                 ng-class=\"{'expanded': data.$groupHeader.$expanded}\"></i>\n            <span class=\"jf-table-cell-content group-header\"\n                 ng-if=\"!data.$groupHeader.col.cellTemplate\">\n                {{data.$groupHeader.value}}\n            </span>-->\n\n            <div class=\"jf-table-cell-content group-header\" v-if=\"data.$groupHeader.col && data.$groupHeader.col.cellTemplate\">\n                <jf-table-compiled-cell :field=\"data.$groupHeader.field\" :row-id=\"rowId\" :table-row=\"jfTableRow\">\n                </jf-table-compiled-cell>\n            </div>\n            <div class=\"group-header-count\">({{data.$groupHeader.count}})</div>\n\n\n\n\n\n        </div>\n\n        <div class=\"jf-table-cell\"\n             v-if=\"!data.$groupHeader\"\n             :class=\"{header: rowId === 'headers' && col.header, sortable: rowId === 'headers' && tableView.options.sortable && tableView.options.getRawData().length && col.sortable && !hoveringResize, 'column-resizer': hoveringResize, ['drag-right']: col.$dragRightBorder, ['drag-left']: col.$dragLeftBorder, ['field-id-' + kebab(col.field)]: true, ['row-expander-cell']: $index === 0 && tableView.options.subRowsEnabled}\"\n             @click=\"onClickCell(col,$event)\"\n             :style=\"{height: rowId === 'headers' ? tableView.options.headerRowHeight : tableView.options.rowHeight, width: col.width}\"\n             v-for=\"(col, $index) in tableView.options.columns\">\n            <div class=\"row-expander\"  :class=\"{placeholder: (!data.$subRows && !data.$parentRow) || (data.$subRows && data.$subRows.length === 0) || (data.$parentRow)}\" v-if=\"$index === 0 && tableView.options.subRowsEnabled\" :style=\"{height: tableView.options.rowHeight}\" @click=\"toggleExpansion($event)\">\n                <i v-if=\"data.$subRows && data.$subRows.length && !data.$parentRow && !data.$pendingSubRows\" class=\"action-icon icon icon-small-arrow-down\" :class=\"{'expanded': data.$expanded}\"></i>\n                <div class=\"spinner-msg-local\" v-if=\"data.$pendingSubRows\">\n                    <div class=\"icon-hourglass-local\"></div>\n                </div>\n            </div>\n            <div class=\"jf-table-cell-content\"\n                 v-jf-tooltip-on-overflow\n                 :class=\"{'row-expander-content': $index === 0 && tableView.options.subRowsEnabled,\n                            'sortable-aligned-center' : col.sortable && col.textAlign === 'center'}\" :style=\"{'text-align': col.textAlign || 'auto'}\" v-if=\"(!col.cellTemplate && rowId !== 'headers') || (!col.headerCellTemplate && rowId === 'headers')\">\n                {{getField(col.field)}}\n                <i class=\"icon sorting-icon icon-small-arrow-down\" :class=\"{'rotate180': !tableView.options.revSort || (tableView.options.sortByField !== col.field && tableView.options.showSortingArrowsAlways),\n                              active: tableView.options.sortByField === col.field,\n                              'invisible' : !(rowId === 'headers' && tableView.options.sortable && (tableView.options.sortByField === col.field || tableView.options.showSortingArrowsAlways) && col.sortable && tableView.options.getRawData().length && (col.header || col.headerCellTemplate))}\"></i>\n\n\n\n                <div class=\"group-button-wrapper\" v-if=\"rowId === 'headers' && col.allowGrouping\">\n                    <div class=\"group-button icon-grouping-off\" :class=\"{'icon-grouping-on': tableView.options.groupedBy === col.field}\" @click=\"tableView.options.groupBy(col.field); $event.stopPropagation();\"></div>\n                </div>\n            </div>\n            <div class=\"jf-table-cell-content\" :class=\"{'drag-mark': $index === 0 && rowId !== 'headers' && tableView.options.draggableRows}\" :style=\"{'text-align': col.textAlign || 'auto'}\" v-if=\"(col.cellTemplate && rowId !== 'headers') || (col.headerCellTemplate && rowId === 'headers')\">\n                <jf-table-compiled-cell :key=\"rowId\" :field=\"col.field\" :row-id=\"rowId\" :table-row=\"jfTableRow\">\n                </jf-table-compiled-cell>\n                <i v-if=\"rowId === 'headers' && tableView.options.sortable && (tableView.options.sortByField === col.field || tableView.options.showSortingArrowsAlways) && col.sortable && tableView.options.getRawData().length && (col.header || col.headerCellTemplate)\" class=\"icon sorting-icon\" :class=\"{'icon-down-arrow': tableView.options.revSort && tableView.options.sortByField === col.field, 'icon-up-arrow': !tableView.options.revSort || (tableView.options.sortByField !== col.field && tableView.options.showSortingArrowsAlways), active: tableView.options.sortByField === col.field}\"></i>\n                <div class=\"group-button-wrapper\" v-if=\"rowId === 'headers' && col.allowGrouping\">\n                    <div class=\"group-button icon-grouping-off\" :class=\"{'icon-grouping-on': tableView.options.groupedBy === col.field}\" @click=\"tableView.options.groupBy(col.field); $event.stopPropagation();\"></div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"jf-table-cell actions\"\n             :style=\"{height: rowId === 'headers' ? '' : tableView.options.rowHeight, width: _getRowActionsWidth()}\"\n             v-if=\"rowId !== 'headers' && tableView.options.actions.length && !data.$groupHeader\">\n            <div class=\"jf-table-cell-content\">\n                <div class=\"action-button\"\n                     :style=\"{height: tableView.options.rowHeight, width: tableView.options.actionButtonSize + 'px', visibility: !action.visibleWhen || action.visibleWhen(data) ? 'visible' : 'hidden'}\"\n                     v-if=\"tableView.options.actions.length <= 3 || tableView.options.isRowActionGroupingDisabled\"\n                     v-for=\"action in tableView.options.actions\">\n                    <row-action :action=\"action\"\n                                :data=\"data\"\n                                :on-action-click=\"fireAction\">\n                    </row-action>\n                </div>\n                <div class=\"action-button\" :style=\"{height: tableView.options.rowHeight, width: tableView.options.actionButtonSize + 'px', visibility: tableView.options.hasVisibleActionsFor(data) ? 'visible' : 'hidden'}\" v-if=\"tableView.options && !tableView.options.isRowActionGroupingDisabled && tableView.options.actions.length > 3 \">\n                    <div class=\"action-icon icon-more\" @click=\"toggleActionsDropdown($event)\" v-jf-tooltip.bind=\"actionsTooltip\"></div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"columns-customization-icon\" @click=\"tableView.options.toggleColumnsCustomizationDropdown()\" v-if=\"rowId === 'headers' && tableView.options.columnsCustomization\">\n            <i class=\"icon-menu-arrow\"></i>\n        </div>\n\n        <div class=\"jf-table-row-actions-dropdown\" ref=\"jfTableRowActionsDropdown\" :class=\"outOfViewport\"\n             v-if=\"actionsDropdownOpen\">\n            <div v-for=\"action in tableView.options.actions\" v-if=\"!action.visibleWhen || action.visibleWhen(data)\"\n                 @click=\"fireAction(action);$event.stopPropagation();actionsDropdownOpen=false;\" class=\"action-item\"\n                 :icon-name=\"action.icon || ''\">\n                <i class=\"action-icon\" :class=\"action.icon\"></i>\n                <span v-if=\"!action.href\">{{action.tooltip}}</span>\n                <a v-if=\"action.href\" :href=\"action.href(data)\" :download=\"data.name\">{{action.tooltip}}</a>\n            </div>\n        </div>\n\n    </div>\n\n</template>\n\n<script>\n    import 'components-jqueryui';\n    import map from 'lodash/map';\n    import isUndefined from 'lodash/isUndefined';\n    import isString from 'lodash/isString';\n    import filter from 'lodash/filter';\n    import find from 'lodash/find';\n    import get from 'lodash/get';\n    import kebabCase from 'lodash/kebabCase';\n    import RowAction from './components/RowAction';\n\n    export default {\n        components: {\n            RowAction\n        },\n        name: 'jf-table-row',\n        props: [\n            'data',\n            'rowId',\n            'tableView'\n        ],\n        'jf@inject': [\n            '$scope',\n            '$element',\n            '$timeout',\n            'JFrogEventBus'\n        ],\n        data() {\n            return {\n                hoveringResize: null,\n                actionsDropdownOpen: null,\n                outOfViewport: {}\n\n            };\n        },\n        computed: {\n            actionsTooltip() {\n                return this.actionsDropdownOpen ? '' : 'Actions';\n            }\n        },\n        created() {\n            this.EVENTS = this.JFrogEventBus.getEventsDefinition();\n        },\n        mounted() {\n            $(this.$el).prop('comp', this);\n            this.templatesCount = filter(this.tableView.options.columns, col => !!col.cellTemplate).length;\n\n            this.JFrogEventBus.registerOnScope(this.$scope, this.EVENTS.TABLEVIEW_HIDE_ACTIONS_DROPDOWN, tableView => {\n                if (tableView === this.tableView)\n                    this.actionsDropdownOpen = false;\n            });\n            if (this.tableView.options.draggableRows)\n                this.$timeout(() => this.initDragAndDrop());\n\n            $(this.$element).prop('ctrl', this);\n\n        },\n        ng1_legacy: { 'controllerAs': 'jfTableRow' },\n        methods: {\n            getField(field) {\n                return get(this.data, field);\n            },\n            kebab(str) {\n                return kebabCase(str);\n            },\n            toggleSelection(all) {\n                if (this.tableView.options.isRowSelectable && !this.tableView.options.isRowSelectable({ entity: this.data }))\n                    return;\n\n                if (!all) {\n                    if (this.tableView.options.selectionMode === this.tableView.options.MULTI_SELECTION) {\n                        this.$set(this.data, '$selected', !this.data.$selected);\n                        if (!this.data.$selected) {\n                            this.$set(this.tableView, 'allSelected', false);\n                            if (this.tableView.options.groupedBy) {\n                                let groupHeader = find(this.tableView.options.getPrePagedData(), { $groupHeader: { value: get(this.data, this.tableView.options.groupedBy) } });\n                                if (groupHeader)\n                                    groupHeader.$selected = false;\n                            }\n                        }\n                        if (this.data.$groupHeader)\n                            this.tableView.groupSelection(this.data);\n                    } else if (this.tableView.options.selectionMode === this.tableView.options.SINGLE_SELECTION) {\n                        this.tableView.clearSelection();\n                        this.$set(this.data, '$selected', true);\n                    }\n                } else {\n                    this.tableView.toggleSelectAll();\n                }\n                this.tableView.options.fire('selection.change', this.tableView.options.getSelectedRows());\n\n            },\n            toggleGroupExpansion() {\n                this.$set(this.data.$groupHeader, '$expanded', !this.data.$groupHeader.$expanded);\n                this.tableView.options.updateGroupExpansionState(this.data);\n                this.$forceUpdate();\n            },\n            fireAction(action) {\n                if (action.callback) action.callback(this.data);\n                this.tableView.onUpdateFilter(false);\n            },\n            onMouseMove(e) {\n                if (!this.resizingColumns) {\n                    if (this.hoveringResize && this.hoveringResize.left)\n                        this.$delete(this.hoveringResize.left, '$dragRightBorder');\n                    if (this.hoveringResize && this.hoveringResize.right)\n                        this.$delete(this.hoveringResize.right, '$dragLeftBorder');\n                    this.hoveringResize = this._getHoveringResizePoint(e);\n                } else {\n                    this.dragColumnResize(e);\n                }\n            },\n            dragColumnResize(e) {\n                let MIN_WIDTH = 5;\n                //percent\n                let container = this._getTableContainer();\n                let containerWidth = container.innerWidth();\n                let mouseX = e.pageX - container.offset().left;\n                let mouseXPerc = Math.round(mouseX / containerWidth * 100);\n                let offset = mouseXPerc - this.resizeDragStart;\n\n                let newLeftWidth, newRightWidth;\n                if (isString(this.hoveringResize.origLeftWidth) && this.hoveringResize.origLeftWidth.endsWith('%')) {\n                    newLeftWidth = parseFloat(this.hoveringResize.origLeftWidth) + offset + '%';\n                } else if (isString(this.hoveringResize.origLeftWidth) && this.hoveringResize.origLeftWidth.endsWith('px')) {\n                    let perc = parseFloat(this.hoveringResize.origLeftWidth) / containerWidth * 100;\n                    newLeftWidth = perc + offset + '%';\n                }\n                if (this.hoveringResize.right) {\n                    if (isString(this.hoveringResize.origRightWidth) && this.hoveringResize.origRightWidth.endsWith('%')) {\n                        newRightWidth = parseFloat(this.hoveringResize.origRightWidth) - offset + '%';\n                    } else if (isString(this.hoveringResize.origRightWidth) && this.hoveringResize.origRightWidth.endsWith('px')) {\n                        let perc = parseFloat(this.hoveringResize.origRightWidth) / containerWidth * 100;\n                        newRightWidth = perc - offset + '%';\n                    }\n                }\n\n                if (parseFloat(newLeftWidth) > MIN_WIDTH && (!newRightWidth || parseFloat(newRightWidth) > MIN_WIDTH)) {\n                    this.$set(this.hoveringResize.left, 'width', this.$set(this.hoveringResize.left, 'origWidth', newLeftWidth));\n                    if (this.hoveringResize.right)\n                        this.$set(this.hoveringResize.right, 'width', this.$set(this.hoveringResize.right, 'origWidth', newRightWidth));\n                }\n            },\n            onMouseDown(e) {\n                if (this.hoveringResize) {\n                    let container = this._getTableContainer();\n                    let containerWidth = container.innerWidth();\n                    let mouseX = e.pageX - container.offset().left;\n                    let mouseXPerc = Math.round(mouseX / containerWidth * 100);\n\n                    this.resizingColumns = true;\n                    this.resizeDragStart = mouseXPerc;\n\n                    this.$set(this.hoveringResize.left, '$dragRightBorder', true);\n                    if (this.hoveringResize.right)\n                        this.$set(this.hoveringResize.right, '$dragLeftBorder', true);\n                }\n            },\n            onMouseUp(e) {\n                if (this.hoveringResize && this.hoveringResize.left)\n                    this.$delete(this.hoveringResize.left, '$dragRightBorder');\n                if (this.hoveringResize && this.hoveringResize.right)\n                    this.$delete(this.hoveringResize.right, '$dragLeftBorder');\n                this.resizingColumns = false;\n                delete this.resizeDragStart;\n            },\n            _getHoveringResizePoint(e) {\n                let columns = this.tableView.options.columns;\n\n                let container = this._getTableContainer();\n                let containerWidth = container.innerWidth();\n                let mouseX = e.pageX - container.offset().left;\n                let mouseXPerc = Math.round(mouseX / containerWidth * 100);\n\n                let percCount = this.tableView.options.hasSelection() ? this.tableView.options.selectionColumnWidth / containerWidth * 100 : 0;\n\n                let hovering = false;\n\n                for (let colI = 0; colI < columns.length; colI++) {\n                    let col = columns[colI];\n                    if (isString(col.width) && col.width.endsWith('%')) {\n                        percCount += parseFloat(col.width);\n                    } else if (isString(col.width) && col.width.endsWith('px')) {\n                        let perc = parseFloat(col.width) / containerWidth * 100;\n                        percCount += perc;\n                    }\n                    if (Math.abs(percCount - mouseXPerc) <= 0.5) {\n                        hovering = {\n                            left: col,\n                            right: columns[colI + 1],\n                            origLeftWidth: col.width,\n                            origRightWidth: columns[colI + 1] ? columns[colI + 1].width : undefined\n                        };\n                        break;\n                    }\n                }\n\n                return hovering;\n            },\n            _getTableContainer() {\n                return $(this.tableView.$element).find('.jf-table-view-container');\n            },\n            onClickCell(col, event) {\n                //        event.stopPropagation();\n                if (this.rowId === 'headers' && col.header && this.tableView.options.sortable && !this.hoveringResize && col.sortable) {\n                    this.tableView.options.sortBy(col.field);\n                    this.$forceUpdate();\n                }\n            },\n            onRowClick($event) {\n                if (this.data.$groupHeader) {\n                    this.toggleGroupExpansion();\n                } else {\n                    if (this.rowId !== 'headers')\n                        this.tableView.options.fire('row.clicked', {\n                            entity: this.data,\n                            event: $event\n                        });\n                }\n            },\n            toggleExpansion($event) {\n                $event.stopPropagation();\n                this.tableView.options.toggleExpansion(this.data);\n            },\n            async toggleActionsDropdown(e) {\n                e.stopPropagation();\n                let origState = this.actionsDropdownOpen;\n                this.JFrogEventBus.dispatch(this.EVENTS.TABLEVIEW_HIDE_ACTIONS_DROPDOWN, this.tableView);\n                this.actionsDropdownOpen = !origState;\n                await this.$nextTick();\n                await this.applyOutOfViewport(e.pageY);\n            },\n            async applyOutOfViewport(clickHeight) {\n                try {\n                    const el = this.$refs.jfTableRowActionsDropdown;\n                    if(!el) {\n                        this.outOfViewport = {};\n                        return\n                    }\n                    const dropdownRect = el.getBoundingClientRect();\n                    const [tableRowsContainer] = document.getElementsByClassName('table-rows-container');\n                    const tableRowsRect = tableRowsContainer.getBoundingClientRect()\n                    const isOutOfViewPort = dropdownRect.bottom > (window.innerHeight || document.documentElement.clientHeight);\n                    const isOutOfTableRowsContainer = ( tableRowsRect.bottom - clickHeight) < dropdownRect.height;\n                    await this.$nextTick();\n                    this.outOfViewport = (isOutOfViewPort || isOutOfTableRowsContainer) ? {'out-of-viewport': true} : {};\n                } catch (e) {\n                    this.outOfViewport = {};\n                }\n            },\n            initDragAndDrop() {\n                if (this.rowId === 'headers')\n                    return;\n\n                window.$(this.$element).draggable({\n                    helper: 'clone',\n                    scroll: true,\n                    distance: 10,\n                    appendTo: $(this.tableView.$element).find('.jf-table-view-container'),\n                    start: (event, ui) => this.dragStart(event, ui),\n                    stop: (event, ui) => this.dragStop(event, ui),\n                    drag: (event, ui) => this.dragMove(event, ui)\n                });\n                $(this.$element).addClass('drag-enabled');\n            },\n            dragStart(event, ui) {\n                if (this.tableView.options.registeredTabularDnd && this.tableView.options.registeredTabularDnd.dndCtrl.disabled) {\n                    event.preventDefault();\n                    return;\n                }\n\n                if (!this.isRowDraggable()) {\n\n                    event.preventDefault();\n                    return;\n                }\n\n                $('body').addClass('grabbing');\n                this.tableView.options.dragRow(this.data);\n                this.initDragHelper(ui.helper);\n            },\n            isRowDraggable() {\n                if (this.tableView.options.registeredTabularDnd && this.tableView.options.registeredTabularDnd.dndCtrl.itemDraggableAttr && !isUndefined(this.data[this.tableView.options.registeredTabularDnd.dndCtrl.itemDraggableAttr]) && !this.data[this.tableView.options.registeredTabularDnd.dndCtrl.itemDraggableAttr]) {\n\n                    return false;\n                } else\n                    return true;\n            },\n            initDragHelper(helper) {\n                helper.addClass('row-drag-helper');\n                if (this.tableView.options.registeredTabularDnd) {\n                    let numOfDraggedRows = this.tableView.options.draggedRows ? this.tableView.options.draggedRows.length : 1;\n                    if (numOfDraggedRows > 1) {\n                        helper.addClass('multiple').html(`<span>≡</span>` + numOfDraggedRows + ' ' + this.tableView.getObjectNameByCount(numOfDraggedRows, this.tableView.options.registeredTabularDnd.dndCtrl.entityName || 'Item'));\n                    }\n                }\n            },\n            dragStop(event, ui) {\n                let draggedRowsArrayForDndEvent = this.tableView.options.draggedRow ? [this.tableView.options.draggedRow] : map(this.tableView.options.draggedRows, 'row');\n                let target = $(event.originalEvent.target);\n                target = target.is('.jf-table-row') ? target[0] : target.parents('.jf-table-row')[0];\n\n                $('body').removeClass('grabbing');\n\n                let handleForeignDrop = targetRow => {\n                    this.tableView.options.registeredTabularDnd.dndOther.dropDraggedRow(targetRow, this.tableView.options.draggedRow || this.tableView.options.draggedRows, true);\n                    this.tableView.options.markDropTarget(null);\n                    this.tableView.options.registeredTabularDnd.dndCtrl.onDragTransfer(draggedRowsArrayForDndEvent, this.tableView.options);\n                    delete this.tableView.options.draggedRow;\n                    delete this.tableView.options.draggedRows;\n                };\n                if (target) {\n                    if (this.isForeignDrop(target)) {\n                        handleForeignDrop($(target).prop('ctrl').data);\n                    } else {\n                        this.tableView.options.dropDraggedRow($(target).prop('ctrl').data);\n                    }\n                } else {\n                    if (this.tableView.options.registeredTabularDnd) {\n                        if ($(event.originalEvent.target).is('.empty-table-placeholder') && $(event.originalEvent.target).parents('.jf-table-view')[0] !== $(this.tableView.$element).find('.jf-table-view')[0]) {\n\n                            handleForeignDrop(null);\n\n                        } else {\n                            let container = $(event.originalEvent.target).is('.tabular-dnd-table-container') ? $(event.originalEvent.target) : $(event.originalEvent.target).parents('.tabular-dnd-table-container');\n                            let myRole = this.tableView.options.registeredTabularDnd.dndRole;\n\n                            if (container && (container.is('.available-table') && myRole === 'selected' || container.is('.selected-table') && myRole === 'available')) {\n                                handleForeignDrop(null);\n                            } else {\n                                this.tableView.options.dropDraggedRow();\n                            }\n\n                        }\n                    } else {\n                        this.tableView.options.dropDraggedRow();\n                    }\n                }\n            },\n            handleScrollOnDrag(target, event) {\n                if (this.tableView.options.paginationMode === this.tableView.options.VIRTUAL_SCROLL) {\n\n                    let tableView;\n\n                    if (this.tableView.options.registeredTabularDnd && target) {\n                        let rowCtrl = $(target).prop('ctrl');\n                        tableView = rowCtrl.tableView;\n                    }\n                    else if (!this.tableView.options.registeredTabularDnd) {\n                        tableView = this.tableView;\n                    }\n\n                    if (!tableView) return;\n\n\n                    let container = $(tableView.$element).find('.table-rows-container');\n                    let containerY = container[0].getClientRects()[0].y;\n                    let relativeY = event.clientY - containerY;\n                    let containerHeight = container.height();\n\n                    let vsApi = tableView.vsApi;\n\n                    if (relativeY < 50) {\n                        vsApi.scroll(-0.1 * (50 - relativeY));\n                    } else if (relativeY > containerHeight - 50) {\n                        vsApi.scroll(0.1 * (50 - (containerHeight - relativeY)));\n                    }\n                }\n\n            },\n            dragMove(event, ui) {\n\n                let target = $(event.originalEvent.target);\n                target = target.is('.jf-table-row') ? target[0] : target.parents('.jf-table-row')[0];\n\n                this.handleScrollOnDrag(target, event);\n\n                if (!target && $(event.originalEvent.target).is('.empty-table-placeholder'))\n                    target = event.originalEvent.target;\n\n                if (target) {\n                    this.tableView.options.markDropTarget($(target));\n                } else {\n                    this.tableView.options.markDropTarget(null);\n                }\n            },\n            isForeignDrop(dropTarget) {\n                if (!this.tableView.options.registeredTabularDnd)\n                    return false;\n                else {\n                    let targetTableView = $(dropTarget).prop('ctrl') ? $(dropTarget).prop('ctrl').tableView : null;\n                    if (targetTableView && targetTableView.options === this.tableView.options.registeredTabularDnd.dndOther)\n                        return true;\n                    else\n                        return false;\n                }\n            },\n            _getRowActionsWidth() {\n                return this.tableView.options.getActionsContainerWidthInPixels() + 'px';\n            }\n        }\n    }\n\n</script>\n\n<style scoped lang=\"less\">\n\n\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=3f4c6457&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"3f4c6457\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=ad07fc8c&scoped=true&lang=less&\"","// extracted by mini-css-extract-plugin","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"v-scroll-container\"},[_c('div',{staticClass:\"v-scroll-inner-container\",style:({transform: 'translate(0, ' + (-_vm.getTranslate()) + 'px)', height: _vm.containerHeight + 'px', opacity: _vm.ready ? 1 : 0})},[_c('div',{staticClass:\"scroll-faker-container\",style:({transform: 'translate(0, ' + (_vm.getTranslate()) + 'px)', right: 0, height: _vm.getPageHeight() + 'px'})},[_c('div',{directives:[{name:\"init\",rawName:\"v-init\",value:(_vm.initScrollFaker()),expression:\"initScrollFaker()\"}],staticClass:\"scroll-faker\",style:({height: (_vm.getTotalScrollHeight() > _vm.maxFakeScrollHeight ? _vm.maxFakeScrollHeight : _vm.getTotalScrollHeight()) + 'px'})})]),_c('div',{staticClass:\"h-scroll-wrapper\",style:({height: (_vm.getPageHeight() + _vm.getTranslate()) + 'px'}),on:{\"wheel\":_vm.onMouseWheel}},[_c('div',{staticClass:\"h-scroll-content\"},_vm._l((_vm.getPage()),function(item,$index){return _c('jf-vscroll-element',{key:$index,attrs:{\"vscroll\":_vm.jfVScroll,\"data\":item,\"index\":$index,\"template\":_vm.childComponent,\"variable\":_vm.withEach,\"last\":$index === _vm.getPage().length - 1}})}),1)])])])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <div>\n        <div class=\"v-scroll-container\">\n            <div class=\"v-scroll-inner-container\" :style=\"{transform: 'translate(0, ' + (-getTranslate()) + 'px)', height: containerHeight + 'px', opacity: ready ? 1 : 0}\">\n                <div class=\"scroll-faker-container\" :style=\"{transform: 'translate(0, ' + (getTranslate()) + 'px)', right: 0, height: getPageHeight() + 'px'}\">\n                    <div class=\"scroll-faker\" v-init=\"initScrollFaker()\" :style=\"{height: (getTotalScrollHeight() > maxFakeScrollHeight ? maxFakeScrollHeight : getTotalScrollHeight()) + 'px'}\">\n                    </div>\n                </div>\n                <div class=\"h-scroll-wrapper\" :style=\"{height: (getPageHeight() + getTranslate()) + 'px'}\" @wheel=\"onMouseWheel\">\n                    <div class=\"h-scroll-content\">\n                        <jf-vscroll-element v-for=\"(item, $index) in getPage()\" :key=\"$index\" :vscroll=\"jfVScroll\" :data=\"item\" :index=\"$index\" :template=\"childComponent\" :variable=\"withEach\" :last=\"$index === getPage().length - 1\"></jf-vscroll-element>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n<script>\n    import isNaN from 'lodash/isNaN';\n    import {VueFactory} from \"../../services/VueFactory\";\n\n    export default {\n        name: 'jf-vscroll',\n        props: [\n            'withEach',\n            'api',\n            'in',\n            'preventDefaultScroll'\n        ],\n        'jf@inject': [\n            '$scope',\n            '$timeout',\n            '$compileComp',\n            '$element',\n            '$q'\n        ],\n        data() {\n            return {\n                ready: false,\n                maxFakeScrollHeight: 1000000,\n                transcludedContent: null,\n                containerHeight: 0,\n                scrollTimeout: undefined,\n                virtualScrollIndex: 0,\n                virtScrollDisplacement: 0,\n                settingScroll: false,\n                itemHeight: undefined,\n                itemsPerPage: 1,\n                childComponent: null\n            };\n        },\n        watch: {\n            in() {\n                this.refresh();\n            }\n        },\n        created() {\n\n            let whenReadyDefer = this.$q.defer();\n            this.whenReady = whenReadyDefer.promise;\n            this.$scope.$watch('jfVScroll.ready', () => {\n                if (this.ready) {\n                    this.refresh();\n                    whenReadyDefer.resolve();\n                }\n            });\n        },\n        mounted() {\n            this.childComponent = this.$compileComp(this.transcludedContent, this.$parent.$data, this.$parent);\n            this.childComponent.props = [this.withEach, 'v_index', 'is_last'];\n            this.containerHeight = $(this.$element).parent().height() + 1;\n            this._setAutoItemsPerPage();\n            this._initApi();\n        },\n        ng1_legacy: {\n            ng1compileFn(element, attrs, transcludeFn) {\n                return {\n                    post(scope, element, attrs, directiveCtrl) {\n                        transcludeFn(clone => {\n                            let html = '';\n                            for (let i = 0; i < clone.length; i++) {\n                                html += clone[i].outerHTML || '';\n                            }\n                            html = html.replace('v-pre', '');\n                            directiveCtrl.transcludedContent = html;\n                        });\n                    }\n                }\n            },\n            'controllerAs': 'jfVScroll'\n        },\n        computed: {\n/*\n            containerHeight() {\n                return $(this.$element).parent().height();\n            }\n*/\n\n        },\n        methods: {\n            setItemHeight(itemHeight) {\n                if (this.itemHeight !== undefined && this.itemHeight !== itemHeight && !this.inequalHeightsWarned) {\n                    this.inequalHeightsWarned = true;\n                    console.error('Virtual scroll will not work correctly if items are not all the same height');\n                }\n                if (this.itemHeight === undefined) {\n                    this.itemHeight = itemHeight;\n                    this._setAutoItemsPerPage();\n                    this.ready = true;\n                    if (this.api.onInit)\n                        this.api.onInit();\n\n                }\n            },\n            _setAutoItemsPerPage() {\n                if (!this.itemHeight)\n                    return;\n                this.itemsPerPage = Math.floor(this.containerHeight / this.itemHeight);\n            },\n            getItemsPerPage() {\n                return this.itemsPerPage;\n            },\n            initScrollFaker() {\n                let scrollParent = $(this.$element).find('.scroll-faker-container');\n                scrollParent.on('scroll', e => {\n                    if (this.settingScroll) {\n                        this.settingScroll = false;\n                        return;\n                    }\n                    if (this.autoScrolling) {\n                        return;\n                    }\n                    if (this.scrollTimeout) {\n                        this.$timeout.cancel(this.scrollTimeout);\n                        delete this.scrollTimeout;\n                    }\n                    let len = this.in.length;\n                    if (len) {\n                        let maxScrollTop = scrollParent[0].scrollHeight - scrollParent.outerHeight();\n                        let relativePosition = scrollParent.scrollTop() / maxScrollTop;\n                        if (isNaN(relativePosition)) {\n                            relativePosition = 1;\n                        }\n                        let newScrollIndex = relativePosition * (len - this.itemsPerPage);\n                        if (newScrollIndex < 0)\n                            newScrollIndex = 0;\n                        this.virtualScrollIndex = Math.floor(newScrollIndex);\n                        this.virtScrollDisplacement = newScrollIndex - this.virtualScrollIndex;\n\n                        if (this.virtualScrollIndex + this.itemsPerPage >= this.in.length - 2) {\n                            if (this.bottomReachedListener) {\n                                this.bottomReachedListener();\n                            }\n                        }\n\n                    } else {\n                        this.virtualScrollIndex = 0;\n                        this.virtScrollDisplacement = 0;\n                    }\n                });\n            },\n            syncFakeScroller(delay = true) {\n                let len = this.in.length;\n                let scrollParent = $(this.$element).find('.scroll-faker-container');\n                let relativePosition = this._getCurrentScrollPos() / (len - this.itemsPerPage);\n\n                let sync = () => {\n                    let maxScrollTop = scrollParent[0].scrollHeight - scrollParent.outerHeight();\n                    let scrollTop = Math.floor(maxScrollTop * relativePosition);\n                    this.settingScroll = true;\n                    scrollParent.scrollTop(scrollTop);\n                };\n                if (delay)\n                    this.$timeout(sync);\n                else\n                    sync();\n            },\n            getPage() {\n                let vScrollIndex = this.virtualScrollIndex;\n                let additionals = vScrollIndex + this.itemsPerPage + 2 <= this.in.length ? 2 : vScrollIndex + this.itemsPerPage + 1 <= this.in.length ? 1 : 0;\n                return this.in.slice(vScrollIndex, vScrollIndex + this.itemsPerPage + additionals);\n            },\n            getTranslate() {\n                let displacement = this.virtScrollDisplacement;\n                if (!displacement) {\n                    return 0;\n                } else {\n                    let pixels = displacement * this.itemHeight;\n                    return pixels;\n                }\n            },\n            getPageHeight() {\n                if (this.containerHeight) {\n                    return this.containerHeight;\n                } else {\n                    let len = this.in.length;\n                    if (len < this.itemsPerPage)\n                        return len * this.itemHeight;\n                    else\n                        return this.itemsPerPage * this.itemHeight;\n                }\n            },\n            getTotalScrollHeight() {\n                return this.in.length * this.itemHeight;\n            },\n            onMouseWheel($event) {\n                if (this.scrollTimeout) {\n                    this.$timeout.cancel(this.scrollTimeout);\n                    this.scrollTimeout = undefined;\n                }\n\n                let normalDelta = this._normalizeWheelEvent($event).pixelY;\n                let xDelta = this._normalizeWheelEvent($event).pixelX;\n\n                if (Math.abs(normalDelta) < Math.abs(xDelta)) {\n                    $event.stopPropagation();\n                    return;\n                }\n\n                let scrollAmount = 0.02 * Math.abs(normalDelta);\n                let scrollPosBefore = this._getCurrentScrollPos();\n                if ($event.deltaY > 0) {\n                    // scrollUp\n                    this._scrollTo(scrollPosBefore + scrollAmount);\n                } else if ($event.deltaY < 0) {\n                    // scrollDown\n                    this._scrollTo(scrollPosBefore - scrollAmount);\n                }\n\n                if (scrollPosBefore !== this._getCurrentScrollPos() || this.preventDefaultScroll) {\n                    $event.preventDefault();    //        this.syncFakeScroller(false);\n                }\n            },\n            _getCurrentScrollPos() {\n                return this.virtualScrollIndex + this.virtScrollDisplacement;\n            },\n            scrollTo(scrollPos, duration = 500) {\n                let dist = scrollPos - this._getCurrentScrollPos();\n                this.scroll(dist, duration);\n            },\n            _scrollTo(scrollPos) {\n                let dist = scrollPos - this._getCurrentScrollPos();\n                this._scroll(dist);\n            },\n            scroll(numOfRows, duration = 500) {\n                if (duration === 0) {\n                    this._scroll(numOfRows);\n                    return;\n                }\n\n                if (this.scrollTimeout) {\n                    this.$timeout.cancel(this.scrollTimeout);\n                    this.scrollTimeout = undefined;\n                }\n                let quadraticEase = k => k * (2 - k);\n\n                let interval = 40;\n                let currentScrollPos = this._getCurrentScrollPos();\n\n                let steps = Math.ceil(duration / interval);\n                let currentStep = 1;\n\n                let cycle = () => {\n                    let progress = currentStep / steps;\n                    this._scrollTo(currentScrollPos + quadraticEase(progress) * numOfRows);\n                    currentStep++;\n                    if (currentStep <= steps) {\n                        this.scrollTimeout = this.$timeout(() => cycle(), interval);\n                    }\n                    else {\n                        this.scrollTimeout = undefined;\n                        this.autoScrolling = false;\n                    }\n                };\n                this.autoScrolling = true;\n                cycle();\n\n            },\n            _scroll(numOfRows) {\n                if (!numOfRows)\n                    return;\n\n                let abs = Math.abs(numOfRows);\n                let sign = numOfRows / abs;\n                let full = Math.floor(abs);\n                this.virtualScrollIndex += sign * full;\n                this.virtScrollDisplacement += sign * (abs - full);\n                if (this.virtScrollDisplacement >= 1) {\n                    this.virtualScrollIndex += 1;\n                    this.virtScrollDisplacement -= 1;\n                }\n                if (this.virtScrollDisplacement < 0) {\n                    this.virtualScrollIndex -= 1;\n                    this.virtScrollDisplacement = 1 - Math.abs(this.virtScrollDisplacement);\n                }\n                if (this.virtualScrollIndex < 0) {\n                    this.virtualScrollIndex = 0;\n                    this.virtScrollDisplacement = 0;\n                }\n                if (this.virtualScrollIndex + this.itemsPerPage >= this.in.length) {\n                    this.virtualScrollIndex = this.in.length - this.itemsPerPage;\n                    this.virtScrollDisplacement = 0;\n                    if (this.bottomReachedListener) {\n                        this.bottomReachedListener();\n                    }\n                }\n\n                if (this.virtualScrollIndex + this.itemsPerPage >= this.in.length - 2) {\n                    if (this.bottomReachedListener) {\n                        this.bottomReachedListener();\n                    }\n                }\n\n                if (this.virtualScrollIndex < 0)\n                    this.virtualScrollIndex = 0;\n\n                this.syncFakeScroller(false);\n            },\n            _normalizeWheelEvent(event) {\n                var PIXEL_STEP = 10;\n                var LINE_HEIGHT = 40;\n                var PAGE_HEIGHT = 800;\n\n                var sX = 0, sY = 0, pX = 0, pY = 0;\n\n                if ('detail' in event) {\n                    sY = event.detail;\n                }\n                if ('wheelDelta' in event) {\n                    sY = -event.wheelDelta / 120;\n                }\n                if ('wheelDeltaY' in event) {\n                    sY = -event.wheelDeltaY / 120;\n                }\n                if ('wheelDeltaX' in event) {\n                    sX = -event.wheelDeltaX / 120;\n                }\n\n                // side scrolling on FF with DOMMouseScroll\n                if ('axis' in event && event.axis === event.HORIZONTAL_AXIS) {\n                    sX = sY;\n                    sY = 0;\n                }\n\n                pX = sX * PIXEL_STEP;\n                pY = sY * PIXEL_STEP;\n\n                if ('deltaY' in event) {\n                    pY = event.deltaY;\n                }\n                if ('deltaX' in event) {\n                    pX = event.deltaX;\n                }\n\n                if ((pX || pY) && event.deltaMode) {\n                    if (event.deltaMode == 1) {\n                        // delta in LINE units\n                        pX *= LINE_HEIGHT;\n                        pY *= LINE_HEIGHT;\n                    } else {\n                        // delta in PAGE units\n                        pX *= PAGE_HEIGHT;\n                        pY *= PAGE_HEIGHT;\n                    }\n                }\n\n                if (pX && !sX) {\n                    sX = pX < 1 ? -1 : 1;\n                }\n                if (pY && !sY) {\n                    sY = pY < 1 ? -1 : 1;\n                }\n\n                return {\n                    spinX: sX,\n                    spinY: sY,\n                    pixelX: pX,\n                    pixelY: pY\n                };\n            },\n            resetScroll() {\n                this.virtualScrollIndex = 0;\n                this.virtScrollDisplacement = 0;\n                this.syncFakeScroller(false);\n            },\n            centerOnItem(item) {\n                if (!this.ready) {\n                    this.whenReady.then(() => {\n                        this.centerOnItem(item);\n                    });\n                    return;\n                }\n\n                let prePaged = this.in;\n                let index = prePaged.indexOf(item);\n\n                let halfPage = Math.floor(this.itemsPerPage / 2);\n                if (prePaged.length <= this.itemsPerPage || index - halfPage < 0) {\n                    this.virtualScrollIndex = 0;\n                } else if (index + (this.itemsPerPage - halfPage) > prePaged.length) {\n                    this.virtualScrollIndex = prePaged.length - this.itemsPerPage;\n                } else {\n                    this.virtualScrollIndex = index - halfPage;\n                }\n\n                this.syncFakeScroller(false);\n            },\n            bringItemToView(item, jump = true) {\n                let prePaged = this.in;\n                let index = prePaged.indexOf(item);\n                if (index - 1 < this.virtualScrollIndex) {\n                    this.scrollTo(index, jump ? 0 : undefined);\n                } else if (index + 1 > this.virtualScrollIndex + this.itemsPerPage) {\n                    let fullItems = this.containerHeight ? Math.floor(this.containerHeight / this.itemHeight) : this.itemsPerPage;\n                    let scrollIndex = index - fullItems >= 0 ? index - fullItems : 0;\n                    let displace = this.containerHeight ? 1 - (this.containerHeight / this.itemHeight - fullItems) : 1;\n                    let hScrollFactor = 0;\n                    if (this._hasHorizontalScrollbar()) {\n                        let pixelFactor = this._getHorizontalScrollbarHeight();\n                        hScrollFactor = pixelFactor / this.itemHeight;\n                    }\n                    this.scrollTo(scrollIndex + displace + hScrollFactor, jump ? 0 : undefined);\n                }\n                this.syncFakeScroller(false);\n\n            },\n            _hasHorizontalScrollbar() {\n                let hScrollWrapper = $(this.$element).find('.h-scroll-wrapper');\n                return hScrollWrapper[0].scrollWidth > hScrollWrapper.width();\n            },\n            _getHorizontalScrollbarHeight() {\n                let hScrollWrapper = $(this.$element).find('.h-scroll-wrapper');\n                return hScrollWrapper.height() - hScrollWrapper[0].clientHeight;\n            },\n            _freezeVScroll() {\n                this.$freezedVScrollIndex = this.virtualScrollIndex;\n                this.$freezedVScrollDisplacement = this.virtScrollDisplacement;\n            },\n            _unFreezeVScroll() {\n                delete this.$freezedVScrollIndex;\n                delete this.$freezedVScrollDisplacement;\n            },\n            registerScrollListener(listener) {\n                if (!this.scrollListener) {\n                    this.scrollListener = listener;\n                    this.$scope.$watch(() => this.virtualScrollIndex + this.virtScrollDisplacement, () => {\n                        this.scrollListener(this._getCurrentScrollPos());\n                    });\n                }\n            },\n            registerBottomReachedListener(listener) {\n                this.bottomReachedListener = listener;\n            },\n            refresh() {\n                const { Vue } = VueFactory.getInstance();\n                Vue.nextTick(() => {\n                    this.containerHeight = $(this.$element).parent().height() + 1;\n                    this._setAutoItemsPerPage();\n                })\n            },\n            _initApi() {\n                if (this.api) {\n                    this.api.getPageData = () => this.getPage();\n                    this.api.reset = item => this.resetScroll();\n                    this.api.refresh = () => this.refresh();\n                    this.api.centerOnItem = item => this.centerOnItem(item);\n                    this.api.bringItemToView = (item, jump = true) => this.bringItemToView(item, jump);\n                    this.api.freezeScroll = () => this._freezeVScroll();\n                    this.api.unFreezeScroll = () => this._unFreezeVScroll();\n                    this.api.sync = () => this.syncFakeScroller(false);\n                    this.api.scroll = (numOfRows, duration = 500) => this.scroll(numOfRows, duration);\n                    this.api.scrollTo = (scrollPos, duration = 500) => this.scrollTo(scrollPos, duration);\n                    this.api.registerScrollListener = listener => this.registerScrollListener(listener);\n                    this.api.registerBottomReachedListener = listener => this.registerBottomReachedListener(listener);\n                    this.api.getItemsPerPage = () => this.getItemsPerPage();\n                    this.api.whenReady = () => this.whenReady;\n\n                }\n            }\n\n        }\n    }\n\n</script>\n\n<style scoped lang=\"less\">\n\n    /deep/ .v-scroll-container {\n        overflow: hidden;\n        position: relative;\n        .scroll-faker-container {\n            position: absolute;\n            width: 16px;\n            overflow: auto;\n            overflow-x: hidden;\n            z-index: 1000;\n            .scroll-faker {\n            }\n        }\n        .h-scroll-wrapper {\n            overflow-x: auto;\n            overflow-y: hidden;\n            .h-scroll-content {\n                display: inline-block;\n                min-width: 100%;\n\n            }\n        }\n    }\n\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=ad07fc8c&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=ad07fc8c&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"ad07fc8c\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"grid-batch-actions text-right\"},_vm._l((_vm.actions),function(action,$index){\nvar _obj;\nreturn _c('div',{directives:[{name:\"jf-tooltip\",rawName:\"v-jf-tooltip.bind\",value:(function () { return _vm.isDisabled(action) && action.getDisabledTooltip ? action.getDisabledTooltip() : ''; }),expression:\"() => isDisabled(action) && action.getDisabledTooltip ? action.getDisabledTooltip() : ''\",modifiers:{\"bind\":true}}],staticClass:\"grid-batch-action-wrapper\",class:{'more-actions': action === _vm.MORE_ACTIONS},style:({visibility: action === _vm.MORE_ACTIONS || (_vm.visibleActions && _vm.visibleActions.indexOf(action) !== -1) ? 'inherit' : 'hidden', opacity: action === _vm.MORE_ACTIONS || (_vm.visibleActions && _vm.visibleActions.indexOf(action) !== -1) ? 1 : 0}),attrs:{\"data-action-id\":action.name}},[(action !== _vm.MORE_ACTIONS && (!action.visibleWhen || action.visibleWhen()))?_c('a',{class:( _obj = {disabled: _vm.isDisabled(action)}, _obj['btn batch-action-' + action.icon] = true, _obj ),on:{\"click\":function($event){$event.preventDefault();return _vm.perform(action)}}},[(action.img)?_c('img',{attrs:{\"src\":'images/' + action.icon + '.png'}}):_vm._e(),(!action.img)?_c('i',{class:'icon icon-' + action.icon}):_vm._e(),_vm._v(\" \"+_vm._s(action.name)+\"\\n            \")]):_vm._e(),(action === _vm.MORE_ACTIONS)?_c('div',{staticClass:\"more-wrapper\"},[_c('jf-actions',{attrs:{\"parent-controller\":_vm.jfTableViewBatchActions,\"label\":\"More Actions\",\"init-method\":\"initActions\",\"show-drop-down-for-one-item\":true}})],1):_vm._e()])}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <div>\n        <div class=\"grid-batch-actions text-right\">\n            <div class=\"grid-batch-action-wrapper\"\n                 :class=\"{'more-actions': action === MORE_ACTIONS}\"\n                 v-for=\"(action, $index) in actions\"\n                 :data-action-id=\"action.name\"\n                 :style=\"{visibility: action === MORE_ACTIONS || (visibleActions && visibleActions.indexOf(action) !== -1) ? 'inherit' : 'hidden', opacity: action === MORE_ACTIONS || (visibleActions && visibleActions.indexOf(action) !== -1) ? 1 : 0}\"\n                 v-jf-tooltip.bind=\"() => isDisabled(action) && action.getDisabledTooltip ? action.getDisabledTooltip() : ''\">\n                <a :class=\"{disabled: isDisabled(action), ['btn batch-action-' + action.icon]: true}\"\n                   v-if=\"action !== MORE_ACTIONS && (!action.visibleWhen || action.visibleWhen())\"\n                   @click.prevent=\"perform(action)\">\n                    <img :src=\"'images/' + action.icon + '.png'\" v-if=\"action.img\">\n                    <i :class=\"'icon icon-' + action.icon\" v-if=\"!action.img\"></i> {{ action.name }}\n                </a>\n                <div class=\"more-wrapper\" v-if=\"action === MORE_ACTIONS\">\n                    <jf-actions :parent-controller=\"jfTableViewBatchActions\"\n                                label=\"More Actions\"\n                                init-method=\"initActions\"\n                                :show-drop-down-for-one-item=\"true\">\n                    </jf-actions>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n<script>\n    import map from 'lodash/map';\n    import find from 'lodash/find';\n    import filter from 'lodash/filter';\n    export default {\n        name: 'jf-table-view-batch-actions',\n        props: [\n            'actions',\n            'tableOptions'\n        ],\n        'jf@inject': [\n            '$element',\n            '$scope',\n            '$timeout'\n        ],\n        data() {\n            return { MORE_ACTIONS: { '@@MORE_ACTIONS@@': '@@MORE_ACTIONS@@' } };\n        },\n        mounted() {\n\n            this.$scope.$watch('jfTableViewBatchActions.tableOptions', () => {\n                if (!this.tableOptions)\n                    return;\n                this.tableOptions.on('selection.change', () => {\n                    this.$timeout(() => this.updateMoreActions());\n                });\n            });\n\n            this.$scope.$on('ui-layout.resize', () => {\n                this.$timeout(() => this.calcActionsVisibility());\n            });\n\n            $(window).on('resize', () => {\n                this.$timeout(() => this.calcActionsVisibility());\n            });\n\n            this.$scope.$watch('jfTableViewBatchActions.actions', () => this.$timeout(() => this.calcActionsVisibility()));\n\n            this.$timeout(() => {\n                this.calcActionsVisibility();\n                this.$forceUpdate();\n            });\n        },\n        ng1_legacy: { 'controllerAs': 'jfTableViewBatchActions' },\n        methods: {\n            perform(action) {\n                if (this.anySelected() && (!action.disabledWhen || !action.disabledWhen())) {\n                    action.callback && action.callback(this.tableOptions.getSelectedRows());\n                }\n            },\n            anySelected() {\n                return this.tableOptions && this.tableOptions.getSelectedRows().length > 0;\n            },\n            isDisabled(action) {\n                return !this.anySelected() || action.disabledWhen && action.disabledWhen();\n            },\n            calcActionsVisibility() {\n\n                if (!this.actions)\n                    return;\n\n                let visible = [];\n                let inDropDown = [];\n\n                let moreDropdownWidth = 125;\n\n                let elems = $(this.$element).find('.grid-batch-action-wrapper:not(.more-actions)');\n\n                let containerWidth = $(this.$element).children().width();\n\n                let totalWidth = 0;\n\n                let addTo = visible;\n\n                let moreActionsNewIndex = -1;\n                let moreActionsOldIndex = this.actions.indexOf(this.MORE_ACTIONS);\n\n\n                for (let i = 0; i < elems.length; i++) {\n                    let el = $(elems[i]);\n                    totalWidth += el.width();\n                    let id = el.attr('data-action-id');\n                    let act = find(this.actions, { name: id });\n                    let index = this.actions.indexOf(act);\n\n                    if ((totalWidth > containerWidth || this.moreActions && this.moreActions.length && totalWidth - el.width() + moreDropdownWidth > containerWidth) && addTo === visible) {\n                        addTo = inDropDown;\n                        moreActionsNewIndex = index;\n                        if (visible.length && totalWidth - el.width() + moreDropdownWidth > containerWidth) {\n                            let last = visible.pop();\n                            inDropDown.push(last);\n                            moreActionsNewIndex = this.actions.indexOf(last);\n                        }\n                    }\n\n                    if (act)\n                        addTo.push(act);\n                }\n\n                if (totalWidth < containerWidth) {\n                    inDropDown = [];\n                    visible = filter(this.actions, act => act !== this.MORE_ACTIONS);\n                    moreActionsNewIndex = -1;\n                }\n\n                let temp = { TEMP: 'TEMP' };\n                if (moreActionsOldIndex !== -1) {\n                    this.actions.splice(moreActionsOldIndex, 1, temp);\n                }\n                if (moreActionsNewIndex !== -1) {\n                    this.actions.splice(moreActionsNewIndex, 0, this.MORE_ACTIONS);\n                }\n                let tempIndex = this.actions.indexOf(temp);\n                if (tempIndex !== -1) {\n                    this.actions.splice(tempIndex, 1);\n                }\n\n                this.visibleActions = visible;\n                this.moreActions = inDropDown;\n                this.$timeout(() => this.updateMoreActions());\n\n            },\n            initActions(actionsController) {\n                this.moreActionsController = actionsController;\n                if (this.gridOptions)\n                    this.gridOptions.moreActionsController = actionsController;\n                this.updateMoreActions();\n            },\n            updateMoreActions() {\n\n                if (!this.moreActionsController)\n                    return;\n\n                let actionsCount = filter(this.actions, act => act !== this.MORE_ACTIONS).length;\n\n                if (this.moreActions.length < actionsCount) {\n                    this.moreActionsController.label = 'More Actions';\n                } else if (this.moreActions.length === actionsCount) {\n                    this.moreActionsController.label = 'Actions';\n                }\n\n\n                let dict = {};\n                this.moreActions.forEach(action => {\n                    dict[action.name] = {\n                        title: action.name,\n                        icon: 'icon-' + action.icon,\n                        disabled: this.isDisabled(action)\n                    };\n                });\n\n                this.moreActionsController.setActionsDictionary(dict);\n                this.moreActionsController.setActions(map(this.moreActions, action => {\n                    return {\n                        name: action.name,\n                        visibleWhen: action.visibleWhen,\n                        action: () => this.perform(action)\n                    };\n                }));\n            }\n        }\n    }\n\n</script>\n\n<style scoped lang=\"less\">\n\n\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=5f5fbece&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5f5fbece\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"jf-table-top clearfix\"},[(!_vm.tableView.options.getRawData().length || _vm.hasExternalFilter || _vm.tableView.options.filterVisible)?_c('div',{staticClass:\"counter-and-filter-wrapper\"},[(_vm.tableView.options && !_vm.tableView.options.noCount)?_c('div',{staticClass:\"table-counter\"},[_vm._v(_vm._s(_vm.totalRecords)),(_vm.tableView.getSelectedRecords())?_c('span',[_vm._v(\" (\"+_vm._s(_vm.tableView.getSelectedRecords())+\" Selected)\")]):_vm._e()]):_vm._e(),_c('div',{staticClass:\"external-filters\"},[_vm._t(\"external-filters\")],2),(!_vm.hasExternalFilter)?_c('div',{staticClass:\"jf-table-filter\"},[(_vm.tableView.options && _vm.tableView.options.filterVisible)?_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.tableView.tableFilter),expression:\"tableView.tableFilter\"},{name:\"init\",rawName:\"v-init\",value:(_vm.tableView.initFilter()),expression:\"tableView.initFilter()\"},{name:\"jf-tooltip\",rawName:\"v-jf-tooltip.bind\",value:(_vm.filterTooltip),expression:\"filterTooltip\",modifiers:{\"bind\":true}}],staticClass:\"input-text\",class:{'no-results': _vm.tableView.noFilterResults},attrs:{\"disabled\":_vm.isFilterDisabled(),\"ng-model-options\":\"{debounce: { 'default': 500 } }\",\"placeholder\":\"Filter\"},domProps:{\"value\":(_vm.tableView.tableFilter)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(_vm.tableView, \"tableFilter\", $event.target.value)},function($event){return _vm.tableView.onUpdateFilter()}]}}):_vm._e()]):_vm._e()]):_vm._e(),(_vm.tableView.options && _vm.tableView.options.batchActions && _vm.tableView.options.batchActions.length)?_c('div',{staticClass:\"batch-actions-wrapper\"},[_c('jf-table-view-batch-actions',{attrs:{\"table-options\":_vm.tableView.options,\"actions\":_vm.tableView.options.batchActions}})],1):_vm._e(),(_vm.tableView.options && _vm.tableView.paginationApi.getTotalPages() > 1)?_c('div',{staticClass:\"pagination-controls\"},[(_vm.tableView.paginationApi && _vm.tableView.options.paginationVisible)?_c('jf-drag-drop-pagination',{ref:\"pagination\",attrs:{\"pagination-api\":_vm.tableView.paginationApi}}):_vm._e()],1):_vm._e()])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <div>\n        <div class=\"jf-table-top clearfix\">\n            <div class=\"counter-and-filter-wrapper\"\n                 v-if=\"!tableView.options.getRawData().length || hasExternalFilter || tableView.options.filterVisible\">\n\n                <div v-if=\"tableView.options && !tableView.options.noCount\" class=\"table-counter\">{{ totalRecords }}<span v-if=\"tableView.getSelectedRecords()\"> ({{tableView.getSelectedRecords()}} Selected)</span></div>\n                <div class=\"external-filters\">\n                    <slot name=\"external-filters\"></slot>\n                </div>\n                <div class=\"jf-table-filter\" v-if=\"!hasExternalFilter\">\n                    <input class=\"input-text\"\n                           v-if=\"tableView.options && tableView.options.filterVisible\"\n                           :disabled=\"isFilterDisabled()\"\n                           v-model=\"tableView.tableFilter\"\n                           ng-model-options=\"{debounce: { 'default': 500 } }\"\n                           @input=\"tableView.onUpdateFilter()\"\n                           :class=\"{'no-results': tableView.noFilterResults}\"\n                           placeholder=\"Filter\"\n                           v-init=\"tableView.initFilter()\"\n                           v-jf-tooltip.bind=\"filterTooltip\">\n                </div>\n            </div>\n\n            <div class=\"batch-actions-wrapper\" v-if=\"tableView.options && tableView.options.batchActions && tableView.options.batchActions.length\">\n                <jf-table-view-batch-actions\n                    :table-options=\"tableView.options\"\n                    :actions=\"tableView.options.batchActions\">\n                </jf-table-view-batch-actions>\n            </div>\n\n            <div class=\"pagination-controls\" v-if=\"tableView.options && tableView.paginationApi.getTotalPages() > 1\">\n                <jf-drag-drop-pagination ref=\"pagination\" :pagination-api=\"tableView.paginationApi\" v-if=\"tableView.paginationApi && tableView.options.paginationVisible\">\n                </jf-drag-drop-pagination>\n            </div>\n\n        </div>\n    </div>\n\n</template>\n\n<script>\n\n    export default {\n        name: 'jf-table-top',\n        props: [\n            'tableView',\n            'totalRecords'\n        ],\n        data() {\n            return {};\n        },\n        computed: {\n            filterTooltip() {\n                return !this.tableView.options.tooltipFilterDisabled ? this.tableView.options.getFilterTooltip() : ''\n            },\n            hasExternalFilter () {\n                return !!this.$slots['external-filters'] || !!this.$scopedSlots['external-filters'];\n            }\n        },\n        ng1_legacy: { 'controllerAs': 'jfTableTop' },\n        methods: {\n            isFilterDisabled() {\n                return !(this.tableView.options && (this.tableView.options.getRawData().length || this.tableView.options.externalTotalCount && this.tableView.options.externalTotalCount.total > 0)) || this.tableView.options.isFilterDisabledCallback && this.tableView.options.isFilterDisabledCallback();\n            }\n        }\n    }\n\n</script>\n\n<style scoped lang=\"less\">\n\n\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=49daa7e8&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"49daa7e8\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.compiledTemplate)?_c(_vm.compiledTemplate.comp,_vm._b({tag:\"component\"},'component',_vm.compiledTemplate.props,false)):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <div>\n        <component v-if=\"compiledTemplate\" :is=\"compiledTemplate.comp\" v-bind=\"compiledTemplate.props\"></component>\n    </div>\n\n</template>\n\n<script>\n    export default {\n        name: 'jf-table-compiled-cell',\n        props: [\n            'field',\n            'rowId',\n            'tableRow'\n        ],\n        'jf@inject': [\n            '$element',\n            '$timeout',\n            '$scope'\n        ],\n        data() {\n            return {\n                compiledTemplate: null\n            };\n        },\n        mounted() {\n            this.setMfeRouter();\n            this.$scope.$watch('compiledCell.tableRow.data', () => {\n                this.compile();\n            });\n        },\n        ng1_legacy: { 'controllerAs': 'compiledCell' },\n        methods: {\n            setMfeRouter() {\n                const [mfe = { id: '' }] = $(this.$element).closest(\"div[id^=app-]\");\n                const mfeName = `${mfe.id || ''}`.replace('app-', '');\n                window.$jfrog.router = mfeName.length > 0 ? window.$jfrog.routersCache[mfeName] : window.$jfrog.router;\n            },\n            compile() {\n                if (!this.compiledTemplate) {\n                    this.compiledTemplate = this.tableRow.tableView.compileTemplate(this.field, this.rowId);\n                }\n                else {\n                    this.compiledTemplate.props = this.tableRow.tableView.compileTemplate(this.field, this.rowId).props;\n                }\n            }\n        }\n    }\n\n</script>\n\n<style scoped lang=\"less\">\n\n\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=15d45563&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"15d45563\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
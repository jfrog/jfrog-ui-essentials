{"version":3,"sources":["webpack://jfrog-ui-essentials/./src/plugins/JFrogUI/Ng1AttributeDirectiveAdapter.js","webpack://jfrog-ui-essentials/./src/directives/JfTooltipOnOverflowDirective.js"],"names":["Ng1AttributeDirectiveAdapter","linkFn","scopeDef","VueFactory","getInstance","Vue","el","binding","vnode","scope","entries","forEach","entry","camelCase","name","modifiers","bind","Object","defineProperty","get","context","expression","attributes","getNamedItem","kebabCase","value","ni","$data","thisObj","$inject","injections","prototype","$jfrog","injectOn","bindedFn","attrs","isFunction","trim","values","attr","$observe","path","cb","$watch","console","error","$","require","$sanitize","sanitizeMixin","methods","opts","shouldSanitize","html","patchedLinkFn","patchLinkFunction","ng1LinkFunction","$scope","$element","$attrs","on","e","targets","target","tooltipShown","isNoTooltip","cell","classList","contains","i","length","targetContent","children","text","scrollWidth","Math","round","innerWidth","hasClass","options","animation","contentAsHTML","trigger","onlyOne","interactive","position","theme","content","trustTooltipText","tooltipster"],"mappings":"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","file":"jfrog-ui-essentials.umd.JfTooltipOnOverflowDirective.js","sourcesContent":["import $ from 'jquery';\nimport { entries, values, camelCase, kebabCase, get, isFunction, trim } from 'lodash';\nimport {VueFactory} from \"../../services/VueFactory\";\n\nexport class Ng1AttributeDirectiveAdapter {\n    static patchLinkFunction(linkFn, scopeDef) {\n        const { Vue } = VueFactory.getInstance();\n\n        return function(el, binding, vnode) {\n            let scope;\n            if (scopeDef) {\n                scope = {};\n                entries(scopeDef).forEach(entry => {\n                    if (entry[0] === camelCase(binding.name)) {\n                        if (entry[1] === '=' || binding.modifiers.bind) {\n                            Object.defineProperty(scope, entry[0], {\n                                get() {\n                                    return get(vnode.context, binding.expression);\n                                }\n                            })\n                        }\n                        else {\n                            scope[entry[0]] = binding.expression;\n                        }\n                    }\n                    else {\n                        Object.defineProperty(scope, entry[0], {\n                            get() {\n                                if (entry[1] === '=') {\n                                    return get(vnode.context, el.attributes.getNamedItem(kebabCase(entry[0])).value);\n                                }\n                                else {\n                                    let ni = el.attributes.getNamedItem(kebabCase(entry[0]));\n                                    return ni ? ni.value : null;\n                                }\n                            }\n                        })\n                    }\n                })\n            }\n            else {\n                scope = vnode.context.$data;\n            }\n\n            let thisObj = {\n                $inject: (...injections) => {\n                    Vue.prototype.$jfrog.injectOn(thisObj, ...injections);\n                }\n            }\n            let bindedFn = linkFn.bind(thisObj);\n\n            let attrs = {};\n            if (binding.modifiers.bind) {\n                Object.defineProperty(attrs, camelCase(binding.name), {\n                    get() {\n                        if (!isFunction(binding.value)) {\n                            return get(vnode.context, trim(binding.expression, '\\''));\n                        }\n                        else {\n                            return binding.value();\n                        }\n                    }\n                })\n            }\n            else {\n                attrs[camelCase(binding.name)] = trim(binding.expression, '\\'');\n            }\n\n            values(el.attributes).forEach(attr => {\n                Object.defineProperty(attrs, camelCase(attr.name), {\n                    get() {\n                        return attr.value;\n                    }\n                })\n            });\n\n            attrs.$observe = (path, cb) => {\n                if (path === camelCase(binding.name)) {\n                    vnode.context.$watch(!isFunction(binding.value) ? binding.expression : binding.value, () => {\n                        if (get(vnode.context, trim(binding.expression, '\\''))) {\n                            cb(get(vnode.context, trim(binding.expression, '\\'')));\n                        }\n                        else if (isFunction(binding.value)) {\n                            cb(binding.value())\n                        }\n                    })\n                }\n                else {\n                    console.error('!!!!!!!!')\n                }\n            }\n\n            bindedFn(scope, $(el), attrs);\n\n        }\n\n    }\n}\n","import {Ng1AttributeDirectiveAdapter} from '@/plugins/JFrogUI/Ng1AttributeDirectiveAdapter';\nimport sanitizeMixin from '../mixins/Sanitize';\nimport 'jf-tooltipster/css/tooltipster.css';\nrequire('jf-tooltipster/js/jquery.tooltipster');\n\nconst {$sanitize} = sanitizeMixin.methods;\nexport default {\n    bind: function (el, binding, vnode) {\n        const opts = {\n            shouldSanitize: !binding.modifiers.html\n        }\n        let patchedLinkFn = Ng1AttributeDirectiveAdapter.patchLinkFunction(ng1LinkFunction.bind(this, opts), null);\n        patchedLinkFn(el, binding, vnode);\n    }\n};\n\nfunction ng1LinkFunction({shouldSanitize}, $scope, $element, $attrs) {\n    $($element).on('mouseenter', (e) => {\n        let targets = [$($element), $(e.target)];\n        let tooltipShown = false;\n        let isNoTooltip = (cell) => {\n            return (cell[0] && cell[0].classList && cell[0].classList.contains('no-tooltip'));\n        };\n\n        for (let i = 0; !tooltipShown && i < targets.length; i++) {\n            let target = targets[i];\n\n            let targetContent = target.children(':not(:visible)').length ? target.children(':visible')\n                .text()\n                .trim() : target.text().trim();\n            targetContent = (targetContent === '' ? null : targetContent);\n            targetContent = $sanitize(targetContent);\n            if (!isNoTooltip(target) && target[0].scrollWidth > Math.round(target.innerWidth())) {\n                if (!!targetContent && !target.hasClass('tooltipstered')) {\n                    let options = {\n                        animation: 'fade',\n                        contentAsHTML: 'true',\n                        trigger: 'hover',\n                        onlyOne: 'true',\n                        interactive: 'true',\n                        position: 'bottom',\n                        theme: 'tooltipster-default bottom',\n                        content: targetContent\n                    };\n                    if ($scope.trustTooltipText) {\n                        options.contentAsHTML = 'true';\n                    }\n                    target.tooltipster(options);\n                    target.tooltipster('show');\n                } else if (!!targetContent) {\n                    target.tooltipster('enable');\n\n                    if (target.tooltipster('content') != targetContent) {\n                        target.tooltipster('content', targetContent);\n                    }\n                }\n            } else if (target.hasClass('tooltipstered')) {\n                target.tooltipster('disable');\n            }\n        }\n    });\n    /*\n        $scope.$on('$destroy', () => {\n            $($element).off('mouseenter');\n            $($element).off('mouseleave');\n        });\n    */\n}\n\n"],"sourceRoot":""}
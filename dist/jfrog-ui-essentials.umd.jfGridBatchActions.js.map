{"version":3,"sources":["webpack://jfrog-ui-essentials/./src/components/JfGridBatchActionsComponent/index.vue?c8fb","webpack://jfrog-ui-essentials/src/components/JfGridBatchActionsComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfGridBatchActionsComponent/index.vue?9fad","webpack://jfrog-ui-essentials/./src/components/JfGridBatchActionsComponent/index.vue"],"names":[],"mappings":";;;;;;;;;;AAAA,0BAA0B,aAAa,0BAA0B,wBAAwB,2BAA2B,4CAA4C;AAChK;AACA,iBAAiB,aAAa,8LAA8L,aAAa,iDAAiD,4CAA4C,SAAS,uMAAuM,SAAS,8BAA8B,yFAAyF,gBAAgB,iCAAiC,6DAA6D,yBAAyB,wBAAwB,6BAA6B,yBAAyB,OAAO,wCAAwC,iCAAiC,iCAAiC,+GAA+G,2BAA2B,mBAAmB,OAAO,8HAA8H,iBAAiB;AAC/wC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACiBA;AACA,+BADA;AAEA,UACA,SADA,EAEA,SAFA,EAGA,aAHA,CAFA;AAOA,gBACA,UADA,EAEA,QAFA,EAGA,UAHA,CAPA;AAYA,MAZA,kBAYA;AACA;AAAA;AAAA;AAAA;AAAA;AACA,GAdA;AAeA,SAfA,qBAeA;AAAA;;AACA;AACA,0BACA;;AACA;AACA;AAAA;AAAA;AACA,OAFA;;AAGA;AACA;AAAA;AAAA;AACA,OAFA;AAGA,KATA;AAUA,GA1BA;AA2BA,SA3BA,qBA2BA;AAAA;;AAEA;;AACA;AAEA;AACA;AAAA;AAAA;AACA,KAFA;AAIA;;AACA;;AACA;AACA;AAAA;AAAA;AACA,KAFA;AAIA;;AACA;;AAEA;AAAA;AAAA;AAAA;AAAA;AAEA;;AACA;;AACA;AAAA;AAAA;AACA,GAlDA;AAmDA;AAAA;AAAA,GAnDA;AAoDA;AACA,WADA,mBACA,MADA,EACA;AACA;AACA;AACA;AACA,KALA;AAMA,eANA,yBAMA;AACA;AACA,KARA;AASA,cATA,sBASA,MATA,EASA;AACA;AACA,KAXA;AAYA,yBAZA,mCAYA;AAAA;;AAEA,yBACA;AAEA;AACA;AAEA;AAEA;AAEA;AAEA;AAEA;AAEA;AACA;;AAGA;AACA;AACA;AACA;;AACA;AAAA;AAAA;;AACA;;AAEA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AACA;AACA;;AAEA;AAAA;AAAA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;;AACA;AACA;AACA;;AAEA;AACA;AACA;AAAA;AAAA;AAEA,KA7EA;AA8EA,eA9EA,uBA8EA,iBA9EA,EA8EA;AACA;AACA,4BACA;AACA;AACA,KAnFA;AAoFA,qBApFA,+BAoFA;AAAA;;AAEA,uCACA;;AAEA;AAAA;AAAA;;AAEA;AACA;AACA,OAFA,MAEA;AACA;AACA;;AAGA;AACA;AACA;AACA,4BADA;AAEA,qCAFA;AAGA;AAHA;AAKA,OANA;AAQA;AACA;AACA;AACA,2BADA;AAEA,yCAFA;AAGA;AAHA;AAKA,OANA;AAOA;AAnHA;AApDA,G;;ACpB8U,CAAgB,sJAAG,EAAC,C;;;;;ACAlQ;AACvC;AACL;;;AAGpD;AAC6F;AAC7F,gBAAgB,8CAAU;AAC1B,EAAE,8DAAM;AACR,EAAE,MAAM;AACR,EAAE,eAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEe,kH","file":"jfrog-ui-essentials.umd.jfGridBatchActions.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{staticClass:\"grid-batch-actions text-right\"},_vm._l((_vm.actions),function(action,$index){\nvar _obj;\nreturn _c('div',{directives:[{name:\"jf-tooltip\",rawName:\"v-jf-tooltip.bind\",value:(_vm.isDisabled(action) ? action.getDisabledTooltip() : ''),expression:\"isDisabled(action) ? action.getDisabledTooltip() : ''\",modifiers:{\"bind\":true}}],staticClass:\"grid-batch-action-wrapper\",class:{'more-actions': action === _vm.MORE_ACTIONS},style:({visibility: action === _vm.MORE_ACTIONS || _vm.visibleActions.indexOf(action) !== -1 ? 'inherit' : 'hidden', opacity: action === _vm.MORE_ACTIONS || _vm.visibleActions.indexOf(action) !== -1 ? 1 : 0}),attrs:{\"data-action-id\":action.name}},[(action !== _vm.MORE_ACTIONS && (!action.visibleWhen || action.visibleWhen()))?_c('a',{class:( _obj = {disabled: _vm.isDisabled(action)}, _obj['btn batch-action-' + action.icon] = true, _obj ),on:{\"click\":function($event){$event.preventDefault();return _vm.perform(action)}}},[(action.img)?_c('img',{attrs:{\"src\":'images/' + action.icon + '.png'}}):_vm._e(),(!action.img)?_c('i',{class:'icon icon-' + action.icon}):_vm._e(),_vm._v(\" \"+_vm._s(action.name)+\"\\n            \")]):_vm._e(),(action === _vm.MORE_ACTIONS)?_c('div',{staticClass:\"more-wrapper\"},[_c('jf-actions',{attrs:{\"parent-controller\":_vm.jfBatchActions,\"label\":\"More Actions\",\"init-method\":\"initActions\",\"show-drop-down-for-one-item\":true}})],1):_vm._e()])}),0)])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\n    <div>\n        <div class=\"grid-batch-actions text-right\" >\n            <div class=\"grid-batch-action-wrapper\" :class=\"{'more-actions': action === MORE_ACTIONS}\" v-for=\"(action, $index) in actions\" :data-action-id=\"action.name\" :style=\"{visibility: action === MORE_ACTIONS || visibleActions.indexOf(action) !== -1 ? 'inherit' : 'hidden', opacity: action === MORE_ACTIONS || visibleActions.indexOf(action) !== -1 ? 1 : 0}\" v-jf-tooltip.bind=\"isDisabled(action) ? action.getDisabledTooltip() : ''\">\n                <a :class=\"{disabled: isDisabled(action), ['btn batch-action-' + action.icon]: true}\" v-if=\"action !== MORE_ACTIONS && (!action.visibleWhen || action.visibleWhen())\" @click.prevent=\"perform(action)\">\n                    <img :src=\"'images/' + action.icon + '.png'\" v-if=\"action.img\">\n                    <i :class=\"'icon icon-' + action.icon\" v-if=\"!action.img\"></i> {{ action.name }}\n                </a>\n                <div class=\"more-wrapper\" v-if=\"action === MORE_ACTIONS\">\n                    <jf-actions :parent-controller=\"jfBatchActions\" label=\"More Actions\" init-method=\"initActions\" :show-drop-down-for-one-item=\"true\"></jf-actions>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</template>\n\n<script>\n\n    export default {\n        name: 'jf-grid-batch-actions',\n        props: [\n            'actions',\n            'gridApi',\n            'gridOptions'\n        ],\n        'jf@inject': [\n            '$element',\n            '$scope',\n            '$timeout'\n        ],\n        data() {\n            return { MORE_ACTIONS: { '@@MORE_ACTIONS@@': '@@MORE_ACTIONS@@' } };\n        },\n        created() {\n            this.$scope.$watch('jfBatchActions.gridApi', () => {\n                if (!this.gridApi)\n                    return;\n                this.gridApi.selection.on.rowSelectionChanged(this.$scope, row => {\n                    this.$timeout(() => this.updateMoreActions());\n                });\n                this.gridApi.selection.on.rowSelectionChangedBatch(this.$scope, row => {\n                    this.$timeout(() => this.updateMoreActions());\n                });\n            });\n        },\n        mounted() {\n\n            /* (NG2VUE) This was moved from created() to mounted() */\n            /* (NG2VUE) Todo: If any other code in created() depends on this, it should also be moved here. */\n\n            this.$scope.$on('ui-layout.resize', () => {\n                this.$timeout(() => this.calcActionsVisibility());\n            });\n\n            /* (NG2VUE) This was moved from created() to mounted() */\n            /* (NG2VUE) Todo: If any other code in created() depends on this, it should also be moved here. */\n            $(window).on('resize', () => {\n                this.$timeout(() => this.calcActionsVisibility());\n            });\n\n            /* (NG2VUE) This was moved from created() to mounted() */\n            /* (NG2VUE) Todo: If any other code in created() depends on this, it should also be moved here. */\n\n            this.$scope.$watch('jfBatchActions.actions', () => this.$timeout(() => this.calcActionsVisibility()));\n\n            /* (NG2VUE) This was moved from created() to mounted() */\n            /* (NG2VUE) Todo: If any other code in created() depends on this, it should also be moved here. */\n            this.$timeout(() => this.calcActionsVisibility());\n        },\n        ng1_legacy: { 'controllerAs': 'jfBatchActions' },\n        methods: {\n            perform(action) {\n                if (this.anySelected() && (!action.disabledWhen || !action.disabledWhen())) {\n                    action.callback && action.callback(this.gridApi.selection.getSelectedRows());\n                }\n            },\n            anySelected() {\n                return this.gridApi && this.gridApi.selection.getSelectedRows().length > 0;\n            },\n            isDisabled(action) {\n                return !this.anySelected() || action.disabledWhen && action.disabledWhen();\n            },\n            calcActionsVisibility() {\n\n                if (!this.actions)\n                    return;\n\n                let visible = [];\n                let inDropDown = [];\n\n                let moreDropdownWidth = 115;\n\n                let elems = $(this.$element).find('.grid-batch-action-wrapper:not(.more-actions)');\n\n                let containerWidth = $(this.$element).width();\n\n                let totalWidth = 0;\n\n                let addTo = visible;\n\n                let moreActionsNewIndex = -1;\n                let moreActionsOldIndex = this.actions.indexOf(this.MORE_ACTIONS);\n\n\n                for (let i = 0; i < elems.length; i++) {\n                    let el = $(elems[i]);\n                    totalWidth += el.width();\n                    let id = el.attr('data-action-id');\n                    let act = _.find(this.actions, { name: id });\n                    let index = this.actions.indexOf(act);\n\n                    if ((totalWidth > containerWidth || this.moreActions && this.moreActions.length && totalWidth - el.width() + moreDropdownWidth > containerWidth) && addTo === visible) {\n                        addTo = inDropDown;\n                        moreActionsNewIndex = index;\n                        if (visible.length && totalWidth - el.width() + moreDropdownWidth > containerWidth) {\n                            let last = visible.pop();\n                            inDropDown.push(last);\n                            moreActionsNewIndex = this.actions.indexOf(last);\n                        }\n                    }\n\n                    if (act)\n                        addTo.push(act);\n                }\n\n                if (totalWidth < containerWidth) {\n                    inDropDown = [];\n                    visible = _.filter(this.actions, act => act !== this.MORE_ACTIONS);\n                    moreActionsNewIndex = -1;\n                }\n\n                let temp = { TEMP: 'TEMP' };\n                if (moreActionsOldIndex !== -1) {\n                    this.actions.splice(moreActionsOldIndex, 1, temp);\n                }\n                if (moreActionsNewIndex !== -1) {\n                    this.actions.splice(moreActionsNewIndex, 0, this.MORE_ACTIONS);\n                }\n                let tempIndex = this.actions.indexOf(temp);\n                if (tempIndex !== -1) {\n                    this.actions.splice(tempIndex, 1);\n                }\n\n                this.visibleActions = visible;\n                this.moreActions = inDropDown;\n                this.$timeout(() => this.updateMoreActions());\n\n            },\n            initActions(actionsController) {\n                this.moreActionsController = actionsController;\n                if (this.gridOptions)\n                    this.$set(this.gridOptions, 'moreActionsController', actionsController);\n                this.updateMoreActions();\n            },\n            updateMoreActions() {\n\n                if (!this.moreActionsController)\n                    return;\n\n                let actionsCount = _.filter(this.actions, act => act !== this.MORE_ACTIONS).length;\n\n                if (this.moreActions.length < actionsCount) {\n                    this.moreActionsController.label = 'More Actions';\n                } else if (this.moreActions.length === actionsCount) {\n                    this.moreActionsController.label = 'Actions';\n                }\n\n\n                let dict = {};\n                this.moreActions.forEach(action => {\n                    dict[action.name] = {\n                        title: action.name,\n                        icon: 'icon-' + action.icon,\n                        disabled: this.isDisabled(action)\n                    };\n                });\n\n                this.moreActionsController.setActionsDictionary(dict);\n                this.moreActionsController.setActions(_.map(this.moreActions, action => {\n                    return {\n                        name: action.name,\n                        visibleWhen: action.visibleWhen,\n                        action: action.callback\n                    };\n                }));\n            }\n        }\n    }\n\n</script>\n\n<style scoped lang=\"less\">\n\n\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=d5129628&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"d5129628\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}
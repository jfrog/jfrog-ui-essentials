{"version":3,"sources":["webpack://jfrog-ui-essentials/./src/components/JfMarkupEditorComponent/index.vue?5485","webpack://jfrog-ui-essentials/./src/components/JfMarkupEditorComponent/index.vue?1db5","webpack://jfrog-ui-essentials/src/components/JfMarkupEditorComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfMarkupEditorComponent/index.vue?e527","webpack://jfrog-ui-essentials/./src/components/JfMarkupEditorComponent/index.vue","webpack://jfrog-ui-essentials/./src/components/JfMarkupEditorComponent/index.vue?ed71"],"names":[],"mappings":"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","file":"jfrog-ui-essentials.umd.jfMarkupEditor.js","sourcesContent":["// extracted by mini-css-extract-plugin","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[(_vm.webworkerOk || _vm.previewersCount === 2)?_c('div',{staticClass:\"jf-markup-editor\",class:{'has-editor-label':_vm.editorLabel}},[_c('div',{staticClass:\"controls\"},[(_vm.editorLabel)?_c('div',{staticClass:\"editor-label\",class:{'editor-label-position':_vm.isInEditMode()}},[_vm._v(\"\\n                \"+_vm._s(_vm.editorLabel)+\"\\n            \")]):_vm._e(),(_vm.showControls && _vm.isEditable)?_c('div',{staticClass:\"lang-select-wrapper\"},[_c('jf-ui-select',{staticClass:\"form-group-cell\",attrs:{\"jf-select-disabled\":!_vm.isInEditMode(),\"jf-select-options\":['Markdown','Asciidoc','Plain Text']},on:{\"jf-select-change\":_vm.onLanguageChange},model:{value:(_vm.currentLanguage),callback:function ($$v) {_vm.currentLanguage=$$v},expression:\"currentLanguage\"}})],1):_vm._e(),(_vm.showControls)?_c('div',{staticClass:\"switch-wrapper\"},[_c('jf-switch',{ref:\"switchController\",staticClass:\"no-margin-top\",attrs:{\"options\":_vm.modeOptions},on:{\"input\":function($event){return _vm.onChangeModeInternal()}},model:{value:(_vm.currentMode),callback:function ($$v) {_vm.currentMode=$$v},expression:\"currentMode\"}})],1):_vm._e(),(!_vm.showControls && _vm.isEditable)?_c('button',{staticClass:\"btn btn-default edit-button\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.activateEditor()}}},[(_vm.value && _vm.value.length > 0)?_c('span',[_c('i',{staticClass:\"icon icon-edit-pen\"}),_c('span',[_vm._v(\"Edit\")])]):_vm._e(),(!_vm.value || _vm.value.length === 0)?_c('span',[_c('i',{staticClass:\"icon icon-new\"}),_c('span',[_vm._v(\"Add\")])]):_vm._e()]):_vm._e()]),(_vm.isInEditMode())?_c('div',{staticClass:\"code-mirror-wrapper codemirror-wrapper\"},[(_vm.currentLanguage === 'Markdown')?_c('jf-code-mirror',{key:_vm.currentLanguage,attrs:{\"mime-type\":\"text/x-markdown\",\"mode\":\"gfm\",\"allow-edit\":true,\"height\":\"100%\",\"autofocus\":!_vm.preventAutoFocus,\"enable-copy-to-clipboard\":\"value && value.length\",\"clipboard-copy-entity-name\":\"text\",\"value\":_vm.value},on:{\"input\":function($event){return _vm.$emit('input', arguments[0])}}}):_vm._e(),(_vm.currentLanguage === 'Asciidoc')?_c('jf-code-mirror',{key:_vm.currentLanguage,attrs:{\"mime-type\":\"text/x-markdown\",\"mode\":\"asciidoc\",\"allow-edit\":true,\"height\":\"100%\",\"autofocus\":!_vm.preventAutoFocus,\"enable-copy-to-clipboard\":\"value && value.length\",\"clipboard-copy-entity-name\":\"text\",\"value\":_vm.value},on:{\"input\":function($event){return _vm.$emit('input', arguments[0])}}}):_vm._e(),(_vm.currentLanguage === 'Plain Text')?_c('jf-code-mirror',{key:_vm.currentLanguage,attrs:{\"allow-edit\":true,\"height\":\"100%\",\"autofocus\":!_vm.preventAutoFocus,\"enable-copy-to-clipboard\":\"value && value.length\",\"clipboard-copy-entity-name\":\"text\",\"value\":_vm.value},on:{\"input\":function($event){return _vm.$emit('input', arguments[0])}}}):_vm._e(),(_vm.onSave)?_c('button',{staticClass:\"btn btn-primary save-button pull-right\",on:{\"click\":function($event){return _vm.onSaveClick()}}},[_vm._v(\"\\n                Save\\n            \")]):_vm._e(),(!_vm.hideCancelButton)?_c('button',{staticClass:\"btn btn-secondary clancel-button pull-right\",on:{\"click\":function($event){return _vm.onCancel()}}},[_vm._v(\"\\n                Cancel\\n            \")]):_vm._e()],1):_vm._e(),(!_vm.isInEditMode())?_c('div',{staticClass:\"preview-wrapper\"},[_c('div',{staticClass:\"preview\",class:{'empty-preview': !_vm.preview || _vm.preview.length === 0},domProps:{\"innerHTML\":_vm._s(_vm.preview)}}),(!_vm.preview)?_c('div',{staticClass:\"no-markup\"},[_c('span',[_vm._v(\"No markup available.\")]),_vm._v(\"Â \\n                \"),(!_vm.showControls && _vm.isEditable)?_c('a',{staticClass:\"jf-link\",on:{\"click\":function($event){$event.preventDefault();return _vm.activateEditor()}}},[_vm._v(\"\\n                    Add markup.\\n                \")]):_vm._e()]):_vm._e()]):_vm._e()]):_vm._e()])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n        <div class=\"jf-markup-editor\" :class=\"{'has-editor-label':editorLabel}\" v-if=\"webworkerOk || previewersCount === 2\">\n            <div class=\"controls\">\n                <div class=\"editor-label\" v-if=\"editorLabel\" :class=\"{'editor-label-position':isInEditMode()}\">\n                    {{editorLabel}}\n                </div>\n                <div class=\"lang-select-wrapper\" v-if=\"showControls && isEditable\">\n                    <jf-ui-select class=\"form-group-cell\"\n                                  :jf-select-disabled=\"!isInEditMode()\"\n                                  v-model=\"currentLanguage\"\n                                  @jf-select-change=\"onLanguageChange\"\n                                  :jf-select-options=\"['Markdown','Asciidoc','Plain Text']\">\n                    </jf-ui-select>\n                </div>\n                <div class=\"switch-wrapper\" v-if=\"showControls\">\n                    <jf-switch v-model=\"currentMode\" @input=\"onChangeModeInternal()\" :options=\"modeOptions\" ref=\"switchController\" class=\"no-margin-top\">\n                    </jf-switch>\n                </div>\n                <button class=\"btn btn-default edit-button\" type=\"button\" v-if=\"!showControls && isEditable\" @click=\"activateEditor()\">\n                    <span v-if=\"value && value.length > 0\">\n                    <i class=\"icon icon-edit-pen\"></i>\n                    <span>Edit</span>\n                    </span>\n                    <span v-if=\"!value || value.length === 0\">\n                    <i class=\"icon icon-new\"></i>\n                    <span>Add</span>\n                    </span>\n                </button>\n            </div>\n\n            <div class=\"code-mirror-wrapper codemirror-wrapper\"  v-if=\"isInEditMode()\">\n\n                <jf-code-mirror v-if=\"currentLanguage === 'Markdown'\"\n                                mime-type=\"text/x-markdown\"\n                                mode=\"gfm\"\n                                :allow-edit=\"true\"\n                                :key=\"currentLanguage\"\n                                height=\"100%\"\n                                :autofocus=\"!preventAutoFocus\"\n                                enable-copy-to-clipboard=\"value && value.length\"\n                                clipboard-copy-entity-name=\"text\"\n                                :value=\"value\" @input=\"$emit('input', arguments[0])\">\n                </jf-code-mirror>\n                <jf-code-mirror v-if=\"currentLanguage === 'Asciidoc'\"\n                                mime-type=\"text/x-markdown\"\n                                mode=\"asciidoc\"\n                                :allow-edit=\"true\"\n                                :key=\"currentLanguage\"\n                                height=\"100%\"\n                                :autofocus=\"!preventAutoFocus\"\n                                enable-copy-to-clipboard=\"value && value.length\"\n                                clipboard-copy-entity-name=\"text\"\n                                :value=\"value\" @input=\"$emit('input', arguments[0])\">\n                </jf-code-mirror>\n                <jf-code-mirror v-if=\"currentLanguage === 'Plain Text'\"\n                                :allow-edit=\"true\"\n                                :key=\"currentLanguage\"\n                                height=\"100%\"\n                                :autofocus=\"!preventAutoFocus\"\n                                enable-copy-to-clipboard=\"value && value.length\"\n                                clipboard-copy-entity-name=\"text\"\n                                :value=\"value\" @input=\"$emit('input', arguments[0])\">\n                </jf-code-mirror>\n                <button v-if=\"onSave\" @click=\"onSaveClick()\" class=\"btn btn-primary save-button pull-right\">\n                    Save\n                </button>\n                <button v-if=\"!hideCancelButton\" @click=\"onCancel()\" class=\"btn btn-secondary clancel-button pull-right\">\n                    Cancel\n                </button>\n            </div>\n\n            <div class=\"preview-wrapper\"  v-if=\"!isInEditMode()\">\n                <div class=\"preview\" :class=\"{'empty-preview': !preview || preview.length === 0}\" v-html=\"preview\">\n                </div>\n                <div class=\"no-markup\" v-if=\"!preview\">\n                    <span>No markup available.</span>&nbsp;\n                    <a class=\"jf-link\" v-if=\"!showControls && isEditable\" @click.prevent=\"activateEditor()\">\n                        Add markup.\n                    </a>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n</template>\n<script>\n    import SanitizeMixin from '../../mixins/Sanitize/index.js';\n\n    const PREVIEW_MODE  = 'Preview';\n    const EDIT_MODE = 'Edit';\n\n    export default {\n        name: 'jf-markup-editor',\n        props: [\n            'value',\n            'previewRenderers',\n            'language',\n            'mode',\n            'editable',\n            'showControls',\n            'hideCancelButton',\n            'editorLabel',\n            'preventAutoFocus'\n        ],\n        'jf@inject': [\n            '$timeout',\n            '$scope',\n            'JFrogUIWebWorker'\n        ],\n        mixins:[SanitizeMixin],\n        data() {\n            return {\n                webworkerOk: null,\n                previewersCount: null,\n                modeOptions: null,\n                onSave: null,\n                preview: '',\n                currentLanguage: this.language || 'Markdown',\n                currentMode: this.mode || EDIT_MODE,\n                isEditable: this.editable,\n                renderers: this.previewRenderers\n            };\n        },\n        created() {\n            this.EDIT_MODE = EDIT_MODE;\n            this.PREVIEW_MODE = PREVIEW_MODE;\n            this.instanceId = Math.floor(Math.random() * 10000000000);\n\n            this.JFrogUIWebWorker = new this.JFrogUIWebWorker();\n\n        },\n        mounted() {\n            this.checkPreviewers();\n            if (this.previewersCount === 2) {\n                this.init();\n            } else {\n                this.JFrogUIWebWorker.check().then(() => {\n\n                    this.JFrogUIWebWorker.open();\n\n                    this.webworkerOk = true;\n                    this.init();\n                }).catch(() => {\n                    console.error(`jf-code-mirror: Error: No preview render callback defined and WebWorker is not available.`);\n                });\n            }\n\n            this.$scope.$on('$destroy', () => {\n                if (this.webworkerOk)\n                    this.JFrogUIWebWorker.close();\n            });\n        },\n        ng1_legacy: { 'controllerAs': 'jfMarkup' },\n        methods: {\n            init() {\n                if (!this.value) this.$emit('input', '');\n                this.markupBackup = this.value;\n                this.languageBackup = this.currentLanguage;\n                if (this.isEditable === undefined) this.isEditable = true;\n\n                this.modeOptions = [\n                    EDIT_MODE,\n                    PREVIEW_MODE\n                ];\n\n                this.updatePreviewButton();\n\n                this.$scope.$watch('jfMarkup.value', () => {\n                    if (this.canRenderPreview()) {\n                        this.renderPreview();\n                    }\n                });\n            },\n            setPreview(preview) {\n                this.preview = this.$sanitize(preview);\n            },\n            currentLanguageHasPreviewRenderer() {\n                return this.renderers && this.renderers[this.currentLanguage.toLowerCase()];\n            },\n            canRenderPreview() {\n                return this.webworkerOk && !this.currentLanguageHasPreviewRenderer();\n            },\n            renderPreview() {\n\n                if (this.currentLanguage.toLowerCase() === 'plain text') {\n                    this.setPreview(this.value.replace(/\\n/g, '<br>'));\n                } else if (this.currentLanguageHasPreviewRenderer()) {\n                    this.renderers[this.currentLanguage.toLowerCase()](this.value, preview => this.setPreview(preview));\n                } else if (this.webworkerOk, this.currentLanguage, this.currentLanguage.toLowerCase(), this.instanceId) {\n                    this.JFrogUIWebWorker.markupPreview(this.currentLanguage.toLowerCase(), this.value, this.instanceId).then(html => this.setPreview(html));\n                }\n            },\n            updatePreviewButton() {\n                this.modeOptions = [\n                    EDIT_MODE,\n                    PREVIEW_MODE\n                ];\n            },\n            onLanguageChange() {\n                this.updatePreviewButton();\n                this.preview = '';\n                if (this.canRenderPreview()) {\n                    this.renderPreview();\n                }\n                this.$timeout(() => this.$refs.switchController.updateOptionObjects());\n            },\n            onChangeModeInternal() {\n                if (this.currentMode === PREVIEW_MODE)\n                    this.renderPreview();\n                this.$emit('on-mode-change', { mode: this.currentMode });\n            },\n            checkPreviewers() {\n\n                if (!this.renderers) {\n                    this.renderers = {};\n                    this.previewersCount = 0;\n                } else {\n                    if (this.renderers.markdown && this.renderers.asciidoc) {\n                        this.previewersCount = 2;\n                    } else if (this.renderers.markdown || this.renderers.asciidoc) {\n                        this.previewersCount = 1;\n                    }\n                }\n            },\n            onCancel() {\n                this.$timeout(() => {\n                    this.currentLanguage = this.languageBackup;\n                    this.$emit('input', this.markupBackup)\n                    this.preview = '';\n                    this.renderPreview();\n                    this.currentMode = PREVIEW_MODE;\n                    this.showControls = false;\n                });\n            },\n            onSaveClick() {\n                this.$timeout(() => {\n\n                    /* Todo: check the following condition. It may contain some undefined references: this.onSave */\n                    if (typeof this.onSave === 'function') {\n                        this.languageBackup = this.currentLanguage;\n                        this.markupBackup = this.value;\n                        this.$emit('on-save');\n                        this.showControls = false;\n                    }\n                });\n            },\n            activateEditor() {\n                this.currentMode = EDIT_MODE;\n                this.showControls = true;\n            },\n            isInEditMode() {\n                return this.showControls && this.currentMode === this.EDIT_MODE;\n            }\n        }\n    };\n\n</script>\n\n<style scoped lang=\"less\">\n\n    .jf-markup-editor{\n        .preview-wrapper{\n            //border: none;\n            .no-markup {\n                display: flex;\n                flex-direction: row;\n                align-items: center;\n                justify-content: center;\n                text-align: center;\n                background-color: #f8fafb;\n                font-weight: 600;\n                font-size: 14px;\n                color: #999db4;\n                line-height: 1.5em;\n                min-height: 80px;\n            }\n        }\n    }\n\n\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=339da561&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=339da561&scoped=true&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"339da561\",\n  null\n  \n)\n\nexport default component.exports","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/index.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./index.vue?vue&type=style&index=0&id=339da561&scoped=true&lang=less&\""],"sourceRoot":""}